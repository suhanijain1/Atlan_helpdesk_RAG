[{"content": "Configure Atlan Integrations Identity Management SSO On this page SSO Integration Overview: Connect Atlan with SSO to enable secure authentication, streamline user access, and enhance identity management. Get started \u200b How to enable Azure AD for SSO How to enable Google for SSO How to enable JumpCloud for SSO How to enable Okta for SSO How to enable OneLogin for SSO How to enable SAML 2.0 for SSO", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso", "title": "SSO Integration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ud for SSO How to enable Okta for SSO How to enable OneLogin for SSO How to enable SAML 2.0 for SSO Guides \u200b Authenticate SSO credentials to query data Authenticate SSO credentials to view sample data How to enable associated terms How to limit SSO automatically creating users when they log in How to set default user roles for SSO References \u200b SSO integration with PingFederate using SAML Troublesh", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso", "title": "SSO Integration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "o set default user roles for SSO References \u200b SSO integration with PingFederate using SAML Troubleshooting \u200b Troubleshooting SSO Troubleshooting connector-specific SSO authentication Why do I get a 404 error when using PingFederate SSO? Why do I get an authentication error when logging in via Okta for the first time? Why do I get an error while logging in via Google dashboard? Unable to log into A", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso", "title": "SSO Integration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "or the first time? Why do I get an error while logging in via Google dashboard? Unable to log into Atlan via SSO due to an internal error from Microsoft Defender FAQ \u200b Can Atlan integrate with multiple Azure AD tenants within a single instance? Can we use a Microsoft SSO login? What type of user provisioning does Atlan support for SSO integrations? When does Atlan become a personal data processor", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso", "title": "SSO Integration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "visioning does Atlan support for SSO integrations? When does Atlan become a personal data processor or subprocessor? Why did my users not receive an invite email from Atlan? Tags: integrations identity management sso Previous Troubleshooting SCIM provisioning Next How to enable Azure AD for SSO Get started Guides References Troubleshooting FAQ", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso", "title": "SSO Integration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "Configure Atlan Integrations Identity Management SSO Get Started How to enable Azure AD for SSO On this page Enable Azure AD for SSO Who can do this? You will need to be an admin user within Atlan to configure SSO. You will also need to work with your Azure AD administrator to carry out the tasks below in Azure AD. danger SSO group mappings are triggered every time a user authenticates in Atlan. A", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "low in Azure AD. danger SSO group mappings are triggered every time a user authenticates in Atlan. A user may need to log out and then log into Atlan again to view the changes. If a user is added to a new group or removed from an existing one in Azure AD, the updates will also be reflected in Atlan. To ensure that the sync is successful, the groups that the user belongs to should be mapped in Atla", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "To ensure that the sync is successful, the groups that the user belongs to should be mapped in Atlan, and if a group name has changed in Azure AD, you will need to update the group name in Atlan as well. For any questions about group mapping sync, head over here . To integrate Azure AD SSO for Atlan, complete the following steps. Choose SSO provider (in Atlan) \u200b To choose Azure AD as your SSO pro", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "n, complete the following steps. Choose SSO provider (in Atlan) \u200b To choose Azure AD as your SSO provider, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select Azure AD and then click Configure . Under Service provider metadata , copy the Identifier (Entity ID) , Reply URL (Assert Consumer Service URL) , an", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "e provider metadata , copy the Identifier (Entity ID) , Reply URL (Assert Consumer Service URL) , and Logout Url . Set up SAML app (in Azure AD) \u200b To set up a SAML app, within Azure's portal : From the menu on the left, open Azure Active Directory . Under Azure Active Directory | Overview click the Add button and then Enterprise application . Under Browser Azure AD Gallery click the Create your ow", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "Add button and then Enterprise application . Under Browser Azure AD Gallery click the Create your own application button: For What's the name of your app? enter a name, such as Atlan . For What are you looking to do with your application? select Integrate any other application you don't find in the gallery (Non-gallery) . At the bottom of the Create your own application dialog, click the Create bu", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "gallery (Non-gallery) . At the bottom of the Create your own application dialog, click the Create button. Wait for the application details to be shown - this can take around 1 minute. Under Getting Started and within the Set up single sign on tile, click the Get started link. Under Select a single sign-on method click the SAML tile. In the upper-right of the Basic SAML Configuration card, click th", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ign-on method click the SAML tile. In the upper-right of the Basic SAML Configuration card, click the Edit button and enter: For Identifier (Entity ID) click Add identifier and enter the value you copied from Atlan above. For Reply URL (Assertion Consumer Service URL) click Add reply URL (twice) and enter the two values you copied from Atlan above. The longer URL should be enabled under the Defaul", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "enter the two values you copied from Atlan above. The longer URL should be enabled under the Default column. For Logout Url (Optional) enter the value you copied from Atlan above. At the top of the page, under Basic SAML Configuration , click the Save button. Close the Basic SAML Configuration dialog by clicking X in the upper-right. In the upper-right of the Attributes & Claims card, click the E", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "og by clicking X in the upper-right. In the upper-right of the Attributes & Claims card, click the Edit button: Navigate to the Additional claims section, click each of the following claims to modify their Name exactly as suggested below and remove the Namespace value: email - > user.mail firstName - > user.givenname lastName - > user.surname (Optional) username - > ExtractMailPrefix(user.mail) in", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "- > user.givenname lastName - > user.surname (Optional) username - > ExtractMailPrefix(user.mail) info \ud83d\udcaa Did you know? For users assigned to Atlan through SSO, the username will be populated from the username mapping. Otherwise, the username will be the email prefix by default, which users can update while registering on Atlan for the first time. To configure group claims: From the options along t", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "e while registering on Atlan for the first time. To configure group claims: From the options along the top, click + Add a group claim . In the popover, under Which groups associated with the user should be returned in the claim? , select Groups assigned to the application . From the Source attribute dropdown, select Cloud-only group display names (Preview) . If you have a hybrid setup , select sAM", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "dropdown, select Cloud-only group display names (Preview) . If you have a hybrid setup , select sAMAccountName instead and then check the Emit group name for cloud-only groups checkbox. danger Please ensure that the Cloud-only group display names attribute contains the actual group display names. If not, you will need to update the source attribute with the relevant one that contains group displa", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "f not, you will need to update the source attribute with the relevant one that contains group display names. Click Advanced options to expand the dropdown menu: Check the Customize the name of the group claim box. For Name , enter memberOf . This is required if you want to retain group membership in Atlan. Click Save and close the popover by clicking X in the upper-right. Download Azure AD's metad", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Atlan. Click Save and close the popover by clicking X in the upper-right. Download Azure AD's metadata file (in Azure AD) \u200b To download Azure AD's metadata file, within the same Azure AD app's SAML-based Sign-on page: Within the SAML Signing Certificate card, to the right of Federation Metadata XML , click the Download link. Within the Set up <application> card, copy the Logout URL . Assign users", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": ", click the Download link. Within the Set up <application> card, copy the Logout URL . Assign users or groups to the app (in Azure AD) \u200b To assign users or groups to the app, within the Azure AD application's page: Under Manage, click Users and groups . At the top of the table, click the Add user/group button. In the resulting Add Assignment dialog, under the Users or Groups heading, click the No", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "roup button. In the resulting Add Assignment dialog, under the Users or Groups heading, click the None Selected link. In the resulting Users or Groups dialog, search for users or groups to add and click to select them. When finished, at the bottom of the Users or Groups dialog, click the Select button. At the bottom of the Add Assignment dialog, click the Assign button. Upload Azure AD's metadata", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "on. At the bottom of the Add Assignment dialog, click the Assign button. Upload Azure AD's metadata file (in Atlan) \u200b To complete the configuration of Azure AD SSO, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select Azure AD and then click Configure . To the right of Identity provider metadata click the I", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": ", select Azure AD and then click Configure . To the right of Identity provider metadata click the Import from XML button. Select the XML file downloaded from Azure AD above. Under Single Logout Service URL , enter the logout URL copied from Azure AD above. At the bottom of the screen, click Save . Congratulations - you have successfully set up Azure AD SSO in Atlan! \ud83c\udf89 Did you know? By default, us", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "Congratulations - you have successfully set up Azure AD SSO in Atlan! \ud83c\udf89 Did you know? By default, users can now log into Atlan with either Azure AD SSO or a local Atlan account (via email). To only allow logins via SSO, enable the Enforce SSO option in Atlan. Once SSO is enforced, we recommend asking your Azure AD administrator to provision access to users through the Azure portal and not directly", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "g your Azure AD administrator to provision access to users through the Azure portal and not directly from Atlan . When access has been provided, a user will be able to log into Atlan directly and their profile will be generated automatically. (Optional) Configure group mappings \u200b danger Before you can configure group mapping, you will first need to create groups in Atlan that correspond to the gro", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "an configure group mapping, you will first need to create groups in Atlan that correspond to the groups you want to map from Azure AD to Atlan. In addition, you must configure the memberOf attribute and group mapping to retain group membership in Atlan - irrespective of whether or not you enable SCIM . To automatically assign Azure AD users to Atlan groups based on their Azure AD groups, within At", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "M . To automatically assign Azure AD users to Atlan groups based on their Azure AD groups, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Change to the Groups Mapping tab. To the right of each Atlan group listed: Under the SSO Groups column, type the name of the corresponding group in Azure AD to map to the Atlan group on that row - for", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "mn, type the name of the corresponding group in Azure AD to map to the Atlan group on that row - for example, Data Engineering , Business Analysts , and so on. You will need to provide each Azure AD group with access to Atlan. Click the Save button on that row. As each user signs up to Atlan, they will be automatically assigned groups in Atlan based on these mappings! \ud83c\udf89 Did you know? You can confi", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ill be automatically assigned groups in Atlan based on these mappings! \ud83c\udf89 Did you know? You can configure SCIM provisioning in Azure AD to manage your users and groups in Atlan. Plus, once you've configured group mapping, you can add the mapped groups to a persona or purpose to auto-assign relevant permissions to users as they sign up in Atlan. Tags: integration connectors Previous SSO Integration", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ermissions to users as they sign up in Atlan. Tags: integration connectors Previous SSO Integration Next How to enable Google for SSO Choose SSO provider (in Atlan) Set up SAML app (in Azure AD) Download Azure AD's metadata file (in Azure AD) Assign users or groups to the app (in Azure AD) Upload Azure AD's metadata file (in Atlan) (Optional) Configure group mappings", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-azure-ad-for-sso", "title": "Enable  Azure AD for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "Configure Atlan Integrations Identity Management SSO Get Started How to enable Google for SSO On this page Enable Google for SSO Who can do this? You will need to be an admin user within Atlan to configure SSO. You will also need to work with your Google domain administrator to carry out the tasks below in the Google Admin Center. danger SSO group mappings are triggered every time a user authentic", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "elow in the Google Admin Center. danger SSO group mappings are triggered every time a user authenticates in Atlan. A user may need to log out and then log into Atlan again to view the changes. If a user is added to a new group or removed from an existing one in Google, the updates will also be reflected in Atlan. To ensure that the sync is successful, the groups that the user belongs to should be", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "cted in Atlan. To ensure that the sync is successful, the groups that the user belongs to should be mapped in Atlan, and if a group name has changed in Google, you will need to update the group name in Atlan as well. For any questions about group mapping sync, head over here . To integrate Google SSO for Atlan, complete the fo llowing steps. Choose SSO provider (in Atlan) \u200b To choose Google as you", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "O for Atlan, complete the fo llowing steps. Choose SSO provider (in Atlan) \u200b To choose Google as your SSO provider, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select Google and then click Configure . Under Service provider metadata , copy the ACS URL and Entity ID . Set up SAML app (in Google Admin Cente", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Service provider metadata , copy the ACS URL and Entity ID . Set up SAML app (in Google Admin Center) \u200b To set up a SAML app, within Google Admin Center : From the menu on the left, expand Apps and then click on Web and mobile apps . At the top of the table, click the Add app link and then click Add custom SAML app . Enter a name for your app, such as Atlan and then click the Continue button. Und", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "d custom SAML app . Enter a name for your app, such as Atlan and then click the Continue button. Under Option 1: Download IdP metadata click the Download metadata button, save the file, and then click the Continue button. Under Service provider details , enter your Atlan SAML settings: For ACS URL , enter the value you copied from Atlan above. For Entity ID , enter the value you copied from Atlan", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "enter the value you copied from Atlan above. For Entity ID , enter the value you copied from Atlan above. Click the Continue button. Under Attributes , define the following mappings from Google Directory attributes on the left to App attributes on the right: Primary email - > email First name - > firstName Last name - > lastName (Optional) To configure group mapping in Atlan , under Group members", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "irstName Last name - > lastName (Optional) To configure group mapping in Atlan , under Group membership (optional) , enter the following details: For Google Groups , select all the Google groups you want to map to Atlan. You can select up to 75 groups in total. For App attribute , enter memberOf . This is required if you want to retain group membership in Atlan. At the end of the form, click the F", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "his is required if you want to retain group membership in Atlan. At the end of the form, click the Finish button. Assign users to the app (in Google Admin Center) \u200b To assign users to the app, within Google Admin Center : From the app page, expand User access . Under Service status change to ON for everyone and then click Save . Upload Google's metadata file (in Atlan) \u200b To complete the configurat", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "everyone and then click Save . Upload Google's metadata file (in Atlan) \u200b To complete the configuration of Google SSO, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select Google and then click Configure . To the right of Identity provider metadata click the Import from XML button. Select the GoogleIDPMetad", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "the right of Identity provider metadata click the Import from XML button. Select the GoogleIDPMetadata.xml file downloaded from Google above. At the bottom of the screen, click Save . Congratulations - you have successfully set up Google SSO in Atlan! \ud83c\udf89 Did you know? By default, users can now log into Atlan with either Google SSO or a local Atlan account (via email). To only allow logins via SSO,", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "nto Atlan with either Google SSO or a local Atlan account (via email). To only allow logins via SSO, enable the Enforce SSO option in Atlan. Once SSO is enforced, we recommend asking your Google domain administrator to provision access to users through the Google Admin Center and not directly from Atlan . When access has been provided, a user will be able to log into Atlan directly and their profi", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "tlan . When access has been provided, a user will be able to log into Atlan directly and their profile will be generated automatically. (Optional) Configure group mappings \u200b danger Before you can configure group mapping, you will first need to create groups in Atlan that correspond to the groups you want to map from Google to Atlan. In addition, you must configure the memberOf attribute and group", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "want to map from Google to Atlan. In addition, you must configure the memberOf attribute and group mapping to retain group membership in Atlan. To automatically assign Google users to Atlan groups based on their Google groups, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Change to the Groups Mapping tab. To the right of each Atlan gr", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "r the Workspace heading, click SSO . Change to the Groups Mapping tab. To the right of each Atlan group listed: Under the SSO Groups column, type the name of the corresponding group in Google to map to the Atlan group on that row - for example, Data Engineering , Business Analysts , and so on. You will need to provide each Google group with access to Atlan. Click the Save button on that row. As ea", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ill need to provide each Google group with access to Atlan. Click the Save button on that row. As each user signs up to Atlan, they will be automatically assigned groups in Atlan based on these mappings! \ud83c\udf89 Did you know? Once you've configured group mapping, you can add the mapped groups to a persona or purpose to auto-assign relevant permissions to users as they sign up in Atlan. Tags: integration", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "or purpose to auto-assign relevant permissions to users as they sign up in Atlan. Tags: integration connectors Previous How to enable Azure AD for SSO Next How to enable JumpCloud for SSO Choose SSO provider (in Atlan) Set up SAML app (in Google Admin Center) Assign users to the app (in Google Admin Center) Upload Google's metadata file (in Atlan) (Optional) Configure group mappings", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-google-for-sso", "title": "Enable  Google for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "Configure Atlan Integrations Identity Management SSO Get Started How to enable Okta for SSO On this page Enable Okta for SSO Who can do this? You will need to be an admin user within Atlan to configure SSO. You will also need to work with your Okta administrator to carry out the tasks below in Okta. danger SSO group mappings are triggered every time a user authenticates in Atlan. A user may need t", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "danger SSO group mappings are triggered every time a user authenticates in Atlan. A user may need to log out and then log into Atlan again to view the changes. If a user is added to a new group or removed from an existing one in Okta, the updates will also be reflected in Atlan. To ensure that the sync is successful, the groups that the user belongs to should be mapped in Atlan, and if a group na", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "sync is successful, the groups that the user belongs to should be mapped in Atlan, and if a group name has changed in Okta, you will need to update the group name in Atlan as well. For any questions about group mapping sync, head over here . To integrate Okta SSO for Atlan, complete the foll owing steps. Choose SSO provider (in Atlan) \u200b To choose Okta as your SSO provider, within Atlan: From the l", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "teps. Choose SSO provider (in Atlan) \u200b To choose Okta as your SSO provider, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select Okta and then click Configure . Under Service provider metadata , copy the Single sign on URL and Audience URI (SP Entity ID) . Set up SAML app (in Okta) \u200b To set up a SAML app, w", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "le sign on URL and Audience URI (SP Entity ID) . Set up SAML app (in Okta) \u200b To set up a SAML app, within Okta's administration console: From the menu on the left, expand Applications and then click on Applications . At the top of the table, click the Create App Integration button. In the Create a new app integration dialog, select SAML 2.0 and then click Next . Under General Settings enter: For A", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ew app integration dialog, select SAML 2.0 and then click Next . Under General Settings enter: For App name , enter a name for the application, such as Atlan . Click the Next button. Under SAML Settings - General enter: For Single sign on URL enter the value you copied from the field of the same name in Atlan above. Ensure Use this for Recipient URL and Destination URL is enabled. For Audience URI", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "e in Atlan above. Ensure Use this for Recipient URL and Destination URL is enabled. For Audience URI (SP Entity ID) enter the value you copied from the field of the same name in Atlan above. Under Attribute Statements (optional) define the following mappings from Name (Name format) on the left to Value on the right: firstName (Basic) - > user.firstName lastName (Basic) - > user.lastName email (Bas", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "lue on the right: firstName (Basic) - > user.firstName lastName (Basic) - > user.lastName email (Basic) - > user.email group (Basic) - > user.group info \ud83d\udcaa Did you know? For users assigned to Atlan through SSO, the username will be populated from the username mapping. Otherwise, the username will be the email prefix by default, which users can update while registering on Atlan for the first time. U", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "the email prefix by default, which users can update while registering on Atlan for the first time. Under Group Attribute Statements (optional for SSO login, required for group sync) define the following mappings from Name (Name format) on the left to Filter on the right: memberOf (Unspecified) - > Matches regex [\\s\\S]+ - for examples of how to filter groups with regex in Okta, refer to Okta docume", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "atches regex [\\s\\S]+ - for examples of how to filter groups with regex in Okta, refer to Okta documentation . This is required if you want to retain group membership in Atlan. While this step is optional for basic SSO authentication, you must configure the memberOf attribute if you want to sync Okta groups to Atlan and use group-based access control At the bottom of the form, click the Next button", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "groups to Atlan and use group-based access control At the bottom of the form, click the Next button. Under Help Okta Support understand how you configured this application select I'm an Okta customer adding an internal app and for App type enable This is an internal app that we have created . Click the Finish button. Download Okta's metadata file (in Okta) \u200b To download Okta's metadata file, with", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "the Finish button. Download Okta's metadata file (in Okta) \u200b To download Okta's metadata file, within the Okta app's page: Open the Sign On tab. Under the SAML Signing Certificates heading, in the table, click the Actions link under the Actions column. From the drop-down, click View IdP metadata . Save the XML file, if it appears in plain text in your browser. Assign users to the app (in Okta) \u200b", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "Save the XML file, if it appears in plain text in your browser. Assign users to the app (in Okta) \u200b To assign users to the app, within the Okta app's page: Open the Assignments tab. At the top of the table, click the Assign button and select Assign to People to add individual users or Assign to Groups to add groups. To the right of each user to whom you want to assign the application, click Assign", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ps to add groups. To the right of each user to whom you want to assign the application, click Assign . To assign the application to a group, you may have to locate it first. For individual users, confirm that the data is correct in the Assign Atlan to People dialog. For groups, complete the fields in the Assign Atlan to Groups dialog if it appears. Click Save and Go Back . Repeat steps 3 to 5 for", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "n the Assign Atlan to Groups dialog if it appears. Click Save and Go Back . Repeat steps 3 to 5 for each user or group to which you want to assign the application. When finished, in the respective dialog box, click Done . Upload Okta's metadata file (in Atlan) \u200b To complete the configuration of Okta SSO, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace headin", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "SSO, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select Okta and then click Configure . To the right of Identity provider metadata click the Import from XML button. Select the XML file saved from Okta above. At the bottom of the screen, click Save . Congratulations - you have successfully set up Okta SSO", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "e. At the bottom of the screen, click Save . Congratulations - you have successfully set up Okta SSO in Atlan! \ud83c\udf89 Did you know? By default, users can now log into Atlan with either Okta SSO or a local Atlan account (via email). To only allow logins via SSO, enable the Enforce SSO option in Atlan. Once SSO is enforced, we recommend asking your Okta administrator to provision access to users through", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "e SSO is enforced, we recommend asking your Okta administrator to provision access to users through Okta and not directly from Atlan . When access has been provided, a user will be able to log into Atlan directly and their profile will be generated automatically. (Optional) Configure group mappings \u200b danger Before you can configure group mapping, you will first need to create groups in Atlan that", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "\u200b danger Before you can configure group mapping, you will first need to create groups in Atlan that correspond to the groups you want to map from Okta to Atlan. In addition, you must configure the memberOf attribute and group mapping to retain group membership in Atlan - irrespective of whether or not you enable SCIM . To automatically assign Okta users to Atlan groups based on their Okta groups,", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ot you enable SCIM . To automatically assign Okta users to Atlan groups based on their Okta groups, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Change to the Groups Mapping tab. To the right of each Atlan group listed: Under the SSO Groups column, type the name of the corresponding group in Okta to map to the Atlan group on that row", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "oups column, type the name of the corresponding group in Okta to map to the Atlan group on that row - for example, Data Engineering , Business Analysts , and so on. You will need to provide each Okta group with access to Atlan. Click the Save button on that row. As each user signs up to Atlan, they will be automatically assigned groups in Atlan based on these mappings! \ud83c\udf89 Did you know? You can conf", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "will be automatically assigned groups in Atlan based on these mappings! \ud83c\udf89 Did you know? You can configure SCIM provisioning in Okta to manage your users and groups in Atlan. Plus, once you've configured group mapping, you can add the mapped groups to a persona or purpose to auto-assign relevant permissions to users as they sign up in Atlan. Tags: integration connectors Previous How to enable JumpC", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "issions to users as they sign up in Atlan. Tags: integration connectors Previous How to enable JumpCloud for SSO Next How to enable OneLogin for SSO Choose SSO provider (in Atlan) Set up SAML app (in Okta) Download Okta's metadata file (in Okta) Assign users to the app (in Okta) Upload Okta's metadata file (in Atlan) (Optional) Configure group mappings", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-okta-for-sso", "title": "Enable  Okta for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "Configure Atlan Integrations Identity Management SSO Get Started How to enable OneLogin for SSO On this page Enable OneLogin for SSO Who can do this? You will need to be an admin user within Atlan to configure SSO. You will also need to work with your OneLogin administrator to carry out the tasks below in OneLogin. danger SSO group mappings are triggered every time a user authenticates in Atlan. A", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "low in OneLogin. danger SSO group mappings are triggered every time a user authenticates in Atlan. A user may need to log out and then log into Atlan again to view the changes. If a user is added to a new group or removed from an existing one in OneLogin, the updates will also be reflected in Atlan. To ensure that the sync is successful, the groups that the user belongs to should be mapped in Atla", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "To ensure that the sync is successful, the groups that the user belongs to should be mapped in Atlan, and if a group name has changed in OneLogin, you will need to update the group name in Atlan as well. For any questions about group mapping sync, head over here . To integrate OneLogin SSO for Atlan, complete the following steps. Choose SSO provider (in Atlan) \u200b To choose OneLogin as your SSO pro", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "n, complete the following steps. Choose SSO provider (in Atlan) \u200b To choose OneLogin as your SSO provider, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select OneLogin and then click Configure . Under Service provider metadata , copy the Audience (EntityID) , Recipient , ACS (Consumer) URL Validator , and", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "e provider metadata , copy the Audience (EntityID) , Recipient , ACS (Consumer) URL Validator , and ACS (Consumer) URL . Set up SAML application (in OneLogin) \u200b To set up a SAML application, within OneLogin admin console: From the menu along the top, navigate to Applications and then click on Applications . In the upper right, click the Add App button. In the search box, enter saml custom and then", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ations . In the upper right, click the Add App button. In the search box, enter saml custom and then click SAML Custom Connector (Advanced) . Under Display Name enter a name for your app, such as Atlan and then click the Save button. Change to the Configuration tab and under Application details enter your Atlan SAML settings: For Audience (EntityID) enter the value you copied from Atlan above. For", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "r your Atlan SAML settings: For Audience (EntityID) enter the value you copied from Atlan above. For Recipient enter the value you copied from Atlan above. For ACS (Consumer) URL Validator enter the value you copied from Atlan above. For ACS (Consumer) URL enter the value you copied from Atlan above. For Login URL enter the same value used for the fields above. Change to the SSO tab and change the", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": ". For Login URL enter the same value used for the fields above. Change to the SSO tab and change the following: For SAML Signature Algorithm set SHA-512 . Under Login Hint ensure Enable login hint is checked. Change to the Parameters tab and use the circular + icon to add mappings for the following: email - > Email firstName - > First Name lastName - > Last Name In the upper right, click the Save", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "email - > Email firstName - > First Name lastName - > Last Name In the upper right, click the Save button. Download OneLogin's metadata file (in OneLogin) \u200b To download the metadata file for the application, within OneLogin: From the application page, in the upper right navigate to More Actions and click SAML Metadata . (Optional) Map groups to the app (in OneLogin) \u200b To map OneLogin groups to th", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "click SAML Metadata . (Optional) Map groups to the app (in OneLogin) \u200b To map OneLogin groups to the app, within the OneLogin application: In the top left, click the Users tab, and from the dropdown, select Mappings . Under Mappings , click New Mapping to create a new group mapping for Atlan. In the New Mapping dialog, enter the following details: For Name , enter a meaningful name for your group", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "e New Mapping dialog, enter the following details: For Name , enter a meaningful name for your group mapping - for example, SSOGroupA . Under Conditions , click the + button and enter the following details: From the attributes dropdown, select Group to map all your OneLogin groups to Atlan. From the operators dropdown, select is . From the values dropdown, select the group name. Under Actions , en", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "operators dropdown, select is . From the values dropdown, select the group name. Under Actions , enter the following details: From the Set role dropdown, select Set memberOf . This is required if you want to retain group membership in Atlan. From the Set memberOf to dropdown, enter the group name. Click Save to confirm your selections. Under Mappings , click New Mapping to remove any group mappin", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "Click Save to confirm your selections. Under Mappings , click New Mapping to remove any group mappings if none are selected. In the New Mapping dialog, enter the following details: For Name , enter a meaningful name for your group mapping - for example, clearMemberOf . Under Conditions , click the + button and enter the following details: From the attributes dropdown, select Group . From the opera", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "button and enter the following details: From the attributes dropdown, select Group . From the operators dropdown, select is . From the values dropdown, keep the default selection None . Under Actions , enter the following details: From the Set role dropdown, select Set memberOf . From the Set memberOf to dropdown, leave as blank. Click Save to confirm your selections. Under Mappings , click the R", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "rOf to dropdown, leave as blank. Click Save to confirm your selections. Under Mappings , click the Reapply All Mappings tab, and in the corresponding screen, click Continue to confirm. In the top left, click the Applications tab, and from the dropdown, click Applications . Under Applications , select your SAML application. From the left menu of SAML Custom Connector (Advanced) , click Parameters .", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "t your SAML application. From the left menu of SAML Custom Connector (Advanced) , click Parameters . In the upper right of the parameters page, click the + button to add a new parameter. In the New Field dialog, enter the following details: For Field name , enter memberOf . For Flags , check the Include in SAML assertion box. Click Save to proceed to the next step. In the corresponding Edit Field", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "lude in SAML assertion box. Click Save to proceed to the next step. In the corresponding Edit Field memberOf dialog, from the Value dropdown, select MemberOf . Click Save to confirm your selections. If any of your OneLogin users do not belong to any groups, you can either add them to an existing group or create a new one. Once you have configured group mapping in Atlan , they will be able to log i", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "up or create a new one. Once you have configured group mapping in Atlan , they will be able to log in to Atlan and assigned the same permissions as their OneLogin group. Upload OneLogin's metadata file (in Atlan) \u200b To complete the configuration of OneLogin SSO, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider ,", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "y screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select OneLogin and then click Configure . To the right of Identity provider metadata click the Import from XML button. Select the onelogin_metadata_1234567.xml file downloaded from OneLogin above. At the bottom of the screen, click Save . Congratulations - you have successfully set up OneLogin SSO", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "the bottom of the screen, click Save . Congratulations - you have successfully set up OneLogin SSO in Atlan! \ud83c\udf89 Did you know? By default, users can now log into Atlan with either OneLogin SSO or a local Atlan account (via email). To only allow logins via SSO, enable the Enforce SSO option in Atlan. Once SSO is enforced, we recommend asking your OneLogin administrator to provision access to users t", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "Once SSO is enforced, we recommend asking your OneLogin administrator to provision access to users through OneLogin and not directly from Atlan . When access has been provided, a user will be able to log into Atlan directly and their profile will be generated automatically. (Optional) Configure group mappings \u200b danger Before you can configure group mapping, you will first need to create groups in", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "p mappings \u200b danger Before you can configure group mapping, you will first need to create groups in Atlan that correspond to the groups you want to map from OneLogin to Atlan. In addition, you must configure the memberOf attribute and group mapping to retain group membership in Atlan. To automatically assign OneLogin users to Atlan groups based on their OneLogin groups, within Atlan: From the left", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ly assign OneLogin users to Atlan groups based on their OneLogin groups, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Change to the Groups Mapping tab. To the right of each Atlan group listed: Under the SSO Groups column, type the name of the corresponding group in OneLogin to map to the Atlan group on that row - for example, Data Eng", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "of the corresponding group in OneLogin to map to the Atlan group on that row - for example, Data Engineering , Business Analysts , and so on. You will need to provide each OneLogin group with access to Atlan. Click the Save button on that row. As each user signs up to Atlan, they will be automatically assigned groups in Atlan based on these mappings! \ud83c\udf89 Did you know? Once you've configured group ma", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ly assigned groups in Atlan based on these mappings! \ud83c\udf89 Did you know? Once you've configured group mapping, you can add the mapped groups to a persona or purpose to auto-assign relevant permissions to users as they sign up in Atlan. Tags: integration connectors Previous How to enable Okta for SSO Next How to enable SAML 2.0 for SSO Choose SSO provider (in Atlan) Set up SAML application (in OneLogin", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "t How to enable SAML 2.0 for SSO Choose SSO provider (in Atlan) Set up SAML application (in OneLogin) Download OneLogin's metadata file (in OneLogin) (Optional) Map groups to the app (in OneLogin) Upload OneLogin's metadata file (in Atlan) (Optional) Configure group mappings", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-onelogin-for-sso", "title": "Enable  OneLogin for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "Configure Atlan Integrations Identity Management SSO Get Started How to enable SAML 2.0 for SSO On this page Enable SAML 2.0 for SSO Who can do this? You will need to be an admin user within Atlan to configure SSO. You will also need to work with your SAML 2.0 administrator to carry out the tasks below in your custom IdP. danger SSO group mappings are triggered every time a user authenticates in A", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "low in your custom IdP. danger SSO group mappings are triggered every time a user authenticates in Atlan. A user may need to log out and then log into Atlan again to view the changes. If a user is added to a new group or removed from an existing one in SAML 2.0, the updates will also be reflected in Atlan. To ensure that the sync is successful, the groups that the user belongs to should be mapped", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Atlan. To ensure that the sync is successful, the groups that the user belongs to should be mapped in Atlan, and if a group name has changed in SAML 2.0, you will need to update the group name in Atlan as well. For any questions about group mapping sync, head over here . To integrate SAML 2.0 SSO for Atlan, complete the following steps. Choose SSO provider (in Atlan) \u200b To choose SAML 2.0 as your", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "or Atlan, complete the following steps. Choose SSO provider (in Atlan) \u200b To choose SAML 2.0 as your SSO provider, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select SAML 2.0 and then click Configure . For Alias , type in an alias for the SAML 2.0 connection and then click Next . Under Service provider met", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "lias , type in an alias for the SAML 2.0 connection and then click Next . Under Service provider metadata , copy the Atlan SAML Assertion URL and Atlan Audience URI (SP Entity ID) . Set up SAML app (in custom IdP) \u200b If you have PingFederate as your IdP, refer to SSO integration with PingFederate using SAML for the SAML assertion URL to use. To set up a SAML app within your custom IdP: Create a new", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ng SAML for the SAML assertion URL to use. To set up a SAML app within your custom IdP: Create a new SAML application in your IdP with the name Atlan . For Entity/Issuer ID , enter the Atlan Audience URI (SP Entity ID) value you copied from above. For Assertion Consumer Service (ACS) URL , enter the Atlan SAML Assertion URL value you copied from above. Add the required users and groups to the appl", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Atlan SAML Assertion URL value you copied from above. Add the required users and groups to the application. Configure the IdP to return the following attributes in the SAML response: firstName lastName email memberOf (listing the user's group memberships, which will be required for group mapping in Atlan) Save the SAML metadata XML file for the SSO URL and X.509 public certificate file of the IdP", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Atlan) Save the SAML metadata XML file for the SSO URL and X.509 public certificate file of the IdP. danger The SSO URL must be accessible from Atlan via an internet connection. Configure IdP details (in Atlan) \u200b To complete the configuration of SAML 2.0 SSO, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , s", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "screen, navigate to Admin . Under the Workspace heading, click SSO . Under Choose SAML provider , select SAML 2.0 and then click Configure . For Alias , type in an alias for the SAML 2.0 connection and then click Next . To the right of Identity provider metadata, click the Import from XML button. Select the XML file saved from the IdP above. For Attribute Mapper , modify the IdP attribute names f", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "elect the XML file saved from the IdP above. For Attribute Mapper , modify the IdP attribute names for email, first name, and last name if these will be different in the IdP SAML response. (Optional) For Customize , under Sign in button text , type any custom message you'd like your users to see on the Atlan login screen. At the bottom of the screen, click Save . Congratulations - you have success", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "the Atlan login screen. At the bottom of the screen, click Save . Congratulations - you have successfully set up SSO for your custom IdP in Atlan! \ud83c\udf89 Did you know? By default, users can now log into Atlan with either SAML 2.0 SSO or a local Atlan account (via email). To only allow logins via SSO, enable the Enforce SSO option in Atlan. Once SSO is enforced, we recommend asking your SAML 2.0 adminis", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ble the Enforce SSO option in Atlan. Once SSO is enforced, we recommend asking your SAML 2.0 administrator to provision access to users through your custom IdP and not directly from Atlan . When access has been provided, a user will be able to log into Atlan directly and their profile will be generated automatically. (Optional) Configure group mappings \u200b danger Before you can configure group mappi", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ted automatically. (Optional) Configure group mappings \u200b danger Before you can configure group mapping, you will first need to create groups in Atlan that correspond to the groups you want to map from your custom IdP to Atlan. In addition, you must configure the memberOf attribute and group mapping to retain group membership in Atlan. To automatically assign SSO users to Atlan groups based on thei", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "to retain group membership in Atlan. To automatically assign SSO users to Atlan groups based on their custom IdP groups, within Atlan: From the left menu on any screen, navigate to Admin . Under the Workspace heading, click SSO . Change to the Groups Mapping tab. To the right of each Atlan group listed: Under the SSO Groups column, type the name of the corresponding group in your custom IdP to map", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ted: Under the SSO Groups column, type the name of the corresponding group in your custom IdP to map to the Atlan group on that row - for example, Data Engineering , Business Analysts , and so on. You will need to provide each custom IdP group with access to Atlan. Click the Save button on that row. As each user signs up to Atlan, they will be automatically assigned groups in Atlan based on these", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "As each user signs up to Atlan, they will be automatically assigned groups in Atlan based on these mappings! \ud83c\udf89 Did you know? Once you've configured group mapping, you can add the mapped groups to a persona or purpose to auto-assign relevant permissions to users as they sign up in Atlan. Tags: integration connectors Previous How to enable OneLogin for SSO Next Authenticate SSO credentials to query", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ration connectors Previous How to enable OneLogin for SSO Next Authenticate SSO credentials to query data Choose SSO provider (in Atlan) Set up SAML app (in custom IdP) Configure IdP details (in Atlan) (Optional) Configure group mappings", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/how-tos/enable-saml-2-0-for-sso", "title": "Enable  SAML 2.0 for SSO | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "Configure Atlan Integrations Identity Management SSO Troubleshooting Okta first-time login authentication error On this page Okta first-time login authentication error Why do I get an authentication error when logging in via Okta for the first time? \u200b It is possible that your Okta account is not yet linked with your Atlan account. Here are two ways to troubleshoot: Ensure that the service provider", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/faq/okta-first-time-login-error", "title": "Okta first-time login authentication error | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "linked with your Atlan account. Here are two ways to troubleshoot: Ensure that the service provider metadata details are copied accurately. If you're logged into Atlan, please log out from Atlan. Once you've logged out of Atlan, clear your browser cache and then continue. Tags: integration connectors faq-integrations Previous PingFederate SSO 404 error Next Google Dashboard login error", "metadata": {"source_url": "https://docs.atlan.com/product/integrations/identity-management/sso/faq/okta-first-time-login-error", "title": "Okta first-time login authentication error | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Get Started Core Concepts Authentication and authorization On this page Authentication and authorization Atlan supports the following authentication methods: Basic authentication \u200b Atlan initially comes with basic or username-password authentication. Admins can invite new users to log into Atlan. When a new user opens the invitation link, they will be able to set up their user profile, including u", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "en a new user opens the invitation link, they will be able to set up their user profile, including username and password. However, Atlan does not recommend using basic authentication. Instead, admins should configure and enforce SSO authentication . SSO authentication \u200b SSO using SAML 2.0 \u200b Atlan supports single sign-on (SSO), allowing admins to configure SSO authentication. Atlan currently suppor", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "pports single sign-on (SSO), allowing admins to configure SSO authentication. Atlan currently supports the following SSO providers: Azure AD Google JumpCloud Okta OneLogin Custom IdP SSO using SCIM \u200b System for Cross-domain Identity Management (SCIM) provisioning works in combination with SSO. Atlan currently supports SCIM provisioning for the following SSO providers: Azure AD Okta Authorization \u200b", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "currently supports SCIM provisioning for the following SSO providers: Azure AD Okta Authorization \u200b Role-based access control (RBAC) \u200b Atlan implements role-based access control (RBAC) to ensure that users have the minimum level of access required to perform their tasks. Access rights are assigned based on roles, and users are granted permissions according to their responsibilities. A system owne", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "based on roles, and users are granted permissions according to their responsibilities. A system owner or an authorized party must approve any additional permissions. Atlan adheres to the principle of least privilege, ensuring that users are only granted the level of access necessary to perform their job functions. User access review (UAR) \u200b Atlan recommends that admins perform access reviews of us", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "job functions. User access review (UAR) \u200b Atlan recommends that admins perform access reviews of users, admins, and service accounts on a quarterly basis to ensure that appropriate access levels are maintained. Access reviews should also be documented. Identity and access management \u200b For centralized management of groups and users, Atlan uses granular access policies . Admins can define policies", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ed management of groups and users, Atlan uses granular access policies . Admins can define policies to control both which actions a user can take and against which assets. These can be as broad as entire databases down to individual columns. Organizations can even build policies based on asset classification. This opens up the ability to restrict access to sensitive data like Personally Identifiab", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ification. This opens up the ability to restrict access to sensitive data like Personally Identifiable Information (PII) - an essential feature in the GDPR era. Atlan denies access by default , and explicit denials override any grants . You can even deny admin users access to assets, if you want. Roles \u200b You must assign every user in Atlan a user role . These control basic levels of access. Groups", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "les \u200b You must assign every user in Atlan a user role . These control basic levels of access. Groups \u200b You can also add users to groups . Groups provide a more maintainable mechanism for applying access controls. Policies \u200b You can define access policies for both users and groups. Through these policies you can restrict which users can take which actions on which assets. For example, you can set u", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "cies you can restrict which users can take which actions on which assets. For example, you can set up tags such as PII and apply this to data assets like tables. You can also configure the tag to propagate downstream to any columns or tables created from them. You can then define access controls based on these tags to restrict access to tagged assets. If Atlan propagates tags for you to derived as", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ed on these tags to restrict access to tagged assets. If Atlan propagates tags for you to derived assets, the access control is automatically applied to those derived assets as well. Tags: atlan documentation Previous Atlan's open API Next Data and metadata persistence Basic authentication SSO authentication Authorization Identity and access management", "metadata": {"source_url": "https://docs.atlan.com/platform/concepts/authentication-and-authorization", "title": "Authentication and authorization | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Setting up Retrieving metadata What is an asset? When you know the asset When you need to find it first Updating metadata Importance of identifiers Limit to changes on", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "asset When you need to find it first Updating metadata Importance of identifiers Limit to changes only Bulk changes Where to go from here An introductory walkthrough \u00b6 Atlan University You might also like our Atlan Platform Essentials certification . Not sure where to start? Allow us to introduce Atlan development through example. 1 Setting up \u00b6 We strongly recommend using one of our SDKs to simpl", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "lan development through example. 1 Setting up \u00b6 We strongly recommend using one of our SDKs to simplify the development process. As a first step, set one up: Java Python Kotlin Go The SDK is available on Maven Central , ready to be included in your project: build.gradle.kts repositories { mavenCentral () } dependencies { implementation ( \"com.atlan:atlan-java:+\" ) // (1) testRuntimeOnly ( \"ch.qos.", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "al () } dependencies { implementation ( \"com.atlan:atlan-java:+\" ) // (1) testRuntimeOnly ( \"ch.qos.logback:logback-classic:1.2.11\" ) // (2) } Include the latest version of the Java SDK in your project as a dependency. You can also give a specific version instead of the + , if you'd like. The Java SDK uses slf4j for logging purposes. You can include logback as a simple binding mechanism to send an", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "DK uses slf4j for logging purposes. You can include logback as a simple binding mechanism to send any logging information out to your console (standard out). Provide two values to create an Atlan client: AtlanLiveTest.java 1 2 3 4 5 6 7 8 9 10 11 12 import com.atlan.AtlanClient ; public class AtlanLiveTest { public static void main ( String [] args ) { try ( AtlanClient client = new AtlanClient (", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "iveTest { public static void main ( String [] args ) { try ( AtlanClient client = new AtlanClient ( \"https://tenant.atlan.com\" , // (1) \"...\" ) // (2) ) { // (3) } } } Provide your Atlan tenant URL as the first parameter. You can also read the value from an environment variable, if you leave out both parameters. Provide your API token as the second parameter. You can also read the value from anoth", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "h parameters. Provide your API token as the second parameter. You can also read the value from another environment variable, by leaving out this parameter. You can then start writing some actual code to run within a static main method. (We'll show some examples of this further below.) Once the block is complete, any resources held by the client (i.e. for caching) will be automatically released. Se", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "is complete, any resources held by the client (i.e. for caching) will be automatically released. Set up logging for SDK You can also checkout to the advanced configuration section of the SDK to learn about how to set up logging. The SDK is available on PyPI . You can use pip to install it as follows: Install the SDK pip install pyatlan Provide two values to create an Atlan client: atlan_live_test", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "s: Install the SDK pip install pyatlan Provide two values to create an Atlan client: atlan_live_test.py 1 2 3 4 5 6 from pyatlan.client.atlan import AtlanClient client = AtlanClient ( base_url = \"https://tenant.atlan.com\" , # (1) api_key = \"...\" # (2) ) Provide your Atlan tenant URL to the base_url parameter. (You can also do this through environment variables .) Provide your API token to the api_", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "parameter. (You can also do this through environment variables .) Provide your API token to the api_key parameter. (You can also do this through environment variables .) Set up logging for SDK You can also checkout to the advanced configuration section of the SDK to learn about how to set up logging. The SDK is available on Maven Central , ready to be included in your project: build.gradle.kts rep", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": ". The SDK is available on Maven Central , ready to be included in your project: build.gradle.kts repositories { mavenCentral () } dependencies { implementation ( \"com.atlan:atlan-java:+\" ) // (1) implementation ( \"io.github.microutils:kotlin-logging-jvm:3.0.5\" ) // (2) implementation ( \"org.slf4j:slf4j-simple:2.0.7\" ) } Include the latest version of the Java SDK in your project as a dependency. Yo", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "f4j-simple:2.0.7\" ) } Include the latest version of the Java SDK in your project as a dependency. You can also give a specific version instead of the + , if you'd like. The Java SDK uses slf4j for logging purposes. You can include slf4j-simple as a simple binding mechanism to send any logging information out to your console (standard out), along with the kotlin-logging-jvm microutil. Provide two v", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ation out to your console (standard out), along with the kotlin-logging-jvm microutil. Provide two values to create an Atlan client: AtlanLiveTest.kt 1 2 3 4 5 6 7 8 9 10 import com.atlan.AtlanClient; fun main () { AtlanClient ( \"https://tenant.atlan.com\" , // (1) \"...\" // (2) ). use { client -> // (3) } } Provide your Atlan tenant URL as the first parameter. You can also read the value from an en", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "(3) } } Provide your Atlan tenant URL as the first parameter. You can also read the value from an environment variable, if you leave out both parameters. Provide your API token as the second parameter. You can also read the value from another environment variable, by leaving out this parameter. You", "metadata": {"source_url": "https://developer.atlan.com/getting-started/", "title": "Introductory walkthrough - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Integration options \u00b6 Throughout the portal you can focus on your preferred integration approach (and switch between them as you like): CLI Use the Atlan CLI to manage data contracts fo", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "on approach (and switch between them as you like): CLI Use the Atlan CLI to manage data contracts for assets in Atlan. Get started with CLI dbt Use dbt's meta field to enrich metadata resources straight from dbt into Atlan. Get started with dbt Java Pull our Java SDK from Maven Central, just like any other dependency. Get started with Java Python Pull our Python SDK from PyPI, just like any other", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "y other dependency. Get started with Java Python Pull our Python SDK from PyPI, just like any other dependency. Get started with Python Kotlin Pull our Java SDK from Maven Central, just like any other dependency. Get started with Kotlin Scala Pull our Java SDK from Maven Central, just like any other dependency. Get started with Scala Clojure Pull our Java SDK from Maven Central, just like any othe", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "dependency. Get started with Scala Clojure Pull our Java SDK from Maven Central, just like any other dependency. Get started with Clojure Go Pull our Go SDK from GitHub, just like any other dependency. Get started with Go Events Tap into events Atlan produces to take immediate action, as metadata changes. Get started with events Raw REST API You can call directly into our REST API, though we woul", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "hanges. Get started with events Raw REST API You can call directly into our REST API, though we would recommend the SDKs. Get started with raw REST APIs 2023-04-19 2025-01-17 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/sdks/", "title": "Integration options - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Java Table of contents Obtain the SDK Configure the SDK Using environment variables On client creation What's next? Error-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectivity Using a prox", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "rror-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectivity Using a proxy Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "gestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your l", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "k update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "erse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Mana", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mes", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ts Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom meta", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access even", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ropagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Suppor", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage gene", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "s assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Ter", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Sp", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "E ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineag", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "inessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequ", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEn", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "te StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGl", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnector", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_usern", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "alidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstract", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "tType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeH", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ery organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSigh", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "oDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimensi", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSConta", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "t AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cogn", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDat", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosD", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "gle Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion Matill", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "er LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "icroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Mon", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetData", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "eport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook S", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "forceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Table", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotVi", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "tspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Obtain the SDK Configure the SDK Using environment variables On client creation What's next? Error-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectivity Using a proxy Java SDK \u00b6 Atlan University Walk through step-by-ste", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "imeouts Multi-tenant connectivity Using a proxy Java SDK \u00b6 Atlan University Walk through step-by-step in our intro to custom integration course (30 mins). Obtain the SDK \u00b6 The SDK is available on Maven Central, ready to be included in your project: Gradle Maven build.gradle repositories { mavenCentral () } dependencies { implementation \"com.atlan:atlan-java:+\" // (1) testRuntimeOnly 'ch.qos.logbac", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "al () } dependencies { implementation \"com.atlan:atlan-java:+\" // (1) testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.11' // (2) } Include the latest version of the Java SDK in your project as a dependency. You can also give a specific version instead of the + , if you'd like. The Java SDK uses slf4j for logging purposes. You can include logback as a simple binding mechanism to send any loggin", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "slf4j for logging purposes. You can include logback as a simple binding mechanism to send any logging information out to your console (standard out), at INFO -level or above. pom.xml <dependency> <groupId> com.atlan </groupId> <artifactId> atlan-java </artifactId> <version> ${atlan.version} </version> </dependency> Configure the SDK \u00b6 There are two ways to configure the SDK: Using environment vari", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "n> </dependency> Configure the SDK \u00b6 There are two ways to configure the SDK: Using environment variables \u00b6 ATLAN_API_KEY should be given your Atlan API token , for authentication ( don't forget to assign one or more personas to the API token to give access to existing assets! ) ATLAN_BASE_URL should be given your Atlan URL (for example, https://tenant.atlan.com ) Here's an example of setting thos", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "d be given your Atlan URL (for example, https://tenant.atlan.com ) Here's an example of setting those environment variables: Set environment variables export ATLAN_BASE_URL=https://tenant.atlan.com export ATLAN_API_KEY=\"...\" AtlanLiveTest.java 1 2 3 4 5 6 7 8 9 import com.atlan.AtlanClient ; public class AtlanLiveTest { public static void main ( String [] args ) { try ( AtlanClient client = new At", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "class AtlanLiveTest { public static void main ( String [] args ) { try ( AtlanClient client = new AtlanClient ()) { // Do something with the client } } } On client creation \u00b6 If you prefer to not use environment variables, you can do the following: AtlanLiveTest.java 1 2 3 4 5 6 7 8 9 10 11 12 import com.atlan.AtlanClient ; public class AtlanLiveTest { public static void main ( String [] args ) {", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "t com.atlan.AtlanClient ; public class AtlanLiveTest { public static void main ( String [] args ) { try ( AtlanClient client = new AtlanClient ( \"https://tenant.atlan.com\" , \"...\" ) ) { // Do something with the client } } } Careful not to expose your API token! We generally discourage including your API token directly in your code, in case you accidentally commit it into a (public) version control", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "API token directly in your code, in case you accidentally commit it into a (public) version control system. But it's your choice exactly how you manage the API token and including it for use within the client. (Note that you can also explicity provide only the tenant URL, and the constructor will look for only the API key through an environment variable.) That's it \u2014 once these are set you can st", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ook for only the API key through an environment variable.) That's it \u2014 once these are set you can start using your SDK to make live calls against your Atlan instance! \ud83c\udf89 What's next? \u00b6 Delve into more detailed examples: Common tasks Common operations on assets, that are available across all assets. Discover actions Asset-specific Operations that are specific to certain assets. Focus on a specific k", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "iscover actions Asset-specific Operations that are specific to certain assets. Focus on a specific kind of asset Governance structures Operations dealing with governance structures, rather than assets. Manage governance structures Samples Real code samples our customers use to solve particular use cases. Review live samples Searching Delve deep into searching and aggregating metadata. Learn more a", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ases. Review live samples Searching Delve deep into searching and aggregating metadata. Learn more about searching Events Delve deep into the details of the events Atlan triggers. Learn more about events Error-handling \u00b6 The SDK defines checked exceptions for the following categories of error: Exception Description ApiConnectionException Errors when the SDK is unable to connect to the API, for exa", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "tion Description ApiConnectionException Errors when the SDK is unable to connect to the API, for example due to a lack of network access or timeouts. AuthenticationException Errors when the API token configured for the SDK is invalid or expired. ConflictException Errors when there is some conflict w", "metadata": {"source_url": "https://developer.atlan.com/sdks/java/", "title": "Java SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Python Table of contents Obtain the SDK Configure the SDK Using environment variables On client creation What's next? Error-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectivity Pro", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "s next? Error-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectivity Proxies Asynchronous SDK operations Basic search example Concurrent operations for improved performance Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (clas", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "rations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse cat", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "lossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "sets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manag", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "e Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profili", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "age data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagati", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "dges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Pac", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "trieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "igQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets F", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "onal assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "gged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPol", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "g Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloud", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "flow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute Starr", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "uleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCa", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "isionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidatio", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "licy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType ta", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "k_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataCont", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "Glossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query orga", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "g SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGloba", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace Anaplan", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "l QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLin", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "zure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmo", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "zure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "y Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder Looke", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "aConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStra", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "oard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEnt", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "Workspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport Po", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "rBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceFie", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Sp", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAns", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "c TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Obtain the SDK Configure the SDK Using environment variables On client creation What's next? Error-handling Advanced configuration Logging Retries Timeouts", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "bles On client creation What's next? Error-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectivity Proxies Asynchronous SDK operations Basic search example Concurrent operations for improved performance Python SDK \u00b6 Atlan University Walk through step-by-step in our intro to custom integration course (30 mins). Obtain the SDK \u00b6 The SDK is currently available on pypi . You", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "o custom integration course (30 mins). Obtain the SDK \u00b6 The SDK is currently available on pypi . You can use pip to install it as follows: Install the SDK pip install pyatlan Configure the SDK \u00b6 There are two ways to configure the SDK: Using environment variables \u00b6 ATLAN_API_KEY should be given your Atlan API token , for authentication ( don't forget to assign one or more personas to the API token", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Atlan API token , for authentication ( don't forget to assign one or more personas to the API token to give access to existing assets! ) ATLAN_BASE_URL should be given your Atlan URL (for example, https://tenant.atlan.com ) Here's an example of setting those environment variables: Set environment variables export ATLAN_BASE_URL=https://tenant.atlan.com export ATLAN_API_KEY=\"...\" atlan_live_test.p", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "ariables export ATLAN_BASE_URL=https://tenant.atlan.com export ATLAN_API_KEY=\"...\" atlan_live_test.py 1 2 3 from pyatlan.client.atlan import AtlanClient client = AtlanClient () On client creation \u00b6 If you prefer to not use environment variables, you can do the following: atlan_live_test.py 1 2 3 4 5 6 from pyatlan.client.atlan import AtlanClient client = AtlanClient ( base_url = \"https://tenant.at", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "6 from pyatlan.client.atlan import AtlanClient client = AtlanClient ( base_url = \"https://tenant.atlan.com\" , api_key = \"...\" ) Careful not to expose your API token! We generally discourage including your API token directly in your code, in case you accidentally commit it into a (public) version control system. But it's your choice exactly how you manage the API token and including it for use wit", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ntrol system. But it's your choice exactly how you manage the API token and including it for use within the client. (optional) Want to create a client using an API token GUID? In some scenarios, you may not want to expose the entire API token or manage environment variables. Instead, you can provide the GUID of the API token, and the SDK will internally fetch the actual access token. When to use t", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "the GUID of the API token, and the SDK will internally fetch the actual access token. When to use this approach: Building apps that use the SDK where token security is a concern When you want to avoid exposing full API tokens in your configuration For containerized applications that need secure token management Prerequisites: Before using this approach, ensure your Argo template is configured wit", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "en management Prerequisites: Before using this approach, ensure your Argo template is configured with CLIENT_ID and CLIENT_SECRET : Argo template configuration 1 2 3 4 5 6 7 8 9 10 11 12 13 14 container : image : ghcr.io/atlanhq/designation-based-group-provisioning:1.0.2 imagePullPolicy : IfNotPresent env : - name : CLIENT_ID valueFrom : secretKeyRef : name : \"argo-client-creds\" key : \"login\" - na", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "nt env : - name : CLIENT_ID valueFrom : secretKeyRef : name : \"argo-client-creds\" key : \"login\" - name : CLIENT_SECRET valueFrom : secretKeyRef : name : \"argo-client-creds\" key : \"password\" Python 7.1.4 Creating a client with API token GUID 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 from pyatlan.client.atlan import AtlanClient from pyatlan.model.fluent_search import FluentSearch from py", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "pyatlan.client.atlan import AtlanClient from pyatlan.model.fluent_search import FluentSearch from pyatlan.model.query import CompoundQuery from pyatlan.model.assets import AtlasGlossary # Initialize client using API token GUID token_client = AtlanClient . from_token_guid ( guid = \"c5e249d7-abcc-4ad5-87a1-831d7b810df4\" # (1) ) # Perform operations with the client (requires appropriate permissions)", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "-87a1-831d7b810df4\" # (1) ) # Perform operations with the client (requires appropriate permissions) results = ( FluentSearch () . where ( CompoundQuery . active_assets ()) . where ( CompoundQuery . asset_type ( AtlasGlossary )) . page_size ( 100 ) . execute ( client = token_client ) ) assert results and results . count >= 1 print ( f \"Found { results . count } glossary assets\" ) Create client from", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "and results . count >= 1 print ( f \"Found { results . count } glossary assets\" ) Create client from token GUID : Use AtlanClient.from_token_guid() to create a client using the GUID of an API token. The SDK will automatically fetch the actual access token using the configured CLIENT_ID and CLIENT_SE", "metadata": {"source_url": "https://developer.atlan.com/sdks/python/", "title": "Python SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Kotlin Table of contents Obtain the SDK Configure the SDK Using environment variables On client creation What's next? Error-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectiv", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "n What's next? Error-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectivity Using a proxy Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage ass", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets th", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "uggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube asset", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "averse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Ma", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ta Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data m", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "sets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom me", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "mn profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access ev", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supp", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "apping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage ge", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "cks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying T", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "u assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asse", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ts Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Line", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "usinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFre", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "e AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLS", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "bute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus Atlas", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "GlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnect", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "isibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_use", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "nValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstra", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "nitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schem", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "t DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension Cub", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSi", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "amoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimen", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "ce AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSCon", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "set AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Co", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "s DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoD", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "c DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard Cogno", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oogle Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion Mati", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "lder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProje", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo M", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "y ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDa", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "IReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "esforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tab", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "k Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable Thoughtspot", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ghtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Obtain the SDK Configure the SDK Using environment variables On client creation What's next? Error-handling Advanced configuration Logging Retries Timeouts Multi-tenant connectivity Using a proxy Kotlin SDK \u00b6 Obtain the SDK \u00b6 For Kotlin, you can", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "Timeouts Multi-tenant connectivity Using a proxy Kotlin SDK \u00b6 Obtain the SDK \u00b6 For Kotlin, you can reuse the existing Java SDK as-is. It is available on Maven Central, ready to be included in your project: Gradle build.gradle.kts repositories { mavenCentral () } dependencies { implementation ( \"com.atlan:atlan-java:+\" ) // (1) implementation ( \"io.github.microutils:kotlin-logging-jvm:3.0.5\" ) //", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": ".atlan:atlan-java:+\" ) // (1) implementation ( \"io.github.microutils:kotlin-logging-jvm:3.0.5\" ) // (2) implementation ( \"org.slf4j:slf4j-simple:2.0.7\" ) } Include the latest version of the Java SDK in your project as a dependency. You can also give a specific version instead of the + , if you'd like. The Java SDK uses slf4j for logging purposes. You can include slf4j-simple as a simple binding me", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "e. The Java SDK uses slf4j for logging purposes. You can include slf4j-simple as a simple binding mechanism to send any logging information out to your console (standard out), along with the kotlin-logging-jvm microutil. Configure the SDK \u00b6 There are two ways to configure the SDK: Using environment variables \u00b6 ATLAN_API_KEY should be given your Atlan API token , for authentication ( don't forget t", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "variables \u00b6 ATLAN_API_KEY should be given your Atlan API token , for authentication ( don't forget to assign one or more personas to the API token to give access to existing assets! ) ATLAN_BASE_URL should be given your Atlan URL (for example, https://tenant.atlan.com ) Here's an example of setting those environment variables: Set environment variables export ATLAN_BASE_URL=https://tenant.atlan.co", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "those environment variables: Set environment variables export ATLAN_BASE_URL=https://tenant.atlan.com export ATLAN_API_KEY=\"...\" AtlanLiveTest.kt 1 2 3 4 5 6 7 import com.atlan.AtlanClient fun main () { AtlanClient (). use { client -> // Do something with the client } } On client creation \u00b6 If you prefer to not use environment variables, you can do the following: AtlanLiveTest.kt 1 2 3 4 5 6 7 8 9", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "refer to not use environment variables, you can do the following: AtlanLiveTest.kt 1 2 3 4 5 6 7 8 9 10 import com.atlan.AtlanClient fun main () { AtlanClient ( \"https://tenant.atlan.com\" , \"...\" ) ) { // Do something with the client } } What's next? \u00b6 Delve into more detailed examples: Common tasks Common operations on assets, that are available across all assets. Discover actions Asset-specific", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "Common operations on assets, that are available across all assets. Discover actions Asset-specific Operations that are specific to certain assets. Focus on a specific kind of asset Governance structures Operations dealing with governance structures, rather than assets. Manage governance structures Samples Real code samples our customers use to solve particular use cases. Review live samples Searc", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "Samples Real code samples our customers use to solve particular use cases. Review live samples Searching Delve deep into searching and aggregating metadata. Learn more about searching Events Delve deep into the details of the events Atlan triggers. Learn more about events Error-handling \u00b6 The SDK defines checked exceptions for the following categories of error: Exception Description ApiConnectionE", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "fines checked exceptions for the following categories of error: Exception Description ApiConnectionException Errors when the SDK is unable to connect to the API, for example due to a lack of network access or timeouts. AuthenticationException Errors when the API token configured for the SDK is invalid or expired. ConflictException Errors when there is some conflict with an existing asset and the o", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "id or expired. ConflictException Errors when there is some conflict with an existing asset and the operation cannot be completed as a result. InvalidRequestException Errors when the request sent to Atlan does not match its expectations. If you are using the built-in methods like toCreate() and toUpdate() this exception should be treated as a bug in the SDK. (These operations take responsibility fo", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ate() this exception should be treated as a bug in the SDK. (These operations take responsibility for avoiding this error.) LogicException Errors where some assumption made in the SDK's code is proven incorrect. If ever raised, they should be reported as bugs against the SDK. NotFoundException Errors when the requested resource or asset does not exist in Atlan. PermissionException Errors when the", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "s when the requested resource or asset does not exist in Atlan. PermissionException Errors when the API token used by the SDK does not have permission to access a resource or carry out an operation on a specific asset . RateLimitException Errors when the Atlan server is being overwhelmed by requests", "metadata": {"source_url": "https://developer.atlan.com/sdks/kotlin/", "title": "Kotlin SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Go Table of contents Obtain the SDK Configure the SDK Using environment variables On client creation What's next? Error-handling Advanced configuration Logging Events Raw REST API Site m", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "lient creation What's next? Error-handling Advanced configuration Logging Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships wit", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ssets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search example", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook As", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "bhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manag", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "age relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hu", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts D", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "nector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ce structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and g", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "nage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "orkflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Post", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ooker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Comp", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadat", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ents Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Type", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "D CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Rea", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag His", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArch", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "e ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyR", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type i", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_datase", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "eRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Me", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "Status WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition Cal", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "ses Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQ", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "lder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVi", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "ist AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventH", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSeq", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "osmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBColl", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosM", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject M", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "ile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode M", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI Po", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "Collection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "et PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDatase", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasourc", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "etDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Obtain", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "tLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Obtain the SDK Configure the SDK Using environment variables On client creation What's next? Error-handling Advanced configuration Logging Go SDK \u00b6 Obtain the SDK \u00b6 Pre-release state The Go SDK is currently in a pre-release, experimental state. While in this state, we reserve the right to make any changes", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "in a pre-release, experimental state. While in this state, we reserve the right to make any changes to it (including breaking changes) without worrying about backwards compatibility, semantic versioning, and so on. If you are eager to experiment with it, it is available on GitHub . You can use Go dependencies to install it directly from there. We welcome your feedback during the pre-release, but c", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "pendencies to install it directly from there. We welcome your feedback during the pre-release, but cannot commit to any specific revisions or timelines at this point in time. Configure the SDK \u00b6 There are two ways to configure the SDK: Using environment variables \u00b6 ATLAN_API_KEY should be given your Atlan API token , for authentication ( don't forget to assign one or more personas to the API token", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Atlan API token , for authentication ( don't forget to assign one or more personas to the API token to give access to existing assets! ) ATLAN_BASE_URL should be given your Atlan URL (for example, https://tenant.atlan.com ) Here's an example of setting those environment variables: Set environment variables export ATLAN_BASE_URL=https://tenant.atlan.com export ATLAN_API_KEY=\"...\" main.go 1 2 3 4 5", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "ariables export ATLAN_BASE_URL=https://tenant.atlan.com export ATLAN_API_KEY=\"...\" main.go 1 2 3 4 5 6 7 8 9 package main import ( \"github.com/atlanhq/atlan-go/atlan/assets\" ) func main () { ctx := assets . NewContext () } On client creation \u00b6 If you prefer to not use environment variables, you can do the following: main.go 1 2 3 4 5 6 7 8 9 package main import ( \"github.com/atlanhq/atlan-go/atlan", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "do the following: main.go 1 2 3 4 5 6 7 8 9 package main import ( \"github.com/atlanhq/atlan-go/atlan/assets\" ) func main () { ctx , _ := assets . Context ( \"https://tenant.atlan.com\" , \"...\" ) } Careful not to expose your API token! We generally discourage including your API token directly in your code, in case you accidentally commit it into a (public) version control system. But it's your choice", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ode, in case you accidentally commit it into a (public) version control system. But it's your choice exactly how you manage the API token and including it for use within the client. That's it \u2014 once these are set you can start using your SDK to make live calls against your Atlan instance! \ud83c\udf89 What's next? \u00b6 Delve into more detailed examples: Common tasks Common operations on assets, that are availab", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "ext? \u00b6 Delve into more detailed examples: Common tasks Common operations on assets, that are available across all assets. Discover actions Asset-specific Operations that are specific to certain assets. Focus on a specific kind of asset Governance structures Operations dealing with governance structures, rather than assets. Manage governance structures Samples Real code samples our customers use to", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "res, rather than assets. Manage governance structures Samples Real code samples our customers use to solve particular use cases. Review live samples Searching Delve deep into searching and aggregating metadata. Learn more about searching Events Delve deep into the details of the events Atlan triggers. Learn more about events Error-handling \u00b6 The SDK defines exceptions for the following categories", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "s. Learn more about events Error-handling \u00b6 The SDK defines exceptions for the following categories of error: Exception Description ApiConnectionError Errors when the SDK is unable to connect to the API, for example due to a lack of network access or timeouts. AuthenticationError Errors when the API token configured for the SDK is invalid or expired. ConflictError Errors when there is some conflic", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "token configured for the SDK is invalid or expired. ConflictError Errors when there is some conflict with an existing asset and the operation cannot be completed as a result. InvalidRequestError Errors when the request sent to Atlan does not match its expectations. If you are using the built-in methods like toCreate() and toUpdate() this exception should be treated as a bug in the SDK. (These ope", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "hods like toCreate() and toUpdate() this exception should be treated as a bug in the SDK. (These operations take responsibility for avoiding this error.) LogicError Errors where some assumption made in the SDK's code is proven incorrect. If ever raised, they should be reported as bugs against the SDK. NotFoundError Errors when the requested resource or asset does not exist in Atlan. PermissionErro", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "K. NotFoundError Errors when the requested resource or asset does not exist in Atlan. PermissionError Errors when the API token used by the SDK does not have permission to access a resource or carry out an operation on a specific asset . RateLimitError Errors when the Atlan server is being overwhelm", "metadata": {"source_url": "https://developer.atlan.com/sdks/go/", "title": "Go SDK - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI CLI Table of contents Obtain the CLI Configure the CLI Define data sources What's next? dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions C", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "o Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "nage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk upda", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ch for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Crea", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "bhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Clou", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ge object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manag", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ta products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (en", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "rieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connecti", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Sno", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "DB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Gl", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "es Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "et is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Acc", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task S", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "rces Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityI", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "un GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicat", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "LSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProdu", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "thPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compre", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ogle_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type Sch", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "is_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryC", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "re EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "umn Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazo", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "IPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset Qui", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "nalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Az", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureS", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse D", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Event CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Goo", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "DB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTop", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "nosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion M", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "illionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "egyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "ower BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuer", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "likApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel S", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "DataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject Tablea", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "auDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Obtain the CLI Configure the CLI Define data sources What's next? Atlan CLI \u00b6 L", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ts Table of contents Obtain the CLI Configure the CLI Define data sources What's next? Atlan CLI \u00b6 Limited functionality (so far) You can use Atlan's command-line interface (CLI) to manage some metadata in Atlan. Currently data contracts and metadata for a limited set of asset types can be managed through the CLI. Obtain the CLI \u00b6 0.1.0 For now, the CLI must be downloaded as a pre-built binary: Di", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "hrough the CLI. Obtain the CLI \u00b6 0.1.0 For now, the CLI must be downloaded as a pre-built binary: Disclaimer \u2014 closed preview This feature is in closed preview and therefore any download and installation from this link will be subject to the terms applicable to Product Release Stages . Contact your Atlan Customer Success Manager for your preview today. If your organization is already part of the c", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "Atlan Customer Success Manager for your preview today. If your organization is already part of the closed preview, your installation of the feature from this link shall become subject to the terms and scope of preview as agreed with your organization. Accordingly, any use of the feature outside the agreed scope may result in revocation of the closed preview for your organization. Please contact yo", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "agreed scope may result in revocation of the closed preview for your organization. Please contact your system administrator before downloading. Homebrew MacOS (M1) MacOS (Intel) Linux Windows Windows Recommended When installed via Homebrew, you can easily keep things up-to-date. If you do not use it already, see Homebrew's own installation documents for setting up Homebrew itself . brew tap atlanh", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "already, see Homebrew's own installation documents for setting up Homebrew itself . brew tap atlanhq/atlan brew install atlan curl -o atlan.tgz -L https://github.com/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Darwin_arm64.tar.gz tar xf atlan.tgz curl -o atlan.tgz -L https://github.com/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Darwin_amd64.tar.gz tar xf atlan.tgz cur", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "m/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Darwin_amd64.tar.gz tar xf atlan.tgz curl -o atlan.tgz -L https://github.com/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Linux_amd64.tar.gz tar -zxf atlan.tgz curl -o atlan.zip -L https://github.com/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Windows_amd64.zip unzip atlan.zip Configure the CLI \u00b6 0.1.0 You can c", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "releases/latest/download/atlan_Windows_amd64.zip unzip atlan.zip Configure the CLI \u00b6 0.1.0 You can configure the CLI using a config file or in some cases environment variables, with the following minimum settings 1 : .atlan/config.yaml 1 2 3 4 5 atlan_api_key : eyZid92... # (1) atlan_base_url : https://tenant.atlan.com # (2) log : enabled : false # (3) level : info # (4) An API token that has acce", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "s://tenant.atlan.com # (2) log : enabled : false # (3) level : info # (4) An API token that has access to your assets. The base URL of your tenant (including the https:// ). (Optional) Enable logging to produce more details on what the CLI is doing. When logging is enabled, specify the level of verbosity. Environment variables 1 ATLAN_API_KEY = eyZid92... # (1) An API token that has access to your", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "osity. Environment variables 1 ATLAN_API_KEY = eyZid92... # (1) An API token that has access to your assets. Define data sources \u00b6 You should also define data sources in the config file: .atlan/config.yaml 6 7 8 9 10 11 12 data_source snowflake : # (1) type : snowflake # (2) connection : # (3) name : snowflake-prod # (4) qualified_name : \"default/snowflake/1234567890\" # (5) database : db # (6) sch", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": ": snowflake-prod # (4) qualified_name : \"default/snowflake/1234567890\" # (5) database : db # (6) schema : analytics # (7) Each data source definition must start with data_source , followed by a space and a unique reference name for the data source ( snowflake in this example). Reference name is your choice The reference name you give in the configuration file is only used here and as a reference i", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "choice The reference name you give in the configuration file is only used here and as a reference in any data contracts you define. It need not match the name of the connection or data source in Atlan itself. You must indicate the type of connector for the data source (see connector types for options). Details of the connection must also be provided. You must provide the name of the connection, a", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ns). Details of the connection must also be provided. You must provide the name of the connection, as it appears in Atlan. You must provide the unique qualified_name of the connection in Atlan. (Optional) You can also specify the database to use for this connection's assets by default, if none is specified in the data contract. (Optional) You can also specify the schema to use for this connection'", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ecified in the data contract. (Optional) You can also specify the schema to use for this connection's assets by default, if none is specified in the data contract. These ensure the CLI can map the details you specify in your data contract to the appropriate corresponding asset in Atlan. What's next?", "metadata": {"source_url": "https://developer.atlan.com/sdks/cli/", "title": "Atlan CLI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management API token management Table of contents Create an API token Retrieve an API token Update an API token Delete an API token Give permissions to API token Link an API token to a persona Add an API to", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "token Delete an API token Give permissions to API token Link an API token to a persona Add an API token as a connection admin Add an API token as a collection editor Add an API token as a collection viewer Obtain a user's bearer token Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SS", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB asset", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server asse", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "shift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting sea", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE E", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy Auth", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "t Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValidi", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "lows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue Sourc", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "CRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operat", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "erformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus Dat", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDB", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType So", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "et_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain D", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "sary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Func", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondary", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan Anapl", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "SightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "onField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GC", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "tran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "rt Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStr", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ction MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel M", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "ery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPa", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "owerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDash", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "m Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "isense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot Thought", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "auFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Create an API token Retrieve an API token Update an API token Delete an API token Give permissions to API token Link an API token to a pe", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "oken Update an API token Delete an API token Give permissions to API token Link an API token to a persona Add an API token as a connection admin Add an API token as a collection editor Add an API token as a collection viewer Obtain a user's bearer token /api/service/apikeys (GET) /api/service/apikeys (POST) /api/service/apikeys/{guid} (DELETE) /api/service/apikeys/{guid} (POST) API tokens \u00b6 API to", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "s (POST) /api/service/apikeys/{guid} (DELETE) /api/service/apikeys/{guid} (POST) API tokens \u00b6 API tokens are a way to provide programmatic access to Atlan without relying on a user's own credentials or permissions. API tokens are not personal access tokens API tokens are commonly thought to be synonymous with personal access tokens (PAT). In other words, many developers assume that an API token wi", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ymous with personal access tokens (PAT). In other words, many developers assume that an API token will have the same privileges and permissions as the user who created them. This is not the case. API tokens are their own unique actor and carry entirely their own set of permissions, completely independent from the user who created or otherwise maintains them. Create an API token \u00b6 0.0.14 1.4.0 4.0.", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "ndent from the user who created or otherwise maintains them. Create an API token \u00b6 0.0.14 1.4.0 4.0.0 To create a new API token: Java Python Kotlin Go Raw REST API Create an API token 1 2 ApiToken token = ApiToken . create ( client , \"token-name\" ); // (1) String tokenValue = token . getAttributes (). getAccessToken (); // (2) You can use the ApiToken.create() method to create a new API token. Bec", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "). getAccessToken (); // (2) You can use the ApiToken.create() method to create a new API token. Because this operation will create the token in Atlan, you must provide it an AtlanClient through which to connect to the tenant. The actual value of the API token will only be available in this immediate response of the creation, under .getAttributes().getAccessToken() . Cannot be accessed again later", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "e response of the creation, under .getAttributes().getAccessToken() . Cannot be accessed again later You will not be able to retrieve the actual value of the API token again at a later point, for example when retrieving or updating the API token. Create an API token 1 2 3 4 5 from pyatlan.client.atlan import AtlanClient client = AtlanClient () token = client . token . create ( \"token-name\" ) # (1)", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "an import AtlanClient client = AtlanClient () token = client . token . create ( \"token-name\" ) # (1) token_value = token . attributes . access_token # (2) You can use the token.create() method to create a new API token. The actual value of the API token will only be available in this immediate response of the creation, under .attributes.access_token . Cannot be accessed again later You will not be", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "nse of the creation, under .attributes.access_token . Cannot be accessed again later You will not be able to retrieve the actual value of the API token again at a later point, for example when retrieving or updating the API token. Create an API token 1 2 val token = ApiToken . create ( client , \"token-name\" ) // (1) val tokenValue = token . attributes . accessToken // (2) You can use the ApiToken.", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "en-name\" ) // (1) val tokenValue = token . attributes . accessToken // (2) You can use the ApiToken.create() method to create a new API token. Because this operation will create the token in Atlan, you must provide it an AtlanClient through which to connect to the tenant. The actual value of the API token will only be available in this immediate response of the creation, under .attributes.accessTo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "token will only be available in this immediate response of the creation, under .attributes.accessToken . Cannot be accessed again later You will not be able to retrieve the actual value of the API token again at a later point, for example when retrieving or updating the API token. Create an API token 1 2 3 4 5 6 displayName := \"token-name\" token , atlanErr := ctx . TokenClient . Create ( & displa", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "en 1 2 3 4 5 6 displayName := \"token-name\" token , atlanErr := ctx . TokenClient . Create ( & displayName , nil , nil , nil ) // (1) if atlanErr != nil { logger . Log . Errorf ( \"Error : %v\" , atlanErr ) } tokenValue := * token . Attributes . AccessToken // (2) You can use the TokenClient.Create() method to create a new API token. The actual value of the API token will only be available in this im", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ethod to create a new API token. The actual value of the API token will only be available in this immediate response of the creation, under .Attributes.AccessToken . Cannot be accessed again later You will not be able to retrieve the actual value of the API token again at a later point, for example", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/tokens/", "title": "Managing API tokens - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Access control and personalization \u00b6 Atlan provides a number of ways to manage access control , at both coarse-grained and granular levels. The primary vehicles for granular access cont", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "control , at both coarse-grained and granular levels. The primary vehicles for granular access control are personas , purposes , and the access policies defined within these. Both personas and purposes can also be used to personalize the experience, by controlling: which assets are visible to a particular audience which details of each of those assets are visible 2023-01-27 2024-03-14 Was this pa", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ticular audience which details of each of those assets are visible 2023-01-27 2024-03-14 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/", "title": "Access control and personalization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage personas Table of contents List personas Create a persona Retrieve a persona Update a persona Delete a persona Activate or deactivate a persona Add subjects to a persona Add policies to a persona Add a metadata policy Add a data policy Add a glossary poli", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s to a persona Add policies to a persona Add a metadata policy Add a data policy Add a glossary policy Add a domain policy List policies in a persona Personalize the persona Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Man", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "reate users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Serve", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ts Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorti", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CR", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ta is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolic", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "e Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicy", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "tion MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStat", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "cyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType M", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ty kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaT", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "y Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedur", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSec", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "rflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfD", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "licationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServic", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Group Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnP", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBuc", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "e Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore Looke", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "osReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute Mi", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "eCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataM", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure Pow", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "oard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce Salesfor", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "kStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Sod", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot T", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents List personas Create a persona Retrieve a persona Update a persona Delete a persona Activate or deactivate a persona Add subjects t", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "Retrieve a persona Update a persona Delete a persona Activate or deactivate a persona Add subjects to a persona Add policies to a persona Add a metadata policy Add a data policy Add a glossary policy Add a domain policy List policies in a persona Personalize the persona /api/meta/entity/bulk (DELETE) /api/meta/entity/bulk (POST) /api/meta/search/indexsearch (POST) Personas \u00b6 Personas are a way of", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": ") /api/meta/entity/bulk (POST) /api/meta/search/indexsearch (POST) Personas \u00b6 Personas are a way of curating assets for a group of users. List personas \u00b6 0.0.12 1.4.0 4.0.0 To retrieve a listing of personas, run a search and page the results: Java Python Kotlin Go Raw REST API List personas 1 2 3 4 5 6 Persona . select ( client ) // (1) . stream () // (2) . filter ( a -> a instanceof Persona ) //", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "5 6 Persona . select ( client ) // (1) . stream () // (2) . filter ( a -> a instanceof Persona ) // (3) . forEach ( p -> { // (4) log . info ( \"Persona: {}\" , p ); }); To start building up a query specifically for personas, you can use the select() convenience method on Persona itself. Because this operation may need to retrieve information from Atlan, you must provide it an AtlanClient through wh", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "operation may need to retrieve information from Atlan, you must provide it an AtlanClient through which to connect to the tenant. The search will only run when you call the stream() method, which will then lazily-load each page of results into a stream. (Optional) You can do any other operations you might do on a stream, such as filtering the results to ensure they are of a certain type. This is t", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "might do on a stream, such as filtering the results to ensure they are of a certain type. This is the pattern for iterating through all results (across pages) covered in the Searching for assets portion of the SDK documentation. List personas 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import Persona from pyatlan.model.fluent_search impo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "an import AtlanClient from pyatlan.model.assets import Persona from pyatlan.model.fluent_search import CompoundQuery , FluentSearch client = AtlanClient () search_request = ( FluentSearch () # (1) . where ( CompoundQuery . active_assets ()) . where ( CompoundQuery . asset_type ( Persona )) # (2) ) . to_request () # (3) results = client . asset . search ( search_request ) # (4) for asset in results", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "to_request () # (3) results = client . asset . search ( search_request ) # (4) for asset in results : # (5) if isinstance ( asset , Persona ): # Do something with the Persona Begin building up a query combining multiple conditions. Ensure that we include only objects of type Persona . Build this query into a new search request. Run the search. Page through the results (each asset in the results w", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ery into a new search request. Run the search. Page through the results (each asset in the results will be a persona). List personas 1 2 3 4 5 6 Persona . select ( client ) // (1) . stream () // (2) . filter { it is Persona } // (3) . forEach { // (4) log . info { \"Persona: $ it \" } } To start building up a query specifically for personas, you can use the select() convenience method on Persona its", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ing up a query specifically for personas, you can use the select() convenience method on Persona itself. Because this operation may need to retrieve information from Atlan, you must provide it an AtlanClient through which to connect to the tenant. The search will only run when you call the stream() method, which will then lazily-load each page of results into a stream. (Optional) You can do any ot", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "method, which will then lazily-load each page of results into a stream. (Optional) You can do any other operations you might do on a stream, such as filtering the results to ensure they are of a certain type. This is the pattern for iterating through all results (across pages) covered in the Searching for assets portion of the SDK documentation. List personas 1 2 3 4 5 6 7 8 9 10 11 12 13 response", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ng for assets portion of the SDK documentation. List personas 1 2 3 4 5 6 7 8 9 10 11 12 13 response , atlanErr := assets . NewFluentSearch (). // (1) PageSizes ( 20 ). ActiveAssets (). AssetType ( \"Persona\" ). // (2) Execute () // (3) if atlanErr != nil { fmt . Println ( \"Error:\" , atlanErr ) } for _ , entity := range response [ 0 ]. Entities { // (4) if entity . TypeName != nil && * entity . Typ", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "_ , entity := range response [ 0 ]. Entities { // (4) if entity . TypeName != nil && * entity . TypeName == \"Persona\" { // Do something with the Persona } } Begin building up a query combining multiple conditions. Ensure that we include only objects of type Persona . Run the search. Page through th", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/personas/", "title": "Managing personas - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Manage policies Table of contents Retrieve policies From a persona From a purpose Update policies Remove policies From a persona From a purpose Access events API token management Run queries on an asset Users and groups Users and", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "rom a purpose Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (ba", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets Powe", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "eage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Sea", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ing Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Refe", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTempla", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "g Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopi", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "soConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSOb", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "mAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type inciden", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "le_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type qui", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "i_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL Schem", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ype Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView Big", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "atabases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Ai", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightD", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Applica", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "mDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHub", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "age ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTim", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "base Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentD", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "ard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPack", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "s CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "atillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCol", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "tric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn Powe", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "BDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikS", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "resetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetCo", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "gma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasou", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "rsetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Retrieve policies From", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "htspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Retrieve policies From a persona From a purpose Update policies Remove policies From a persona From a purpose /api/meta/entity/bulk (DELETE) /api/meta/entity/bulk (POST) /api/meta/search/indexsearch (POST) Policies \u00b6 Policies control which assets users can access, and what operations they can carry out on those assets. Re", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "es control which assets users can access, and what operations they can carry out on those assets. Retrieve policies \u00b6 From a persona \u00b6 0.0.15 1.4.0 4.0.0 To retrieve a policy from a persona, you need to search for the policy by some characteristic: Java Python Kotlin Go Raw REST API Retrieve policies 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 AuthPolicy . select ( client ) // (1) . where ( AuthPolicy", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "s 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 AuthPolicy . select ( client ) // (1) . where ( AuthPolicy . POLICY_CATEGORY . eq ( \"persona\" )) . where ( AuthPolicy . POLICY_RESOURCES . startsWith ( \"entity:default/snowflake/1696324735\" )) // (2) . includeOnResults ( AuthPolicy . NAME ) // (3) . includeOnResults ( AuthPolicy . ACCESS_CONTROL ) . includeOnResults ( AuthPolicy . POLICY_RESOURCES ) . inclu", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Results ( AuthPolicy . ACCESS_CONTROL ) . includeOnResults ( AuthPolicy . POLICY_RESOURCES ) . includeOnResults ( AuthPolicy . CONNECTION_QUALIFIED_NAME ) . includeOnResults ( AuthPolicy . POLICY_TYPE ) . includeOnResults ( AuthPolicy . POLICY_SUB_CATEGORY ) . includeOnRelations ( IAccessControl . IS_ACCESS_CONTROL_ENABLED ) // (4) . includeOnRelations ( Asset . NAME ) . stream () // (5) . filter", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "S_ACCESS_CONTROL_ENABLED ) // (4) . includeOnRelations ( Asset . NAME ) . stream () // (5) . filter ( a -> a instanceof AuthPolicy ) . forEach ( p -> { // (6) AuthPolicy policy = ( AuthPolicy ) p ; }); Start by selecting policies, here using a FluentSearch-based approach. Because this operation may need to retrieve information from Atlan, you must provide it an AtlanClient through which to connect", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "need to retrieve information from Atlan, you must provide it an AtlanClient through which to connect to the tenant. You can select the policy by whatever you like, in this example we are selecting based on the resources it controls (specifically in this example any assets in a particular snowflake connection). Include details about the policy itself in each search result, such as the access contro", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "onnection). Include details about the policy itself in each search result, such as the access control mechanism the policy is defined within (the persona). Include all the attributes you want about the access control mechanism on the relations of the search results. Here we are including the name of and whether that persona is enabled or not. You can then directly stream the results of the search.", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "and whether that persona is enabled or not. You can then directly stream the results of the search. For each result of the search (itself an AuthPolicy), you can then decide what to do with it. Retrieve policies 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 from typing import cast from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import AuthPolicy , AccessCon", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import AuthPolicy , AccessControl from pyatlan.model.fluent_search import FluentSearch client = AtlanClient () request = ( FluentSearch () . where ( FluentSearch . asset_type ( AuthPolicy )) # (1) . where ( AuthPolicy . POLICY_CATEGORY . eq ( \"persona\" )) . where ( AuthPolicy . POLICY_RESOURCES . startswith ( \"entity:default/sn", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "TEGORY . eq ( \"persona\" )) . where ( AuthPolicy . POLICY_RESOURCES . startswith ( \"entity:default/snowflake/1696324735\" )) # (2) . include_on_results ( AuthPolicy . NAME ) # (3) . include_on_results ( AuthPolicy . ACCESS_CONTROL ) . include_on_results ( AuthPolicy . POLICY_RESOURCES ) . include_on_results ( AuthPolicy . CONNECTION_QUALIFIED_NAME ) . include_on_results ( AuthPolicy . POLICY_TYPE )", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "esults ( AuthPolicy . CONNECTION_QUALIFIED_NAME ) . include_on_results ( AuthPolicy . POLICY_TYPE ) . include_on_results ( AuthPolicy . POLICY_SUB_CATEGORY ) . include_on_relations ( AccessControl . IS_ACCESS_CONTROL_ENABLED ) # (4) . include_on_relations ( AccessControl . NAME ) ) . to_request () # (5) response = client . asset . search ( request ) # (6) for p in response : # (7) policy = cast (", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "(5) response = client . asset . search ( request ) # (6) for p in response : # (7) policy = cast ( AuthPolicy , p ) Start by selecting policies, here using a FluentSearch-based approach. You can select the policy by whatever you like, in this example we are selecting based on the resources it controls (specifically in this example any assets in a particular snowflake connection). Include details", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ols (specifically in this example any assets in a particular snowflake connection). Include details about the policy itself in each search result, such as the access control mechanism the policy is defined within (the persona). Include all the attributes you want about the access control mechanism o", "metadata": {"source_url": "https://developer.atlan.com/snippets/access/policies/", "title": "Managing policies - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Examples of common actions with assets \u00b6 In this section you'll find examples of the most common actions dealing with assets . All assets share a common set of attributes and relationsh", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "most common actions dealing with assets . All assets share a common set of attributes and relationships: such as certificates, announcements, term assignments, classifications, custom metadata, READMEs, and more. These common examples cover interacting with those common attributes and relationships \u2014 focusing primarily on enriching assets that already exist. Each page includes variations on the to", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "\u2014 focusing primarily on enriching assets that already exist. Each page includes variations on the topic they cover: Certify assets Manage announcements Change description Change owners Classify assets Change custom metadata Link terms to assets Manage asset READMEs Add asset links 2022-10-15 2024-12-02 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "-02 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/snippets/common-examples/", "title": "Common actions with assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Asset CRUD operations \u00b6 In this section you'll find details about creating, retrieving, updating, deleting, and searching for assets . Rather than covering every asset type in detail (s", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "g, updating, deleting, and searching for assets . Rather than covering every asset type in detail (since there are many), the subsections focus on the operations and patterns to follow for each operation. For more details on specific assets that are primarily intended to be managed programmatically, see the API-first models . Create an asset Retrieve an asset Update an asset Delete an asset Restor", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "see the API-first models . Create an asset Retrieve an asset Update an asset Delete an asset Restore an asset View history of an asset Search for assets In many cases, you can also combine multiple operations into a single API call for efficiency. 2022-10-17 2024-10-01 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form t", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/snippets/advanced-examples/", "title": "Asset CRUD operations - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Full reference material \u00b6 Under this top-level menu you will find full reference materials. These are intended to cover full, in-depth explanations of everything you can use in differen", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "rials. These are intended to cover full, in-depth explanations of everything you can use in different areas of Atlan. Searching \u2014 detailing all the different mechanisms you can use to search for metadata in Atlan. Events \u2014 detailing every type of event that Atlan produces and the triggers that produce them. Endpoints \u2014 listing every endpoint available in Atlan cross-referenced with the use cases e", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ce them. Endpoints \u2014 listing every endpoint available in Atlan cross-referenced with the use cases each endpoint enables. Due to its size, the full reference material for types (models) is under the separate top-level Types menu. 2025-09-04 2023-08-02 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with m", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/reference/", "title": "Full reference material - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Site map Table of contents Introduction Jumping in Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Ch", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset De", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "tes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Updat", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "fic Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Man", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profil", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "acts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag manage", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "etadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "rs and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ort (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma a", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ts PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limitin", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ies Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "d Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Pu", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "re Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondi", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "eTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTag", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "fkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParam", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "tegory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCa", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility Schema", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ype quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh D", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "L SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream Snowfl", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "iew BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTa", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ield Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "kSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory A", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSch", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "niteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "cumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard Look", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "nosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrat", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "etabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssocia", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource Pow", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "mn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Sale", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "t QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder Si", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "tasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorkshee", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "DatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents Introduction Jumping in Overall site map \u00b6 Introduction \u00b6 If you are new to Atlan, or to developing with Atlan, star", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ping in Overall site map \u00b6 Introduction \u00b6 If you are new to Atlan, or to developing with Atlan, start with one of the following two options. These will set you up to develop with Atlan, step-by-step. Atlan University Self-paced, video-based walkthrough of the essentials of Atlan as a platform. Atlan Platform Essentials certification Introductory walkthrough Documentation-based walkthrough, includi", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "Platform Essentials certification Introductory walkthrough Documentation-based walkthrough, including step-by-step examples. Start the walkthrough Jumping in \u00b6 If you are confident setting yourself up, and instead want to jump straight into specific examples, you can search (upper-right) or use the top-level menu: Common tasks Common operations on assets, that are available across all assets. Dis", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "top-level menu: Common tasks Common operations on assets, that are available across all assets. Discover actions Asset-specific Operations that are specific to certain assets. Focus on a specific kind of asset Governance structures Operations dealing with governance structures, rather than assets. Manage governance structures Samples Real code samples our customers use to solve particular use cas", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Manage governance structures Samples Real code samples our customers use to solve particular use cases. Review live samples Searching Delve deep into searching and aggregating metadata. Learn more about searching Events Delve deep into the details of the events Atlan triggers. Learn more about events 2022-08-22 2024-10-01 Was this page helpful? Thanks for your feedback! Thanks for your feedback! H", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "s 2022-08-22 2024-10-01 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/concepts/", "title": "Developing with Atlan - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Asset-specific operations \u00b6 As developers ourselves, we know that learning is often easiest through example. In this Asset-specific operations section you will find details about managi", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "asiest through example. In this Asset-specific operations section you will find details about managing specific kinds of assets. You may also want to explore: Common tasks Common operations on assets, that are available across all assets. Discover actions Governance structures Operations dealing with governance structures, rather than assets. Manage governance structures 2023-04-12 2024-05-17 Was", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "h governance structures, rather than assets. Manage governance structures 2023-04-12 2024-05-17 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "Get Started Quick Start Guides Developers Software development kits (SDKs) Software development kits (SDKs) You can integrate with Atlan in several ways. We recommend using one of our software development kits (SDKs) , if possible, which: encode best practices, are built for performance, and add validations and simplifications not found in the raw REST APIs themselves. Did you know? Our SDKs are n", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/getting-started-with-the-apis", "title": "Software development kits (SDKs) | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "idations and simplifications not found in the raw REST APIs themselves. Did you know? Our SDKs are nothing more than client libraries that wrap our underlying REST APIs. They prevent you from needing to reinvent the wheel by wrapping the REST APIs yourself. Tags: api rest-api graphql Previous Custom solutions Next Atlan's open API", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/getting-started-with-the-apis", "title": "Software development kits (SDKs) | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Specifications \u00b6 At Atlan we are eager to adopt proven standards that are leading the way to simplify the lives of the Humans of Data. These include: Data contracts OpenLineage 2024-07-", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "way to simplify the lives of the Humans of Data. These include: Data contracts OpenLineage 2024-07-01 2024-07-01 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/reference/specs/", "title": "Specifications - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "Use data Discovery On this page Discovery Overview: Atlan's discovery capabilities help users find, understand, and use data assets across your organization. With powerful search, filtering, and browsing features, users can quickly locate relevant data assets, explore their context, and access the information they need to make data-driven decisions. Get started \u200b How to search and discover assets", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/discovery", "title": "Discovery | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "nformation they need to make data-driven decisions. Get started \u200b How to search and discover assets For detailed search, filtering, and troubleshooting information, use the sidebar navigation. Tags: discovery search browse capabilities Next Search and discover assets Get started", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/discovery", "title": "Discovery | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Use data Insights On this page Insights \u2795 Available via the Insights package Overview: Use Atlan's Insights to query and analyze your data assets. Leverage the visual query builder or write SQL queries to explore your data, create visualizations, and share insights with your team. Get started \u200b How to query data Guides \u200b Query building \u200b How to make a query interactive : Create interactive queries", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/insights", "title": "Insights | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "to query data Guides \u200b Query building \u200b How to make a query interactive : Create interactive queries with parameters. How to query without shared credentials : Query data without sharing credentials. How to provide credentials to query data : Configure credentials for querying. Query management \u200b How to save and share queries : Save and collaborate on queries with your team. How to schedule a quer", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/insights", "title": "Insights | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "w to save and share queries : Save and collaborate on queries with your team. How to schedule a query : Set up automated query execution. Concepts \u200b Query builder actions : Learn about the different actions available in the query builder. References \u200b Tips and tricks : Handy shortcuts and advanced capabilities for Insights. Troubleshooting \u200b Troubleshooting exporting large query results : Resolve", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/insights", "title": "Insights | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "apabilities for Insights. Troubleshooting \u200b Troubleshooting exporting large query results : Resolve issues when exporting large query result sets. Troubleshooting bring your own credentials : Fix credential-related problems when running queries. FAQ \u200b Why do I only see tables from the same schema to join from in a visual query : Understand schema-based join limitations. Can I turn off sample data", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/insights", "title": "Insights | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "join from in a visual query : Understand schema-based join limitations. Can I turn off sample data preview for the entire organization : Learn about sample data preview settings. Are there any limits on concurrent queries : Understand query concurrency limits. Can I query any data warehouse or data lake : Learn about supported data sources. How to monitor for runaway queries : Track and manage qu", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/insights", "title": "Insights | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "lake : Learn about supported data sources. How to monitor for runaway queries : Track and manage query performance. Can we restrict who can query our data warehouse : Understand query access controls. How can I identify an insights query in my database access log : Track query execution in logs. How to use parameterized queries : Create dynamic queries with parameters. What controls the frequency", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/insights", "title": "Insights | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "w to use parameterized queries : Create dynamic queries with parameters. What controls the frequency of queries : Understand query scheduling and execution. Tags: insights query analysis capabilities Next How to query data Get started Guides Concepts References Troubleshooting FAQ", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/insights", "title": "Insights | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Use data Lineage On this page Lineage Overview: Data lineage in Atlan helps you understand how data moves across your data landscape. Use lineage to perform root cause analysis, impact analysis, and automate metadata propagation. Get started \u200b How to view lineage Guides \u200b Lineage Visualization \u200b How to download and export lineage : Export lineage information for external use. Concepts \u200b What is li", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/lineage", "title": "Lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "to download and export lineage : Export lineage information for external use. Concepts \u200b What is lineage : Understand the fundamentals of data lineage. What is column-level lineage : Learn about column-level lineage tracking. What are processes : Understand how processes are represented in lineage. What are partial assets : Learn about partial asset representation in lineage. Tags: lineage data-f", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/lineage", "title": "Lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "What are partial assets : Learn about partial asset representation in lineage. Tags: lineage data-flow dependencies capabilities Next How to view lineage Get started Guides Concepts", "metadata": {"source_url": "https://docs.atlan.com/product/capabilities/lineage", "title": "Lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Connect data Connectivity Framework Connector Framework Connectors Atlan's connectors enable you to integrate, catalog, and govern metadata from leading data platforms. These connectors help you discover, document, and manage your data assets within your organization's data ecosystem, providing a unified view of your data landscape. Core offerings \u200b \ud83d\udd0d Preflight Checks Verify permissions and config", "metadata": {"source_url": "https://docs.atlan.com/product/connections", "title": "Connectors | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ified view of your data landscape. Core offerings \u200b \ud83d\udd0d Preflight Checks Verify permissions and configuration before running crawlers for successful metadata extraction. \ud83d\udd04 Workflow Management Follow recommended sequences for running workflows to ensure proper metadata extraction and lineage construction. \ud83d\udd0c Connectivity Options Choose from various connectivity methods including direct connections, pr", "metadata": {"source_url": "https://docs.atlan.com/product/connections", "title": "Connectors | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "on. \ud83d\udd0c Connectivity Options Choose from various connectivity methods including direct connections, private network links, and secure agent extraction. \ud83d\udcca Metadata Extraction Comprehensive crawling of metadata including schemas, tables, views, and lineage information from supported sources. \ud83d\udca1 For optimal results, follow the recommended workflow order: crawl data stores first, then run data quality to", "metadata": {"source_url": "https://docs.atlan.com/product/connections", "title": "Connectors | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "al results, follow the recommended workflow order: crawl data stores first, then run data quality tools, mine query logs, run extract-load tools, transformation tools, and finally crawl business intelligence tools. Tags: connect data integration connectors atlan data sources Next Manage connectivity", "metadata": {"source_url": "https://docs.atlan.com/product/connections", "title": "Connectors | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Configure Atlan Integrations Integrations Atlan integrates with a wide range of tools to help you automate workflows, connect with your favorite apps, and manage identity and access. These integrations connect your data catalog with the tools your teams already use, creating a seamless data experience across your tech stack. Key concepts \u200b Integration categories : Atlan offers integrations across", "metadata": {"source_url": "https://docs.atlan.com/product/integrations", "title": "Integrations | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ce across your tech stack. Key concepts \u200b Integration categories : Atlan offers integrations across five categories: project management, communication, collaboration, automation, and identity management. Connection methods : Most integrations use secure authentication methods like OAuth, API keys, or service accounts. Bi-directional sync : Updates flow between Atlan and integrated tools, ensuring", "metadata": {"source_url": "https://docs.atlan.com/product/integrations", "title": "Integrations | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "r service accounts. Bi-directional sync : Updates flow between Atlan and integrated tools, ensuring data consistency across platforms. Custom webhooks : Extend Atlan's capabilities by building custom integrations using the provided APIs and webhooks. Core offerings \u200b \u2699\ufe0f Automation Connect with platforms like AWS Lambda to automate data workflows and streamline routine tasks. \ud83d\udc65 Collaboration Integr", "metadata": {"source_url": "https://docs.atlan.com/product/integrations", "title": "Integrations | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "orms like AWS Lambda to automate data workflows and streamline routine tasks. \ud83d\udc65 Collaboration Integrate with tools like Slack and Microsoft Teams to enhance team collaboration and knowledge sharing. \ud83d\udcac Communication Connect with SMTP for real-time alerts. \ud83d\udd10 Identity management Integrate with identity providers like Okta and Azure AD for seamless authentication and user management. \ud83d\udccb Project managem", "metadata": {"source_url": "https://docs.atlan.com/product/integrations", "title": "Integrations | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "providers like Okta and Azure AD for seamless authentication and user management. \ud83d\udccb Project management Connect with tools like Jira and Service Now to link data assets to projects and track data-related tasks. Get started \u200b 1 Select an integration Choose from Atlan's available integrations based on your team's tools and workflows. \u2192 2 Configure connection Follow the integration-specific setup gui", "metadata": {"source_url": "https://docs.atlan.com/product/integrations", "title": "Integrations | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "your team's tools and workflows. \u2192 2 Configure connection Follow the integration-specific setup guide to establish a secure connection with your tool. \u2192 3 Test and activate Verify the integration is working correctly with a test action, then activate for your organization. \ud83d\udca1 Need a custom integration? Atlan provides APIs and webhooks that let you build custom integrations with any tool in your te", "metadata": {"source_url": "https://docs.atlan.com/product/integrations", "title": "Integrations | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "on? Atlan provides APIs and webhooks that let you build custom integrations with any tool in your tech stack. Tags: integrations atlan setup Next Automation Integrations", "metadata": {"source_url": "https://docs.atlan.com/product/integrations", "title": "Integrations | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Configure Atlan Administration Administration Atlan's administration features provide comprehensive tools for managing your data workspace. Configure user access, monitor system logs, and customize workspace settings to help your organization's data environment operate efficiently and securely while meeting your specific requirements. Key features \u200b \ud83d\udcca Logs Monitor system events and user activities", "metadata": {"source_url": "https://docs.atlan.com/product/administration", "title": "Administration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "meeting your specific requirements. Key features \u200b \ud83d\udcca Logs Monitor system events and user activities through comprehensive logs. Track changes and troubleshoot issues with detailed event history. \ud83e\uddea Labs Access experimental features and beta functionality. Test new capabilities before they're generally available. \ud83d\udcdd README templates Standardize documentation across your data assets with customizable", "metadata": {"source_url": "https://docs.atlan.com/product/administration", "title": "Administration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ly available. \ud83d\udcdd README templates Standardize documentation across your data assets with customizable templates. Maintain consistent information structure. Featured guides \u200b View event logs Learn how to access and interpret system event logs Enable labs features Discover how to activate and use experimental features Create README templates Set up standardized templates for asset documentation Tags:", "metadata": {"source_url": "https://docs.atlan.com/product/administration", "title": "Administration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "imental features Create README templates Set up standardized templates for asset documentation Tags: atlan documentation Next Allow guests to request updates", "metadata": {"source_url": "https://docs.atlan.com/product/administration", "title": "Administration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Get Started What is Atlan? On this page What is Atlan? We are a modern data workspace that makes collaboration among diverse users like business, analysts, and engineers easier, increasing efficiency and agility in data projects. We started out as a data team, solving social good problems using data science. We built Atlan for ourselves over the course of 200 data projects, which included India's", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "science. We built Atlan for ourselves over the course of 200 data projects, which included India's national data platform used by the prime minister and monitoring the Sustainable Development Goals with the United Nations. Atlan helped us build India's national data platform with an 8-member team, making it the fastest project of its kind to go live in just 12 months - instead of the projected th", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "making it the fastest project of its kind to go live in just 12 months - instead of the projected three years. Why we built Atlan \u200b Data teams can be diverse: analysts, scientists, engineers, and business users. Diverse people with diverse tools and skillsets mean diverse DNAs. All of it led to chaos, which made our Slack channels look like this... We call this \"collaboration overheard\" \u200b We knew", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "s, which made our Slack channels look like this... We call this \"collaboration overheard\" \u200b We knew we couldn't scale like this, there had to be a better way. We borrowed the principles of Agile from product teams, DevOps from engineering teams, and Lean Manufacturing from supply chain teams. We then experimented for two years and across 200 data projects to create our own idea of what makes data", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "n experimented for two years and across 200 data projects to create our own idea of what makes data teams successful. We call this DataOps . How Atlan helps data teams \u200b With Atlan, analyst teams at Unilever have shipped 100+ additional data projects per quarter, while data science teams at Samsung have saved 50% of their time. Create self-service ecosystems by reducing dependencies \u200b Atlan makes", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "have saved 50% of their time. Create self-service ecosystems by reducing dependencies \u200b Atlan makes all your data assets easily discoverable. No more Slack messages like \"Where's that dataset?\" or long email threads for approvals. With Atlan, you can simply Cmd+K your way to the right data asset. Key capabilities : discovery and search , Visual Query Builder , saved queries , READMEs Improve the a", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "y capabilities : discovery and search , Visual Query Builder , saved queries , READMEs Improve the agility of your data team \u200b Data practitioners spend 30-50% of their time finding and understanding data. Atlan cuts that time by 95%. Your data team will be shipping 2-3 times more projects in no time. Key capabilities : visibility of data quality tests and observability alerts, automated lineage ,", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": ". Key capabilities : visibility of data quality tests and observability alerts, automated lineage , Atlan AI Promote governance and a sustainable data culture \u200b Don't lose sleep trying to figure out if your sensitive data is secure. Build ecosystems of trust, make your team happy, and let Atlan manage governance and security behind the scenes. Key capabilities : tag sensitive data , granular acces", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ge governance and security behind the scenes. Key capabilities : tag sensitive data , granular access control , data products Tags: atlan documentation Next Administrators Why we built Atlan How Atlan helps data teams", "metadata": {"source_url": "https://docs.atlan.com/get-started/what-is-atlan", "title": "What is Atlan? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Get Started Quick Start Guides Administrators On this page Administrators User management \u200b User management is a critical part of data governance. Atlan's user management capabilities should be a mainstay of how you organize and control access for people in your organization. Add and manage users from the admin center \u200b It's super simple to invite and remove users from Atlan from the Admin center", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "om the admin center \u200b It's super simple to invite and remove users from Atlan from the Admin center . You can also manage existing users by adding them to groups, changing their roles, or set up SSO , SCIM , and SMTP configurations. Manage access control from the governance center \u200b The Governance center is where you can build access control mechanisms to manage user access . Personas allow you to", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "enter is where you can build access control mechanisms to manage user access . Personas allow you to group users into teams, such as Financial Analysts or Cloud Engineers , and set policies based on the access those personas should have. Purposes are where you can build policies based on the actions or access that a user might need. For example, you can use Atlan's policy-based access controls to", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "or access that a user might need. For example, you can use Atlan's policy-based access controls to manage access to PII and other sensitive data. This is a best practice for data governance. Once you set these policies, Atlan will enforce them throughout your users' experience. This means that users who don't have access to a particular type of data will not be able to see it. Governance workflow", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "s who don't have access to a particular type of data will not be able to see it. Governance workflows help you set up robust controls on data access management, metadata enrichment, new entity creation, and more, with out-of-the-box workflow templates and automated execution. Asset profile \u200b The asset profile in Atlan gives you a quick and clear understanding of what a data asset contains. You can", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "et profile in Atlan gives you a quick and clear understanding of what a data asset contains. You can think of the asset profile as the TL;DR about your data. Glossary \u200b The Atlan glossary is a rich tool for defining and organizing your data terminology to improve transparency and share knowledge. No need to ask around for what a column name means. The glossary functions as a source of truth for te", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "need to ask around for what a column name means. The glossary functions as a source of truth for teams to understand their data assets. Start keeping all your definitions in one searchable place. The glossary provides key intel on your data assets so you can quickly understand important attributes of your data, such as: Owners of your data, so you know who to ask for clarification. Certificate st", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "of your data, such as: Owners of your data, so you know who to ask for clarification. Certificate status, to easily understand if metadata enrichment is still in progress or the asset is ready to be used. Linked assets that are relevant to the term, so you can explore other helpful material. Did you know? The glossary helps power Atlan's powerful search tool , so tagging and defining assets are cr", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "know? The glossary helps power Atlan's powerful search tool , so tagging and defining assets are critical to helping your team find what they need. Discovery \u200b We rely on search bars to find things in almost every corner of the internet. Atlan uses a similar search tool to help you explore your data assets. The discovery tool is Atlan's powerful in-platform search, powered by the terms and descri", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "a assets. The discovery tool is Atlan's powerful in-platform search, powered by the terms and descriptions you've added to your data assets. Here are a few of the things that make Atlan's discovery awesome: Every attribute of your data is searchable in Atlan - saved SQL queries, schemas, links, and more. This lets you search far and wide to find exactly what you need. Intelligent keyword recogniti", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "more. This lets you search far and wide to find exactly what you need. Intelligent keyword recognition sees through your typos to show exactly what you wanted, no matter what you actually typed. Search assets from just about any page in Atlan using Cmd/Ctrl+K or by clicking Search assets across Atlan at the top of any page. Control your search by using facets about your data (such as the verificat", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "n at the top of any page. Control your search by using facets about your data (such as the verification status or owner) to find what's most important to you. Sort by popularity to quickly discover what assets your teammates are using every day. Tags: get-started quick-start Previous What is Atlan? Next Data consumers User management Asset profile Glossary Discovery", "metadata": {"source_url": "https://docs.atlan.com/get-started/how-tos/quick-start-for-admins", "title": "Administrators | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "Connect data Data Warehouses Snowflake Get Started Set up Snowflake On this page Set up Snowflake Who can do this? You need your Snowflake administrator to run these commands - you may not have access yourself. Create user and role in Snowflake \u200b Create a role and user in Snowflake using the following commands: Create role \u200b Create a role in Snowflake using the following commands: CREATE OR REPLAC", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ng commands: Create role \u200b Create a role in Snowflake using the following commands: CREATE OR REPLACE ROLE atlan_user_role ; GRANT OPERATE , USAGE ON WAREHOUSE \"<warehouse-name>\" TO ROLE atlan_user_role ; Replace <warehouse-name> with the default warehouse to use when running the Snowflake crawler . Atlan requires the following privileges to: OPERATE enables Atlan to start the virtual warehouse to", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Atlan requires the following privileges to: OPERATE enables Atlan to start the virtual warehouse to fetch metadata if the warehouse has stopped. USAGE enables Atlan to show or list metadata from Snowflake. This in turn enables the Snowflake crawler to run the SHOW query. Create a user \u200b Create a separate user to integrate into Atlan, using one of the following 3 options: With a public key in Snow", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "parate user to integrate into Atlan, using one of the following 3 options: With a public key in Snowflake \u200b See Snowflake's official guide for details on generating an RSA key-pair . To create a user with a key-pair, replace the value for rsa_public_key with the public key and run the following: CREATE USER atlan_user rsa_public_key = 'MIIBIjANBgkqh...' default_role = atlan_user_role default_wareh", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ATE USER atlan_user rsa_public_key = 'MIIBIjANBgkqh...' default_role = atlan_user_role default_warehouse = '<warehouse-name>' display_name = 'Atlan' TYPE = 'SERVICE' Learn more about the SERVICE type property in Snowflake documentation . Did you know? Atlan only supports encrypted private keys with a non-empty passphrase - generally recommended as more secure. An empty passphrase results in workfl", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "a non-empty passphrase - generally recommended as more secure. An empty passphrase results in workflow failures. To generate an encrypted private key, omit the -nocrypt option. Refer to Snowflake documentation to learn more. With a password in Snowflake \u200b Did you know? Snowflake recommends transitioning away from basic authentication using username and password. Change to key-pair authentication f", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ning away from basic authentication using username and password. Change to key-pair authentication for enhanced security. For any existing Snowflake workflows, you can modify the crawler configuration to update the authentication method. To create a user with a password, replace <password> and run the following: CREATE USER atlan_user password = '<password>' default_role = atlan_user_role default_", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "he following: CREATE USER atlan_user password = '<password>' default_role = atlan_user_role default_warehouse = '<warehouse-name>' display_name = 'Atlan' TYPE = 'LEGACY_SERVICE' Learn more about the LEGACY_SERVICE type property in Snowflake documentation . Managed through your identity provider (IdP) Private preview \u200b This method is currently only available if Okta is your IdP (Snowflake supports)", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": ") Private preview \u200b This method is currently only available if Okta is your IdP (Snowflake supports) authenticating natively through Okta : Create a user in your identity provider (IdP) and use federated authentication in Snowflake . The password for this user must be maintained solely in the IdP and multi-factor authentication (MFA) must be disabled. Grant role to user \u200b To grant the atlan_user_r", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "d multi-factor authentication (MFA) must be disabled. Grant role to user \u200b To grant the atlan_user_role to the new user: GRANT ROLE atlan_user_role TO USER atlan_user ; Configure OAuth (client credentials flow) with Microsoft Entra ID \u200b To configure OAuth authentication using Microsoft Entra ID (formerly Azure AD) with the client credentials flow: Follow Snowflake's documentation to: Register a ne", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "merly Azure AD) with the client credentials flow: Follow Snowflake's documentation to: Register a new application in Microsoft Entra ID Collect the client ID , tenant ID , and client secret Add the required API permissions In Snowflake, create a security integration using the following: CREATE SECURITY INTEGRATION external_oauth_azure_ad TYPE = external_oauth ENABLED = true EXTERNAL_OAUTH_TYPE = a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ITY INTEGRATION external_oauth_azure_ad TYPE = external_oauth ENABLED = true EXTERNAL_OAUTH_TYPE = azure EXTERNAL_OAUTH_ISSUER = '\\<AZURE_AD_ISSUER\\>' EXTERNAL_OAUTH_JWS_KEYS_URL = '\\<AZURE_AD_JWS_KEY_ENDPOINT\\>' EXTERNAL_OAUTH_AUDIENCE_LIST = ( '\\<SNOWFLAKE_APPLICATION_ID_URI\\>' ) EXTERNAL_OAUTH_TOKEN_USER_MAPPING_CLAIM = 'sub' EXTERNAL_OAUTH_SNOWFLAKE_USER_MAPPING_ATTRIBUTE = 'login_name' ; Repl", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "KEN_USER_MAPPING_CLAIM = 'sub' EXTERNAL_OAUTH_SNOWFLAKE_USER_MAPPING_ATTRIBUTE = 'login_name' ; Replace the placeholders with actual values from your Azure AD app: <AZURE_AD_ISSUER> \u2192 Your tenant's OAuth 2.0 issuer URL <AZURE_AD_JWS_KEY_ENDPOINT> \u2192 Azure JWKs URI <SNOWFLAKE_APPLICATION_ID_URI> \u2192 Application ID URI of the Azure app Create a Snowflake user with a login name that exactly matches the", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "lication ID URI of the Azure app Create a Snowflake user with a login name that exactly matches the Azure AD client object ID: CREATE USER oauth_svc_user WITH LOGIN_NAME = '\\<AZURE_AD_CLIENT_OBJECT_ID\\>' -- Use Azure client OBJECT ID DEFAULT_ROLE = \\ < ROLE\\ > DEFAULT_WAREHOUSE = \\ < WAREHOUSE\\ > ; Grant the configured role to this user: GRANT ROLE \\ < ROLE\\ > TO USER oauth_svc_user ; Choose metad", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Grant the configured role to this user: GRANT ROLE \\ < ROLE\\ > TO USER oauth_svc_user ; Choose metadata fetching method \u200b Atlan supports two methods for fetching metadata from Snowflake - account usage and information schema. You should choose one of these two methods to set up Snowflake: Account usage Information schema Overview Simplified grants but some limitations in functionality Most compreh", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "age Information schema Overview Simplified grants but some limitations in functionality Most comprehensive approach, more grant management required Method Views in the SNOWFLAKE database that display object metadata and usage metrics for your account System-defined views and table functions that provide extensive metadata for objects created in your account Permissions User role and account, singl", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "vide extensive metadata for objects created in your account Permissions User role and account, single grant for SNOWFLAKE database User role and account, multiple grants per database Data latency 45 minutes to 3 hours (varies by view) None Historical data retention 1 year 7 days to 6 months (varies by view or table function) Asset extraction ACCOUNT_USAGE schema INFORMATION_SCHEMA schema View line", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "by view or table function) Asset extraction ACCOUNT_USAGE schema INFORMATION_SCHEMA schema View lineage ACCOUNT_USAGE schema INFORMATION_SCHEMA schema Table lineage ACCOUNT_USAGE schema ACCOUNT_USAGE schema Tag import ACCOUNT_USAGE schema ACCOUNT_USAGE schema Usage and popularity ACCOUNT_USAGE schema ACCOUNT_USAGE schema Metadata extraction time Varies by warehouse size. For example, 8 minutes for", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "a ACCOUNT_USAGE schema Metadata extraction time Varies by warehouse size. For example, 8 minutes for 10 million assets (recommended for extracting a large number of assets) Varies by warehouse size. For example, 2+ hours for 10 million assets Extraction limitations External table location data, procedures, and primary and foreign keys None Grant permissions for account usage method \u200b danger If you", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "edures, and primary and foreign keys None Grant permissions for account usage method \u200b danger If you want to set warehouse timeouts when using this method, set a large value initially for the workflow to succeed. Once the workflow has succeeded, adjust the value to be twice the extraction time. This method uses the views in SNOWFLAKE.ACCOUNT_USAGE (or a copied version of this schema) to fetch the", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "method uses the views in SNOWFLAKE.ACCOUNT_USAGE (or a copied version of this schema) to fetch the metadata from Snowflake into Atlan. You can be more granular with permissions using this method, but there are limitations with this approach . To crawl assets, generate lineage, and import tags \u200b If you also want to be able to preview and query the data, you can use the preview and query existing a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "you also want to be able to preview and query the data, you can use the preview and query existing assets permissions instead. Snowflake stores all tag objects in the ACCOUNT_USAGE schema. If you're using the account usage method to crawl metadata in Atlan or you have configured the Snowflake miner , you need to grant the same permissions to import tags as required for crawling Snowflake assets. N", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": ", you need to grant the same permissions to import tags as required for crawling Snowflake assets. Note that object tagging in Snowflake currently requires Enterprise Edition or higher . To use the default SNOWFLAKE database and ACCOUNT_USAGE schema and also mine Snowflake's query history (for lineage), grant these permissions: USE ROLE ACCOUNTADMIN ; GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAK", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "ge), grant these permissions: USE ROLE ACCOUNTADMIN ; GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE atlan_user_role ; The ACCOUNTADMIN role is required to grant privileges on the SNOWFLAKE database due to the following reasons: By default, only the ACCOUNTADMIN role can access the SNOWFLAKE database. To enable other roles to access the database and schemas and query the views, a user wit", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "E database. To enable other roles to access the database and schemas and query the views, a user with the ACCOUNTADMIN role needs to grant IMPORTED PRIVILEGES on the SNOWFLAKE database to the desired roles. To use a copied or cloned version of this default schema, where you can also remove any sensitive data for security purposes, grant these permissions: GRANT USAGE ON DATABASE \"<copied-database>", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tive data for security purposes, grant these permissions: GRANT USAGE ON DATABASE \"<copied-database>\" TO ROLE atlan_user_role ; GRANT USAGE ON SCHEMA \"<copied-schema>\" IN DATABASE \"<copied-database>\" TO ROLE atlan_user_role ; GRANT REFERENCES ON ALL VIEWS IN DATABASE \"<copied-database>\" TO ROLE atlan_user_role ; Replace <copied-database> with the copied Snowflake database name. Replace <copied-sch", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "n_user_role ; Replace <copied-database> with the copied Snowflake database name. Replace <copied-schema> with the copied Snowflake ACCOUNT_USAGE schema name. The grants for the copied version can't be used on the original SNOWFLAKE database. This is because Snowflake produces an error that granular grants can't be given to imported databases. When using a cloned or copied version, verify that the", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "grants can't be given to imported databases. When using a cloned or copied version, verify that the table or view definition remains unchanged as in your SNOWFLAKE database. If the format is different. For example, a column is missing and it no longer qualifies as a clone. To crawl streams \u200b To crawl streams, provide the following permissions: To crawl current streams: GRANT USAGE ON ALL SCHEMAS I", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "l streams, provide the following permissions: To crawl current streams: GRANT USAGE ON ALL SCHEMAS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT REFERENCES ON ALL TABLES IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT SELECT ON ALL STREAMS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; Replace <database-name> with the Snowflake database name. To crawl future", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "TO ROLE atlan_user_role ; Replace <database-name> with the Snowflake database name. To crawl future streams: GRANT USAGE ON FUTURE SCHEMAS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT REFERENCES ON FUTURE TABLES IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT SELECT ON FUTURE STREAMS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; Replace <database-name> with", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "FUTURE STREAMS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; Replace <database-name> with the Snowflake database name. (Optional) To preview and query existing assets \u200b To query and preview data within assets that already exist in Snowflake, add these permissions: GRANT USAGE ON DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT USAGE ON ALL SCHEMAS IN DATABASE \"<database-name>\"", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "\"<database-name>\" TO ROLE atlan_user_role ; GRANT USAGE ON ALL SCHEMAS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT SELECT ON ALL TABLES IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT SELECT ON ALL EXTERNAL TABLES IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT SELECT ON ALL VIEWS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT SELECT ON", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "; GRANT SELECT ON ALL VIEWS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT SELECT ON ALL MATERIALIZED VIEWS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT SELECT ON ALL STREAMS IN DATABASE \"<database-name>\" TO ROLE atlan_user_role ; GRANT MONITOR ON PIPE \"<pipe-name>\" TO ROLE atlan_user_role ; Replace <database-name> with the database you want to be able to preview an", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/set-up-snowflake", "title": "Set up Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "Connect data Data Warehouses Databricks Get Started Set up Databricks On this page Set up Databricks Atlan supports three authentication methods for fetching metadata from Databricks. You can set up any of the following authentication methods: Personal access token authentication AWS service principal authentication Azure service principal authentication Personal access token authentication \u200b Who", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "al authentication Azure service principal authentication Personal access token authentication \u200b Who can do this? Check that you have Admin and Databricks SQL access for the Databricks workspace. This is required for both cluster options described below. If you don't have this access, contact your Databricks administrator. Grant user access to workspace \u200b To grant workspace access to the user creat", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "tabricks administrator. Grant user access to workspace \u200b To grant workspace access to the user creating a personal access token: From the left menu of the account console, click Workspaces and then select a workspace to which you want to add the user. From the tabs along the top of your workspace page, click the Permissions tab. In the upper right of the Permissions page, click Add permissions . I", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ge, click the Permissions tab. In the upper right of the Permissions page, click Add permissions . In the Add permissions dialog, enter the following details: For User, group, or service principal , select the user to grant access. For Permission , click the dropdown and select workspace User. Generate a personal access token \u200b You can generate a personal access token in your Databricks workspace", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ate a personal access token \u200b You can generate a personal access token in your Databricks workspace to the authenticate the integration in Atlan . To generate a personal access token: From the top right of your Databricks workspace, click your Databricks username, and then from the dropdown, click User Settings . Under the Settings menu, click Developer . On the Developer page, next to Access toke", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ser Settings . Under the Settings menu, click Developer . On the Developer page, next to Access tokens , click Manage . On the Access tokens page, click the Generate new token button. In the Generate new token dialog: For Comment , enter a description of the token's intended use - for example, Atlan crawler . For Lifetime (days) , consider removing the number. This enables the token to be used ind", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "crawler . For Lifetime (days) , consider removing the number. This enables the token to be used indefinitely - it won't need to be refreshed. Important! If you do enter a number, remember that you need to periodically regenerate it and update Atlan's crawler configuration with the new token each time. At the bottom of the dialog, click Generate . Copy and save the generated token in a secure loca", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "me. At the bottom of the dialog, click Generate . Copy and save the generated token in a secure location, and then click Done . Select a cluster \u200b Did you know? Atlan recommends using serverless SQL warehouses for instant compute availability. To enable serverless SQL warehouses, refer to Databricks documentation for AWS Databricks workspaces or Microsoft documentation for Azure Databricks workspa", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "documentation for AWS Databricks workspaces or Microsoft documentation for Azure Databricks workspaces. You can set up personal access token authentication for your Databricks instance using one of the following cluster options: Interactive cluster SQL warehouse (formerly SQL endpoint) Interactive cluster \u200b To confirm an all-purpose interactive cluster is configured: From the left menu of any pag", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "cluster \u200b To confirm an all-purpose interactive cluster is configured: From the left menu of any page of your Databricks instance, click Compute . Under the All-purpose clusters tab, verify you have a cluster defined. Click the link under the Name column of the table to open your cluster. Under the Configuration tab, verify the Autopilot options to Terminate after ... minutes is enabled. At the bo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "Configuration tab, verify the Autopilot options to Terminate after ... minutes is enabled. At the bottom of the Configuration tab, expand the Advanced options expandable. Under the Advanced options expandable, open the JDBC/ODBC tab. Confirm that all of the fields in this tab are populated, and copy them for use in crawling: Server Hostname , Port , and HTTP Path . SQL warehouse (formerly SQL endp", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "them for use in crawling: Server Hostname , Port , and HTTP Path . SQL warehouse (formerly SQL endpoint) \u200b To confirm a SQL warehouse is configured: From the left menu of any page of your Databricks instance, open the dropdown just below the databricks logo and change to SQL . From the refreshed left menu, click SQL Warehouses . Click the link under the Name column of the table to open your SQL w", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ft menu, click SQL Warehouses . Click the link under the Name column of the table to open your SQL warehouse. Under the Connection details tab, confirm that all of the fields are populated and copy them for use in crawling: Server hostname , Port , and HTTP path . AWS service principal authentication \u200b Who can do this? You need your AWS Databricks account admin to create a service principal and ma", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "n \u200b Who can do this? You need your AWS Databricks account admin to create a service principal and manage OAuth credentials for the service principal and your AWS Databricks workspace admin to add the service principal to your AWS Databricks workspace - you may not have access yourself. You need the following to authenticate the connection in Atlan: Client ID Client secret Create a service principa", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "following to authenticate the connection in Atlan: Client ID Client secret Create a service principal \u200b You can create a service principal directly in your Databricks account or from a Databricks workspace. Identity federation enabled on your workspaces: Databricks recommends creating the service principal in the account and assigning it to workspaces. Identity federation disabled on your workspac", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "incipal in the account and assigning it to workspaces. Identity federation disabled on your workspaces: Databricks recommends that you create your service principal from a workspace. Identity federation enabled \u200b To create a service principal from your Databricks account, with identify federation enabled: Log in to your Databricks account console as an account admin. From the left menu of the acco", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "abled: Log in to your Databricks account console as an account admin. From the left menu of the account console, click User management . From the tabs along the top of the User management page, click the Service principals tab. In the upper right of the Service principals page, click Add service principal . On the Add service principal page, enter a name for the service principal and then click Ad", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ncipal . On the Add service principal page, enter a name for the service principal and then click Add . Once the service principal has been created, you can assign it to your identity federated workspace. From the left menu of the account console, click Workspaces and then select a workspace to which you want to add the service principal. From the tabs along the top of your workspace page, click t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "h you want to add the service principal. From the tabs along the top of your workspace page, click the Permissions tab. In the upper right of the Permissions page, click Add permissions . In the Add permissions dialog, enter the following details: For User, group, or service principal , select the service principal you created. For Permission , click the dropdown and select workspace User. Identit", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ervice principal you created. For Permission , click the dropdown and select workspace User. Identity federation disabled \u200b To create a service principal from a Databricks workspace, with identity federation disabled: Log in to your AWS Databricks workspace as a workspace admin. From the top right of your workspace, click your username, and then from the dropdown, click Admin Settings . In the lef", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "f your workspace, click your username, and then from the dropdown, click Admin Settings . In the left menu of the Settings page, under the Workspace admin subheading, click Identity and access . On the Identity and access page, under Management and permissions , next to Service principals , click Manage . In the upper right of the Service principals page, click Add service principal . In the Add s", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "nage . In the upper right of the Service principals page, click Add service principal . In the Add service principal dialog, click the Add new button. For New service principal display name , enter a name for the service principal and then click Add . Create an OAuth secret for the service principal \u200b You need to create an OAuth secret to authenticate to Databricks REST APIs. To create an OAuth se", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "\u200b You need to create an OAuth secret to authenticate to Databricks REST APIs. To create an OAuth secret for the service principal : Log in to your Databricks account console as an account admin. From the left menu of the account console, click User management . From the tabs along the top of the User management page, click the Service principals tab. In the upper right of the Service principals p", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "er management page, click the Service principals tab. In the upper right of the Service principals page, select the service principal you created . On the service principal page, under OAuth secrets , click Generate secret . From the Generate secret dialog, copy the Secret and Client ID and store it in a secure location. danger Note that this secret is only revealed once during creation. The clien", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "in a secure location. danger Note that this secret is only revealed once during creation. The client ID is the same as the application ID of the service principal. Once you've copied the client ID and secret, click Done . Azure service principal authentication \u200b Who can do this? You need your Azure Databricks account admin to create a service principal and your Azure Databricks workspace admin to", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "Databricks account admin to create a service principal and your Azure Databricks workspace admin to add the service principal to your Azure Databricks workspace - you may not have access yourself. You need the following to authenticate the connection in Atlan: Client ID (application ID) Client secret Tenant ID (directory ID) Create a service principal \u200b To use service principals on Azure Databric", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "et Tenant ID (directory ID) Create a service principal \u200b To use service principals on Azure Databricks , an admin user must create a new Microsoft Entra ID (formerly Azure Active Directory) application and then add it to the Azure Databricks workspace to use as a service principal. To create a service principal: Sign in to the Azure portal . If you have access to multiple tenants, subscriptions, o", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ce principal: Sign in to the Azure portal . If you have access to multiple tenants, subscriptions, or directories, click the Directories + subscriptions (directory with filter) icon in the top menu to switch to the directory in which you want to create the service principal. In_Search resources, services, and docs_, search for and select Microsoft Entra ID . Click**+ Add and select App registratio", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "vices, and docs_, search for and select Microsoft Entra ID . Click**+ Add and select App registration**. For_Name_, enter a name for the application. In the_Supported account types_section, select Accounts in this organizational directory only (Single tenant) and then click Register . On the application page's_Overview_page, in the_Essentials_section, copy and store the following values in a secur", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "tion page's_Overview_page, in the_Essentials_section, copy and store the following values in a secure location: Application (client) ID Directory (tenant) ID To generate a client secret, within_Manage_, click Certificates & secrets . On the_Client secrets_tab, click New client secret . In the_Add a client secret_dialog, enter the following details: For Description , enter a description for the cli", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "client secret_dialog, enter the following details: For Description , enter a description for the client secret. For_Expires_, select an expiry time period for the client secret and then click Add . Copy and store the client secret's_Value_in a secure place. Add a service principal to your account \u200b To add a service principal to your Azure Databricks account: Log in to your Azure Databricks account", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "To add a service principal to your Azure Databricks account: Log in to your Azure Databricks account console as an account admin. From the left menu of the account console, click User management . From the tabs along the top of the User management page, click the Service principals tab. In the upper right of the Service principals page, click Add service principal . On the Add service principal pa", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "right of the Service principals page, click Add service principal . On the Add service principal page, enter a name for the service principal. Under UUID , paste the Application (client) ID for the service principal. Click Add . Assign a service principal to a workspace \u200b To add users to a workspace using the account console, the workspace must be enabled for identity federation. Workspace admins", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks", "title": "Set up Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Asset-specific operations \u00b6 As developers ourselves, we know that learning is often easiest through example. In this Asset-specific operations section you will find details about managi", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "asiest through example. In this Asset-specific operations section you will find details about managing specific kinds of assets. You may also want to explore: Common tasks Common operations on assets, that are available across all assets. Discover actions Governance structures Operations dealing with governance structures, rather than assets. Manage governance structures 2023-04-12 2024-05-17 Was", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "h governance structures, rather than assets. Manage governance structures 2023-04-12 2024-05-17 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/", "title": "Asset-specific - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Bulk updates \u00b6 For most of the write operations covered in the above sections, you can also: Combine multiple operations together Make changes to multiple assets at the same time Optimi", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "n also: Combine multiple operations together Make changes to multiple assets at the same time Optimize changes These each allow you to optimize your work. Rather than making a separate API call for each change or each asset, you can make a single API call that includes all your changes \u2014 even across many assets. Of course, in order to change multiple assets you also need to first know which assets", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "many assets. Of course, in order to change multiple assets you also need to first know which assets to change. To do this, there is a common end-to-end bulk update pattern you can follow. 2023-04-12 2024-04-22 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/", "title": "Bulk updates - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Event handling \u00b6 If you want to process metadata as it evolves, in real-time, then you'll want to tap into events. Currently in Atlan, you can create webhooks that will send all metadat", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "u'll want to tap into events. Currently in Atlan, you can create webhooks that will send all metadata activity to a target URL of your choice. In this section you'll find common scenarios to write such a target to handle these events: Webhook <> Lambda handling events through an AWS Lambda function 2023-03-06 2024-03-14 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Hel", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "2023-03-06 2024-03-14 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/events/", "title": "Event handling - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "Developer Toolkits Toolkits Packages Packages Running example Define via template Render your package Develop your logic Test your logic Release (GA) Widget reference Typedefs Typedefs Running example Define via template Render your model Test your model Bind the SDKs Write integration test Test baseline UX Release (GA) Testing Testing Overview Getting started Getting started Other important conce", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eline UX Release (GA) Testing Testing Overview Getting started Getting started Other important concepts Documentation conventions Integration options Integration options CLI dbt Java Python Kotlin Scala Clojure Go Events Raw REST API Site map Common tasks Common tasks Common asset actions Common asset actions Certify assets Manage announcements Change description Change owners Tag (classify) asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "et actions Certify assets Manage announcements Change description Change owners Tag (classify) assets Change custom metadata Link terms to assets Link domains to assets Manage asset READMEs Add asset resources Manage asset relationships with attributes Asset CRUD operations Asset CRUD operations Create an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ate an asset Retrieve an asset Update an asset Delete an asset Find and apply suggestions Restore an asset Review changes to an asset Review accesses of an asset Get all assets that... Get all assets that... Search for assets Search examples Lineage Lineage Manage lineage Traverse lineage Bulk updates Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event hand", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es Bulk updates Combine multiple operations Update multiple assets End-to-end bulk update Event handling Event handling Webhook <> Lambda Webhook <> Lambda Set up Lambda Code your logic Deploy your code Set up webhook Manage your webhook Asset-specific Asset-specific Glossary operations Glossary operations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hiera", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rations Create objects Retrieval by name Create a hierarchy Categorize terms Traverse category hierarchy Creating assets Creating assets Manage relational assets Manage cube assets Manage object store assets Manage object store assets Manage AWS S3 assets Manage Azure Data Lake Storage assets Manage Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Mana", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Google Cloud Storage assets Manage BI assets Manage BI assets Manage Google Data Studio assets Manage Preset assets Manage Superset assets Manage API assets Manage file assets Manage Airflow assets Manage Kafka assets Manage Azure Event Hub assets Manage App assets Manage AI assets Manage Insights assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Qual", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets Manage QuickSight assets Manage DocumentDB assets Manage Data Quality assets Manage Data Quality assets Manage Data Quality rules Connector types and icons Data mesh Data mesh Manage data domains Manage data products Data contracts Data contracts Manage data contracts (via CLI) Manage data contracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage p", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ntracts (via SDK) Profiling and popularity Profiling and popularity Manage column profiling Manage popularity Governance structures Governance structures Custom metadata Custom metadata Create custom metadata Retrieve custom metadata Update custom metadata Delete custom metadata Manage badges Manage options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access c", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "options (enumerations) Tag management Tag management Manage Atlan tags Monitor propagation Access control Access control Manage personas Manage purposes Manage policies Access events API token management Run queries on an asset Users and groups Users and groups Create users and groups Retrieve users and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and w", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s and groups Update users and groups Delete users and groups Manage SSO group mapping Packages and workflows Packages and workflows Manage workflows Manage workflow schedules Supported packages Supported packages Athena assets Asset import Asset export (basic) API token connection admin BigQuery assets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ets Connection delete Confluent Kafka assets dbt assets DynamoDB assets Databricks assets Databricks miner Fivetran enrichment Glue assets Looker assets Lineage builder Lineage generator (no transformation) MongoDB assets Oracle assets Postgres assets PowerBI assets Redshift assets Relational assets builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File managem", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "builder Snowflake assets Snowflake miner Sigma assets SQL Server assets Tableau assets File management File management Reference Reference Searching Searching Querying Querying Term-level queries Full text queries Rank feature queries Compound queries Searchable fields Searchable fields Common search fields Glossary-specific search fields Limiting details Sorting search results Paging search resu", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ch fields Glossary-specific search fields Limiting details Sorting search results Paging search results Aggregating search results Events Events Event triggers Event triggers Asset is created Asset is updated Asset is deleted Custom metadata is added Custom metadata is removed Asset is tagged Asset is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUS", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "is untagged Lineage is created Event types Event types ENTITY_CREATE ENTITY_UPDATE ENTITY_DELETE BUSINESS_ATTRIBUTE_UPDATE CLASSIFICATION_ADD CLASSIFICATION_DELETE Specifications Specifications Data contract spec OpenLineage spec Types Types Core Core Referenceable Asset Connection Catalog Tag TagAttachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy Busines", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tachment Access control Access control Persona Purpose AuthPolicy AuthService BusinessPolicy BusinessPolicyException BusinessPolicyIncident BusinessPolicyLog Incident Lineage Lineage ColumnProcess BIProcess Resources Resources Link File Readme ReadmeTemplate Badge Workflows Workflows Workflow WorkflowRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "owRun Task Structs Structs Action AuthPolicyCondition AuthPolicyValiditySchedule AwsCloudWatchMetric AwsTag AzureTag BadgeCondition BusinessPolicyRule ByocSsoConfig ColumnValueFrequencyMap DbtMetricFilter DbtJobRun GoogleLabel GoogleTag Histogram KafkaTopicConsumption MCRuleComparison MCRuleSchedule PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails E", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "PopularityInsights SourceTagAttachment SourceTagAttachmentValue SourceTagAttribute StarredDetails Enumerations Enumerations AdfActivityState ADLSAccessTier ADLSAccountStatus ADLSEncryptionTypes ADLSLeaseState ADLSLeaseStatus ADLSObjectArchiveStatus ADLSObjectType ADLSPerformance ADLSProvisionState ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ADLSReplicationType ADLSStorageKind APIQueryParamTypeEnum atlas_operation AtlasGlossaryCategoryType AtlasGlossaryTermType AtlasGlossaryType AtlasGlossaryTermAssignmentStatus AtlasGlossaryTermRelationshipStatus AuthPolicyCategory AuthPolicyResourceCategory AuthPolicyType certificate_status DataGlossary DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardTyp", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ry DataProductCriticality DataProductSensitivity DataProductStatus DataProductVisibility DomoCardType DynamoDBSecondaryIndexProjectionType DynamoDBStatus file_type FivetranConnectorStatus FivetranProcessStatus google_datastudio_asset_type icon_type incident_severity kafka_topic_cleanup_policy kafka_topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction Mon", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "topic_compression_type matillion_job_type ModelCardinalityType MongoDBCollectionValidationAction MongoDBCollectionValidationLevel OpenLineageRunState powerbi_endorsement query_username_strategy quick_sight_analysis_status quick_sight_dataset_field_type quick_sight_dataset_import_mode quick_sight_folder_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type Wo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "der_type SchemaRegistrySchemaCompatibility SchemaRegistrySchemaType SourceCostUnitType table_type WorkflowRunStatus WorkflowRunType WorkflowStatus WorkflowType Abstractions Abstractions BI Cloud Insight ObjectStore EventStore DataQuality Metric NoSQL SchemaRegistry Glossary Glossary AtlasGlossary AtlasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeh", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "lasGlossaryCategory AtlasGlossaryTerm Data mesh Data mesh DataDomain DataProduct DataContract Stakeholder StakeholderTitle Relational databases Relational databases Database Schema Table View MaterialisedView Column Query TablePartition CalculationView BigqueryTag DatabricksUnityCatalogTag SnowflakeDynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Qu", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "DynamicTable SnowflakePipe SnowflakeStream SnowflakeTag Procedure Function SQL Query organization Query organization Namespace Collection Folder Cubes Cubes Cube CubeDimension CubeHierarchy CubeField APIs APIs APIPath APISpec APIObject APIQuery APIField Airflow Airflow AirflowDag AirflowTask Amazon Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryI", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Amazon Amazon DynamoDB Amazon DynamoDB DynamoDBTable DynamoDBSecondaryIndex DynamoDBGlobalSecondaryIndex DynamoDBLocalSecondaryIndex AWS S3 AWS S3 S3Bucket S3Object Amazon QuickSight Amazon QuickSight QuickSightAnalysis QuickSightAnalysisVisual QuickSightDashboard QuickSightDashboardVisual QuickSightDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp Anaplan", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tDataset QuickSightDatasetField QuickSightFolder Anaplan Anaplan AnaplanWorkspace AnaplanApp AnaplanPage AnaplanModel AnaplanModule AnaplanList AnaplanSystemDimension AnaplanDimension AnaplanLineItem AnaplanView Anomalo Anomalo AnomaloCheck App App Application ApplicationField Microsoft Azure Microsoft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "oft Azure Azure Data Factory Azure Data Factory AdfActivity AdfDataflow AdfDataset AdfLinkedservice AdfPipeline Azure Data Lake Storage Azure Data Lake Storage ADLSAccount ADLSContainer ADLSObject Azure Event Hub Azure Event Hub AzureEventHub AzureEventHubConsumerGroup Azure Service Bus Azure Service Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB Cosmos", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e Bus AzureServiceBusNamespace AzureServiceBusSchema AzureServiceBusTopic Cosmos DB Cosmos DB CosmosMongoDBAccount CosmosMongoDBCollection CosmosMongoDBDatabase Cognite Cognite Cognite3DModel CogniteAsset CogniteEvent CogniteFile CogniteSequence CogniteTimeseries Custom Custom CustomEntity Dataverse Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelCo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Dataverse DataverseEntity DataverseAttribute dbt dbt DbtColumnProcess DbtMetric DbtModel DbtModelColumn DbtProcess DbtSource DbtTag DbtTest Domo Domo DomoCard DomoDashboard DomoDataset DomoDatasetColumn DocumentDB DocumentDB DocumentDBCollection DocumentDBDatabase Fivetran Fivetran FivetranConnector Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Goo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r Google Google Google Cloud Storage Google Cloud Storage GCSBucket GCSObject Google Data Studio Google Data Studio DataStudioAsset IBM IBM IBM Cognos Cognos CognosDashboard CognosDatasource CognosExploration CognosFile CognosFolder CognosModule CognosPackage CognosReport Kafka Kafka KafkaConsumerGroup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook Looke", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "oup KafkaTopic Looker Looker LookerDashboard LookerExplore LookerField LookerFolder LookerLook LookerModel LookerProject LookerQuery LookerTile LookerView Matillion Matillion MatillionComponent MatillionGroup MatillionJob MatillionProject Metabase Metabase MetabaseCollection MetabaseDashboard MetabaseQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocumen", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "seQuestion MicroStrategy MicroStrategy MicroStrategyAttribute MicroStrategyCube MicroStrategyDocument MicroStrategyDossier MicroStrategyFact MicroStrategyMetric MicroStrategyProject MicroStrategyReport MicroStrategyVisualization Mode Mode ModeChart ModeCollection ModeQuery ModeReport ModeWorkspace Models Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociat", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "odels Models ModelAttribute ModelAttributeAssociation ModelDataModel ModelEntity ModelEntityAssociation ModelVersion MongoDB MongoDB MongoDBCollection MongDBDatabase Monte Carlo Monte Carlo MCIncident MCMonitor Power BI Power BI Power BI PowerBIColumn PowerBIDashboard PowerBIDataflow PowerBIDataflowEntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "EntityColumn PowerBIDataset PowerBIDatasource PowerBIMeasure PowerBIPage PowerBIReport PowerBITable PowerBITile PowerBIWorkspace Preset Preset PresetChart PresetDashboard PresetDataset PresetWorkspace Qlik Qlik QlikApp QlikChart QlikDataset QlikSheet QlikSpace QlikStream Redash Redash RedashDashboard RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField Salesfor", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d RedashQuery RedashVisualization Salesforce Salesforce SalesforceDashboard SalesforceField SalesforceObject SalesforceOrganization SalesforceReport SaaS Sigma Sigma SigmaWorkbook SigmaPage SigmaDataElement SigmaDataElementField SigmaDataset SigmaDatasetColumn Sisense Sisense SisenseDashboard SisenseDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "eDatamodel SisenseDatamodelTable SisenseFolder SisenseWidget Soda Soda SodaCheck Spark Spark SparkJob Superset Superset SupersetChart SupersetDashboard SupersetDataset Tableau Tableau TableauCalculatedField TableauDashboard TableauDatasource TableauDatasourceField TableauFlow TableauMetric TableauProject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer Thought", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "oject TableauSite TableauWorkbook TableauWorksheet ThoughtSpot ThoughtSpot ThoughtspotAnswer ThoughtspotColumn ThoughtspotDashlet ThoughtspotLiveboard ThoughtspotTable ThoughtspotView ThoughtspotWorksheet Endpoints Table of contents API-first models Asset creation order Creating assets \u00b6 API-first models \u00b6 There are several types in Atlan that are intended for use primarily through the APIs and SD", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "odels \u00b6 There are several types in Atlan that are intended for use primarily through the APIs and SDKs: Relational databases, schemas, tables, views, columns (and more) Object store assets: AWS S3 buckets and objects Azure Data Lake Storage accounts, containers, and objects Google Cloud Storage buckets and objects Business intelligence assets: Google Data Studio sources and reports Preset workspac", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ets and objects Business intelligence assets: Google Data Studio sources and reports Preset workspaces, dashboards, charts, and datasets Superset dashboards, charts, and datasets API specs, paths, objects, queries and fields App assets AI assets (AI models, AI applications) Insights assets Asset creation order \u00b6 When creating data assets in Atlan, the order in which you create them is important. A", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "ation order \u00b6 When creating data assets in Atlan, the order in which you create them is important. At the top level of all data assets in Atlan is the Connection . Connections are the basis for access control, so you must create (or use an existing) connection before you can create any other assets. You must then create each subsequent level of the data asset's structure(s) in parent-first order.", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "You must then create each subsequent level of the data asset's structure(s) in parent-first order. You can bulk-create assets at the same level While parent assets must exist before creating child assets, you can create multiple assets at the same level all at the same time. Example: relational database structure You must first create a Connection (or decide to reuse an existing one). You can the", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "abase structure You must first create a Connection (or decide to reuse an existing one). You can then create any number Database s within that connection, at the same time. You can then create any number of Schema s within any of those databases, at the same time. You can then create any number of Table s or View s within any of those schemas, at the same time. And you can then finally create any", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "able s or View s within any of those schemas, at the same time. And you can then finally create any number of Column s within any of those tables or views, at the same time. 2023-04-12 2025-07-29 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/", "title": "Creating assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "On this page Overview: Catalog Domo dashboards, cards, and datasets in Atlan. Gain visibility into lineage, usage, and governance for your Domo analytics assets. Get started \u200b Follow these steps to connect and catalog Domo assets in Atlan: Set up the connector Crawl assets References \u200b What does Atlan crawl from Domo? : Detailed list of Domo asset types and metadata fields that Atlan can extract a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/domo", "title": "Domo | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "an crawl from Domo? : Detailed list of Domo asset types and metadata fields that Atlan can extract and catalog. Preflight checks for Domo : Technical checks and requirements needed for a successful Domo integration. Troubleshooting \u200b Troubleshooting connectivity : Solutions for common issues encountered when connecting Atlan to Domo, including permissions and network problems. Get started Referenc", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/domo", "title": "Domo | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ered when connecting Atlan to Domo, including permissions and network problems. Get started References Troubleshooting", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/domo", "title": "Domo | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "On this page Once you have set up the databricks-extractor tool , you can extract metadata from your on-premises Databricks instances by completing the following steps. Run databricks-extractor \u200b Crawl all Databricks connections \u200b To crawl all Databricks connections using the databricks-extractor tool: Log into the server with Docker Compose installed. Change to the directory containing the compos", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/crawl-on-premises-databricks", "title": "Crawl on-premises Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ol: Log into the server with Docker Compose installed. Change to the directory containing the compose file. Run Docker Compose: sudo docker-compose up Crawl a specific connection \u200b To crawl a specific Databricks connection using the databricks-extractor tool: Log into the server with Docker Compose installed. Change to the directory containing the compose file. Run Docker Compose: sudo docker-comp", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/crawl-on-premises-databricks", "title": "Crawl on-premises Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "installed. Change to the directory containing the compose file. Run Docker Compose: sudo docker-compose up <connection-name> (Replace <connection-name> with the name of the connection from the services section of the compose file.) (Optional) Review generated files \u200b The databricks-extractor tool will generate many folders with JSON files for each service . For example: catalogs schemas tables You", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/crawl-on-premises-databricks", "title": "Crawl on-premises Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ll generate many folders with JSON files for each service . For example: catalogs schemas tables You can inspect the metadata and make sure it is acceptable for providing metadata to Atlan. Upload generated files to S3 \u200b To provide Atlan access to the extracted metadata, you will need to upload the metadata to an S3 bucket. Did you know? We recommend uploading to the same S3 bucket as Atlan uses t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/crawl-on-premises-databricks", "title": "Crawl on-premises Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "metadata to an S3 bucket. Did you know? We recommend uploading to the same S3 bucket as Atlan uses to avoid access issues. Reach out to your Data Success Manager to get the details of your Atlan bucket. To create your own bucket, refer to the Create your own S3 bucket section of the dbt documentation. (The steps will be exactly the same.) To upload the metadata to S3: Ensure that all files for a p", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/crawl-on-premises-databricks", "title": "Crawl on-premises Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "n. (The steps will be exactly the same.) To upload the metadata to S3: Ensure that all files for a particular connection have the same prefix. For example, output/databricks-example/catalogs/success/result-0.json , output/databricks-example/schemas/{{catalog_name}}/success/result-0.json , output/databricks-example/tables/{{catalog_name}}/success/result-0.json , and so on. Upload the files to the S", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/crawl-on-premises-databricks", "title": "Crawl on-premises Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "abricks-example/tables/{{catalog_name}}/success/result-0.json , and so on. Upload the files to the S3 bucket using your preferred method. For example, to upload all files using the AWS CLI : aws s3 cp output/databricks-example s3://my-bucket/metadata/databricks-example --recursive Crawl metadata in Atlan \u200b Once you have extracted metadata on-premises and uploaded the results to S3, you can crawl t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/crawl-on-premises-databricks", "title": "Crawl on-premises Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Atlan \u200b Once you have extracted metadata on-premises and uploaded the results to S3, you can crawl the metadata into Atlan: How to crawl Databricks Be sure to select Offline for the Extraction method . Run databricks-extractor (Optional) Review generated files Upload generated files to S3 Crawl metadata in Atlan", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/crawl-on-premises-databricks", "title": "Crawl on-premises Databricks | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "SisenseDatamodelTable \u00b6 Instance of a Sisense datamodel table in Atlan. Complete reference This is a complete reference for the SisenseDatamodelTable object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common mu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "th: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. SisenseDatamodelTable inherits its attributes and relationships from these other types: classDiagram direction RL class SisenseDatamodelTable link SisenseDatamodelTable \"../sisensedatamodeltable\" class Sisense { <<abstract>> } link Sisense \"../sisense\" Sisense <|--", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "le \"../sisensedatamodeltable\" class Sisense { <<abstract>> } link Sisense \"../sisense\" Sisense <|-- SisenseDatamodelTable : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Sisense : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> }", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "bstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from SisenseDatamodelTable 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "me \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more informa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account tha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "estoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ails on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "DKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifier", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "n be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who admini", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ame. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milli", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "his asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "edName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "malo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": ") at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "nt in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "b that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last ru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "t materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "hether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "tionsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationH", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "on the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duratio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "f the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "e \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ssetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Na", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "set in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "is asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the ico", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "Updated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident pri", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "s associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "etMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "nitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Numb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ide the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in he", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "setSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connector", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ctionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "escription of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "is asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "r this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": ") at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of gr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "CompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 L", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadE", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "f the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "arQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceRead", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "ithin the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "By \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ed in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of SisenseDatamodelTable (and all of its subtypes). sisenseDatamodelQualifiedName \u00b6 Unique name of the datamodel in which this datamodel table exists. sisenseDatamodelTable", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "ifiedName \u00b6 Unique name of the datamodel in which this datamodel table exists. sisenseDatamodelTableColumnCount \u00b6 Number of columns present in this datamodel table. sisenseDatamodelTableExpression \u00b6 SQL expression of this datamodel table. sisenseDatamodelTableIsHidden \u00b6 Whether this datamodel table is hidden in Sisense (true) or not (false). sisenseDatamodelTableIsMaterialized \u00b6 Whether this datam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "is hidden in Sisense (true) or not (false). sisenseDatamodelTableIsMaterialized \u00b6 Whether this datamodel table is materialised (true) or not (false). sisenseDatamodelTableLiveQuerySettings \u00b6 JSON specifying the LiveQuery settings of this datamodel table. sisenseDatamodelTableSchedule \u00b6 JSON specifying the refresh schedule of this datamodel table. sisenseDatamodelTableType \u00b6 Type of this datamodel", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ng the refresh schedule of this datamodel table. sisenseDatamodelTableType \u00b6 Type of this datamodel table, for example: 'base' for regular tables, 'custom' for SQL expression-based tables. Relationships \u00b6 Inherited relationships These relationships are inherited from SisenseDatamodelTable 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "pes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContrac", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "set. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. lin", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "aProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "elationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( Mode", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "ich this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of SisenseDatamodelTable (and all of its subtypes). sisenseDatamodel ( SisenseDatamodel ) \u00b6 Datamodel in which this datamodel table exists. sisenseWidgets ( SisenseWidget ) \u00b6 TBC Was this page helpful? Thanks for y", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "s datamodel table exists. sisenseWidgets ( SisenseWidget ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedatamodeltable/", "title": "SisenseDatamodelTable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "Cloud \u00b6 Base class for cloud assets. Complete reference This is a complete reference for the Cloud object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Cloud inherits it", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "p use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Cloud inherits its attributes and relationships from these other types: classDiagram direction RL class Cloud { <<abstract>> } link Cloud \"../cloud\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Cloud : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": ": extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from Cloud 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atla", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "sset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ustom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "endingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "tMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ment was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "f data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "\u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "e \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "d this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLast", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "h in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "setDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ed \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "he job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "btJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "extRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialize", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectN", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "bject. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "et. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 L", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ist of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "arlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated M", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "edules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "sset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 St", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "t. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last up", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ack for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineag", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "his asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "\u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "flowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ich this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryCompute", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "ead operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ist of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ferent name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "\u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "s sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "fferent name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "set in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "s who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "erDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certai", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "erUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) Relationships \u00b6 Inherited relationships These relationships are inherited from Cloud 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 Applicati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ation ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "t port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ADME that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos Was this page h", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "C (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cloud/", "title": "Cloud - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "SnowflakeTag \u00b6 Instance of a Snowflake tag in Atlan. Complete reference This is a complete reference for the SnowflakeTag object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. SnowflakeTag inherits its attributes and relationships from these other types: classDiagram direction RL class SnowflakeTag link SnowflakeTag \"../snowflaketag\" class Tag { <<abstract>> } link Tag \"../tag\" Tag <|-- SnowflakeTag : extends class Catalog { <<abstract>> } link Catalog \"../catalog\"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "g \"../tag\" Tag <|-- SnowflakeTag : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Tag : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- SnowflakeTag : extends class", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Asset : extends class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- SnowflakeTag : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited propertie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from SnowflakeTag 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "\u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "t. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Req", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ncementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "d Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "edCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ge \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "et is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ctsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLast", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "hat materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the jo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": ") or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend bein", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "an-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ssetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Stat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "uman-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "age in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test sta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "tTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Mont", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "his asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names atta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "et. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Ty", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": ". assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Statu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "one via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certifica", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorTy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interfa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whethe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "(1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "hronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "his asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "em, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive wareh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Tot", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "es a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popul", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "eReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": ") Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "e_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceU", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "t \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "List \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) calculationViewName \u00b6 Simple", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "ontained in a collection. (This is only used for certain asset types.) calculationViewName \u00b6 Simple name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. calculationViewQualifiedName \u00b6 Unique name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. databaseName \u00b6 Simple name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "QL asset exists, or empty if it does not exist within a calculation view. databaseName \u00b6 Simple name of the database in which this SQL asset exists, or empty if it does not exist within a database. databaseQualifiedName \u00b6 Unique name of the database in which this SQL asset exists, or empty if it does not exist within a database. isProfiled \u00b6 Whether this asset has been profiled (true) or not (fals", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "s not exist within a database. isProfiled \u00b6 Whether this asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch) at which this asset was last profiled, in milliseconds. queryCount \u00b6 Number of times this asset has been queried. queryCountUpdatedAt \u00b6 Time (epoch) at which the query count was last updated, in milliseconds. queryUserCount \u00b6 Number of unique users who have queried", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "y count was last updated, in milliseconds. queryUserCount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map of unique users who have queried this asset to the number of times they have queried it. schemaName \u00b6 Simple name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. schemaQualifiedName \u00b6 Unique name of the schema in which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "if it does not exist within a schema. schemaQualifiedName \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. tableName \u00b6 Simple name of the table in which this SQL asset exists, or empty if it does not exist within a table. tableQualifiedName \u00b6 Unique name of the table in which this SQL asset exists, or empty if it does not exist within a tab", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "Unique name of the table in which this SQL asset exists, or empty if it does not exist within a table. viewName \u00b6 Simple name of the view in which this SQL asset exists, or empty if it does not exist within a view. viewQualifiedName \u00b6 Unique name of the view in which this SQL asset exists, or empty if it does not exist within a view. mappedClassificationName \u00b6 Name of the classification in Atlan", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "if it does not exist within a view. mappedClassificationName \u00b6 Name of the classification in Atlan that is mapped to this tag. (1) Uses a different name in SDKs mappedAtlanTagName mapped_atlan_tag_name tagAllowedValues \u00b6 Allowed values for the tag in the source system. These are denormalized from tagAttributes for ease of querying. tagAttributes \u00b6 Attributes associated with the tag in the source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "agAttributes for ease of querying. tagAttributes \u00b6 Attributes associated with the tag in the source system. tagId \u00b6 Unique identifier of the tag in the source system. Relationships \u00b6 Inherited relationships These relationships are inherited from SnowflakeTag 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "ck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the dat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are at", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "aProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "ionship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes imple", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 TBC dbtTests ( DbtTest ) \u00b6 TBC sqlDBTSources ( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC These relationships are specific to instances of SnowflakeTag (and all of its subtypes). atlanSchema ( Schema ) \u00b6 Schema in which this Sno", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "stances of SnowflakeTag (and all of its subtypes). atlanSchema ( Schema ) \u00b6 Schema in which this Snowflake tag exists. (1) Uses a different name in SDKs schema schema Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/snowflaketag/", "title": "SnowflakeTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "Column Level Lineage Data lineage shows the upstream and downstream dependencies of an asset. For a more granular view of these dependencies, you can view column-level lineage. Connectors Learn how to connect your data sources to Atlan. Explore supported connectors, integration patterns, and best practices for unified catalog management. Data and metadata persistence Learn about data and metadata", "metadata": {"source_url": "https://docs.atlan.com/tags/data-sources", "title": "13 docs tagged with \"data-sources\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "actices for unified catalog management. Data and metadata persistence Learn about data and metadata persistence. Download and export lineage Understanding the flow of data from the source to its destination is a critical need for many organizations. To help you build trust in your data assets, Atlan allows you to [view](#view-impacted-assets), [download](#download-lineage), and [export](#export-im", "metadata": {"source_url": "https://docs.atlan.com/tags/data-sources", "title": "13 docs tagged with \"data-sources\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "allows you to [view](#view-impacted-assets), [download](#download-lineage), and [export](#export-impacted-assets) your impacted assets and share it with others in your organization. Download impacted assets in Google Sheets Once you've [connected Atlan with Google Sheets](/product/integrations/collaboration/spreadsheets/how-tos/integrate-atlan-with-google-sheets), you can download impacted assets", "metadata": {"source_url": "https://docs.atlan.com/tags/data-sources", "title": "13 docs tagged with \"data-sources\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "aboration/spreadsheets/how-tos/integrate-atlan-with-google-sheets), you can download impacted assets in Google Sheets. This can help you assess the downstream impact of any changes made to an upstream asset for [impact analysis](/product/capabilities/lineage/concepts/what-is-lineage#impact-analysis). How can Atlan generate upstream lineage from the data warehouse layer? Learn about how can atlan g", "metadata": {"source_url": "https://docs.atlan.com/tags/data-sources", "title": "13 docs tagged with \"data-sources\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ". How can Atlan generate upstream lineage from the data warehouse layer? Learn about how can atlan generate upstream lineage from the data warehouse layer?. How to obtain upstream lineage if I connect to a Tableau data asset? Learn about how to obtain upstream lineage if i connect to a tableau data asset?. Troubleshooting Amazon MSK connectivity Learn about troubleshooting amazon msk connectivity.", "metadata": {"source_url": "https://docs.atlan.com/tags/data-sources", "title": "13 docs tagged with \"data-sources\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "asset?. Troubleshooting Amazon MSK connectivity Learn about troubleshooting amazon msk connectivity. Troubleshooting Microsoft Power BI connectivity Learn about troubleshooting microsoft power bi connectivity. Troubleshooting MongoDB connectivity Learn about troubleshooting mongodb connectivity. Troubleshooting Qlik Sense Cloud connectivity Learn about troubleshooting qlik sense cloud connectivity", "metadata": {"source_url": "https://docs.atlan.com/tags/data-sources", "title": "13 docs tagged with \"data-sources\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ubleshooting Qlik Sense Cloud connectivity Learn about troubleshooting qlik sense cloud connectivity. Troubleshooting ThoughtSpot connectivity Learn about troubleshooting thoughtspot connectivity. What do the numbers in lineage view mean? Learn about what do the numbers in lineage view mean?.", "metadata": {"source_url": "https://docs.atlan.com/tags/data-sources", "title": "13 docs tagged with \"data-sources\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ThoughtspotView \u00b6 Instance of a Thoughtspot view in Atlan. Complete reference This is a complete reference for the ThoughtspotView object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "l, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. ThoughtspotView inherits its attributes and relationships from these other types: classDiagram direction RL class ThoughtspotView link ThoughtspotView \"../thoughtspotview\" class Thoughtspot { <<abstract>> } link Thoughtspot \"../thoughtspot\" Thoughtspot <|-- ThoughtspotView : extends c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "spot { <<abstract>> } link Thoughtspot \"../thoughtspot\" Thoughtspot <|-- ThoughtspotView : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Thoughtspot : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../refere", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "set\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from ThoughtspotView 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a dif", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "bally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTim", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "r account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "on of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable nam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "se classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Na", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ication that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "t. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAcco", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ia Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "zed in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether ar", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "st run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job tha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "bt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ssetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ere sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total dur", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "sset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "setDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTota", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "tatus message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materia", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "rialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "ed this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron sc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "e job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "hnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only appl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "set. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "McIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "is asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ray of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "tedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector throug", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "le as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "(false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "I (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "led, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "f policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "urceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "eadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "rds sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_ex", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ccessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecord", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different na", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ntUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insig", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of userna", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "set. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collect", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "sed for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) thoughtspotChartType \u00b6 TBC thoughtspotColumnCount \u00b6 Number of Columns. thoughtspotJoinCount \u00b6 Total number of data table joins executed for analysis. thoughtspotQuestionText \u00b6 TBC Relationships \u00b6 Inherited relationships These relationships are inheri", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "thoughtspotQuestionText \u00b6 TBC Relationships \u00b6 Inherited relationships These relationships are inherited from ThoughtspotView 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contrac", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "s asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "bject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "ship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowT", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ntedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of ThoughtspotView (and all of its subtypes). thoughtspotColumns ( ThoughtspotC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "pecific to instances of ThoughtspotView (and all of its subtypes). thoughtspotColumns ( ThoughtspotColumn ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/thoughtspotview/", "title": "ThoughtspotView - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "BusinessPolicyException \u00b6 Exception to a business policy Complete reference This is a complete reference for the BusinessPolicyException object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step impl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "\u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. BusinessPolicyException inherits its attributes and relationships from these other types: classDiagram direction RL class BusinessPolicyException link BusinessPolicyException \"../businesspolicyexception\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- BusinessPolic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "businesspolicyexception\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- BusinessPolicyException : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from BusinessPolicyException 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "BusinessPolicyException 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "butes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or acc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "sset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use cl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "s asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ncatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for cert", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "onnection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "e is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Applicati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "pplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "tuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via An", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "bt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last ru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt wa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": ". assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "read ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ed this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "set in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "sset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "unRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "zed this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materiali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "tRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything unde", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "lized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshness", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "manticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in At", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ed to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcInc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "cIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "f Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "e Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "a. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "adable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "fiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (fal", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "f domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (tr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "le through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "at last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of pol", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "RL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "(1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that access", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "tions at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "his asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "fferent name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "west queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "s source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to cr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "r who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "redDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "t. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of BusinessPolicyException (and all of its subtypes). businessPolicyExceptionFilterDSL \u00b6 Business Policy Excepti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "olicyException (and all of its subtypes). businessPolicyExceptionFilterDSL \u00b6 Business Policy Exception Filter ES DSL to denote the associate asset/s involved. businessPolicyExceptionGroups \u00b6 List of groups who are part of this exception businessPolicyExceptionUsers \u00b6 List of users who are part of this exception businessPolicyQualifiedName \u00b6 Unique name of the business policy through which this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "is exception businessPolicyQualifiedName \u00b6 Unique name of the business policy through which this asset is accessible. Relationships \u00b6 Inherited relationships These relationships are inherited from BusinessPolicyException 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( Applicatio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "his asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubjec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "adme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos These relationships are specific to instances of BusinessPolicyException (and all of its subtypes). businessPolicyForException ( BusinessPolicy ) \u00b6 Business policies related to exception Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by usin", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyexception/", "title": "BusinessPolicyException - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "Automatically assign roles based on group names Learn how to automatically assign roles and sub-roles to users in Atlan based on their group memberships using the group-role sync app. Generate lineage between assets App Learn how to generate lineage between assets across two connections in Atlan by matching table names using the Lineage Generator (no transformations) app. Ingest Data Models Learn", "metadata": {"source_url": "https://docs.atlan.com/tags/app", "title": "8 docs tagged with \"app\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "matching table names using the Lineage Generator (no transformations) app. Ingest Data Models Learn how to ingest a data model into Atlan using the Data Model Ingestion app and an Excel input file. Lineage Generator (no transformations) Learn how Atlan can generate upstream lineage from the data warehouse layer, including configuration options and behavior. Send alerts for workflow events Learn ho", "metadata": {"source_url": "https://docs.atlan.com/tags/app", "title": "8 docs tagged with \"app\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ehouse layer, including configuration options and behavior. Send alerts for workflow events Learn how to configure alerts for workflow events in Atlan via email or Google Chat. Source asset type Detailed parsing rules and configuration details for all supported source asset types in the Lineage Generator (no transformations) app. Source owner manager Reference for source owner management capabilit", "metadata": {"source_url": "https://docs.atlan.com/tags/app", "title": "8 docs tagged with \"app\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "rator (no transformations) app. Source owner manager Reference for source owner management capabilities and configuration in stewardship workflows User Role Sync Complete configuration reference for the User Role Sync app properties and settings.", "metadata": {"source_url": "https://docs.atlan.com/tags/app", "title": "8 docs tagged with \"app\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Atlan MCP Overview Learn what the Atlan MCP server is, what it enables, and how to connect using Remote or Local setup. Enable embedded metadata in Tableau Learn how to enable embedded Atlan metadata in Tableau dashboards for seamless data context and governance. How does Atlan handle lineage from Spark jobs? Learn about how does atlan handle lineage from spark jobs?. Is there a way to build linea", "metadata": {"source_url": "https://docs.atlan.com/tags/metadata", "title": "12 docs tagged with \"metadata\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "park jobs? Learn about how does atlan handle lineage from spark jobs?. Is there a way to build lineage from NetSuite to Snowflake? Learn about is there a way to build lineage from netsuite to snowflake?. OpenLineage configuration and facets Learn about openlineage configuration and facets. Playbooks Create and manage automated workflows for metadata management and data governance. Troubleshooting", "metadata": {"source_url": "https://docs.atlan.com/tags/metadata", "title": "12 docs tagged with \"metadata\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Create and manage automated workflows for metadata management and data governance. Troubleshooting Amazon DynamoDB connectivity Learn about troubleshooting amazon dynamodb connectivity. Troubleshooting IBM Cognos Analytics connectivity Learn about troubleshooting ibm cognos analytics connectivity. Troubleshooting Tableau connectivity Learn about troubleshooting tableau connectivity. What does Atl", "metadata": {"source_url": "https://docs.atlan.com/tags/metadata", "title": "12 docs tagged with \"metadata\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Troubleshooting Tableau connectivity Learn about troubleshooting tableau connectivity. What does Atlan crawl from CrateDB? Complete list of CrateDB assets and metadata properties extracted by Atlan during crawling What does Atlan crawl from Dagster Learn about the Dagster metadata that Atlan captures and visualizes Why is my Databricks lineage API not working? Learn about why is my databricks line", "metadata": {"source_url": "https://docs.atlan.com/tags/metadata", "title": "12 docs tagged with \"metadata\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "s and visualizes Why is my Databricks lineage API not working? Learn about why is my databricks lineage api not working?.", "metadata": {"source_url": "https://docs.atlan.com/tags/metadata", "title": "12 docs tagged with \"metadata\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "Collaboration Integrations Integrate Atlan with collaboration tools like Microsoft Teams and Slack. Slack Integrate Atlan with Slack to enable collaboration and notifications. What does Atlan do with each Slack permission? Learn about what does atlan do with each slack permission?. What is included in the Slack integration? Learn about the features and capabilities of the Slack integration with At", "metadata": {"source_url": "https://docs.atlan.com/tags/slack", "title": "5 docs tagged with \"slack\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "in the Slack integration? Learn about the features and capabilities of the Slack integration with Atlan. What is the difference between Copy Link and Share on Slack or Teams? Learn about what is the difference between copy link and share on slack or teams?.", "metadata": {"source_url": "https://docs.atlan.com/tags/slack", "title": "5 docs tagged with \"slack\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "On this page Who can do this? You will need your Amazon Redshift administrator to run these commands - you may not have access yourself. Atlan supports fetching metadata from Amazon Redshift for the following types of deployment: Provisioned RA3 DC2 Serverless danger If you're using the DC2 node type, Redshift restricts cross-database joins and metadata access to a single database. For more inform", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "e, Redshift restricts cross-database joins and metadata access to a single database. For more information, see Considerations - Amazon Redshift . Because of this restriction, you must set up a separate workflow for each database you want to crawl. Grant permissions \u200b For all supported authentication mechanisms except IAM role authentication on serverless deployment , you must first grant the follo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "mechanisms except IAM role authentication on serverless deployment , you must first grant the following permissions on Amazon Redshift. For IAM role authentication on serverless deployment only, skip to this step . Create a group and user \u200b To create a group and user, run the following commands: CREATE GROUP atlan_users ; CREATE USER atlan_user password '<pass>' IN GROUP atlan_users ; Replace <pa", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "EATE GROUP atlan_users ; CREATE USER atlan_user password '<pass>' IN GROUP atlan_users ; Replace <pass> with the password for the atlan_user being created. To crawl Amazon Redshift , for Username , you must enter the username you configured for the database user. For example, atlan_user . Grant required permissions to group \u200b To grant the minimum required permissions, run the following commands: G", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ired permissions to group \u200b To grant the minimum required permissions, run the following commands: GRANT USAGE ON SCHEMA <schema_name> TO GROUP atlan_users; GRANT SELECT ON pg_catalog.svv_table_info TO GROUP atlan_users; Replace <schema_name> with the name of your schema. Repeat the above commands for all the databases in your schema( <schema_name> ). The permissions are used for the following: SV", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "or all the databases in your schema( <schema_name> ). The permissions are used for the following: SVV_TABLE_INFO is used to obtain information on the table ID to table/schema/database relation. External schema \u200b If your Redshift instance setup external schemas, you must grant permissions for each schema. Grant USAGE permissions \u200b For external schemas, use the following command to grant USAGE permi", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "hema. Grant USAGE permissions \u200b For external schemas, use the following command to grant USAGE permission: GRANT USAGE ON SCHEMA <schema_name> TO GROUP atlan_users; Replace <schema_name> with the name of your schema. Repeat this command for all external schemas. Did you know? If your external tables are sourced from Amazon S3 and AWS Glue Catalog, granting only the USAGE permission is sufficient,", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "are sourced from Amazon S3 and AWS Glue Catalog, granting only the USAGE permission is sufficient, provided that the IAM role associated with the Redshift cluster has read access to the data. (Optional) Grant SELECT permissions \u200b For Redshift-based external schemas, you must explicitly grant SELECT along with USAGE permissions to allow metadata crawling. Use the following command to grant this pe", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "along with USAGE permissions to allow metadata crawling. Use the following command to grant this permission: GRANT SELECT ON ALL TABLES IN SCHEMA <schema_name> TO GROUP atlan_users; Replace <schema_name> with the name of your schema. Repeat the command for all the Redshift-based external schemas. Verify external schema permissions \u200b Follow these steps to verify permissions granted to your externa", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "erify external schema permissions \u200b Follow these steps to verify permissions granted to your external schema: Log in to the system using the IAM role created earlier. Run the following command using any database viewer tool: SELECT * FROM SVV_EXTERNAL_TABLES WHERE schema_name = '<external_schema_name>' Replace <external_schema_name> with the name of your external schema. If the tables appear in th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "e>' Replace <external_schema_name> with the name of your external schema. If the tables appear in the results, the permissions are correctly configured. If you can't provide SELECT or USAGE access, create a cloned schema and grant access to the atlan_users group. For more information, see Cloned schema for restricted access section. Cloned schema for restricted access \u200b If you can't grant USAGE or", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ema for restricted access section. Cloned schema for restricted access \u200b If you can't grant USAGE or SELECT permissions to the atlan_users group, you must create a cloned schema containing the necessary metadata tables. Then, grant permissions to the cloned schema. Follow these steps to create a cloned schema and provide required permissions: Log in as dbadmin . Create a new schema and give it a m", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ned schema and provide required permissions: Log in as dbadmin . Create a new schema and give it a meaningful name. For example, atlan . Clone the following views as tables from the pg_catalog schema into the cloned schema: pg_views SVV_TABLES SVV_EXTERNAL_TABLES SVV_COLUMNS Clone the following views as tables from the information_schema into the cloned schema: key_column_usage as information_sche", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "s as tables from the information_schema into the cloned schema: key_column_usage as information_schema_key_column_usage table_constraints as information_schema_table_constraints Grant USAGE and SELECT access to the atlan_users group on the cloned schema: GRANT USAGE ON SCHEMA <cloned_schema_name> TO GROUP atlan_users; GRANT SELECT ON ALL TABLES IN SCHEMA <cloned_schema_name> TO GROUP atlan_users;", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "GROUP atlan_users; GRANT SELECT ON ALL TABLES IN SCHEMA <cloned_schema_name> TO GROUP atlan_users; Replace <cloned_schema_name> with the name of your cloned schema. Since Atlan relies on these tables to crawl metadata, schedule a cron job to refresh the cloned tables periodically. Did you know? You can reach out to Atlan support if you need assistance with setting up a Cloned Schema. (Optional) G", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "can reach out to Atlan support if you need assistance with setting up a Cloned Schema. (Optional) Grant permissions for role-based authentication on serverless \u200b For IAM role-based authentication on Amazon Redshift serverless deployment only, you must first grant the following permissions on Amazon Redshift. Create a role \u200b To create a role, run the following commands: CREATE ROLE atlan_role ; Gr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "Redshift. Create a role \u200b To create a role, run the following commands: CREATE ROLE atlan_role ; Grant required permissions to role \u200b To grant the minimum required permissions, run the following commands: GRANT USAGE ON SCHEMA <schema_name> TO GROUP atlan_users; GRANT SELECT ON pg_catalog.svv_table_info TO GROUP atlan_users; Replace <schema_name> with the name of your schema. Repeat the above com", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "_info TO GROUP atlan_users; Replace <schema_name> with the name of your schema. Repeat the above commands for all the databases in your schema( <schema_name> ). The permissions are used for the following: SVV_TABLE_INFO is used to obtain information on the table ID to table/schema/database relation. External schema \u200b If your Redshift setup uses external schemas, you must grant permissions for each", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "External schema \u200b If your Redshift setup uses external schemas, you must grant permissions for each schema. You can do this in one of the following ways: Grant USAGE permissions \u200b For external schemas, use the following command to grant USAGE permission: GRANT USAGE ON SCHEMA <schema_name> TO GROUP atlan_users; Replace <schema_name> with the name of your schema. Repeat this command for all extern", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "atlan_users; Replace <schema_name> with the name of your schema. Repeat this command for all external schemas. Did you know? If your external tables are sourced from Amazon S3 and AWS Glue Catalog, granting only the USAGE permission is sufficient, provided that the IAM role associated with the Redshift cluster has read access to the data. (Optional) Grant SELECT permissions \u200b For Redshift-based e", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "hift cluster has read access to the data. (Optional) Grant SELECT permissions \u200b For Redshift-based external schemas, you must explicitly grant SELECT along with USAGE permissions to allow metadata crawling. Use the following command to grant this permission: GRANT SELECT ON ALL TABLES IN SCHEMA <schema_name> TO GROUP atlan_users; Replace <schema_name> with the name of your schema. Repeat the comma", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ema_name> TO GROUP atlan_users; Replace <schema_name> with the name of your schema. Repeat the command for all the Redshift-based external schemas. Verify external schema permissions \u200b Follow these steps to verify permissions granted to your external schema: Log in to the system using the IAM role created earlier. Run the following command using the Amazon Redshift Data API : SELECT * FROM SVV_EXT", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "reated earlier. Run the following command using the Amazon Redshift Data API : SELECT * FROM SVV_EXTERNAL_TABLES WHERE schema_name = '<external_schema_name>' Replace <external_schema_name> with the name of your external schema. If the tables appear in the results, the permissions are correctly configured. If you can't provide SELECT or USAGE access, create a cloned schema and grant access to the a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "gured. If you can't provide SELECT or USAGE access, create a cloned schema and grant access to the atlan_users group. For more information, see Cloned schema for restricted access section. Cloned schema for restricted access \u200b If you can't grant USAGE or SELECT permissions to the atlan_users group, you must create a cloned schema containing the necessary metadata tables. Then, grant permissions to", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "you must create a cloned schema containing the necessary metadata tables. Then, grant permissions to the cloned schema. Follow these steps to create a cloned schema and provide required permissions: Log in as dbadmin . Create a new schema and give it a meaningful name. For example, atlan . Clone the following views as tables from the pg_catalog schema into the cloned schema: pg_views SVV_TABLES SV", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "following views as tables from the pg_catalog schema into the cloned schema: pg_views SVV_TABLES SVV_EXTERNAL_TABLES SVV_COLUMNS Clone the following views as tables from the information_schema into the cloned schema: key_column_usage as information_schema_key_column_usage table_constraints as information_schema_table_constraints Grant USAGE and SELECT access to the atlan_users group on the cloned", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "mation_schema_table_constraints Grant USAGE and SELECT access to the atlan_users group on the cloned schema: GRANT USAGE ON SCHEMA <cloned_schema_name> TO GROUP atlan_users; GRANT SELECT ON ALL TABLES IN SCHEMA <cloned_schema_name> TO GROUP atlan_users; Replace <cloned_schema_name> with the name of your cloned schema. Since Atlan relies on these tables to crawl metadata, schedule a cron job to ref", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "your cloned schema. Since Atlan relies on these tables to crawl metadata, schedule a cron job to refresh the cloned tables periodically. Did you know? You can reach out to Atlan support if you need assistance with setting up a Cloned Schema. Grant additional permissions for mining query history \u200b Did you know? For mining query history from Redshift Serverless, permissions on STL and SVL views are", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "d you know? For mining query history from Redshift Serverless, permissions on STL and SVL views are not required as they do not exist in serverless deployment. To grant the additional permissions needed to mine query history, run the following commands: GRANT SELECT on pg_catalog . stl_ddltext to GROUP atlan_users ; GRANT SELECT on pg_catalog . stl_query to GROUP atlan_users ; GRANT SELECT on pg_c", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "OUP atlan_users ; GRANT SELECT on pg_catalog . stl_query to GROUP atlan_users ; GRANT SELECT on pg_catalog . stl_connection_log to GROUP atlan_users ; GRANT SELECT on pg_catalog . stl_undone to GROUP atlan_users ; GRANT SELECT on pg_catalog . stl_insert to GROUP atlan_users ; GRANT SELECT on pg_catalog . svl_statementtext to GROUP atlan_users ; ALTER USER atlan_user SYSLOG ACCESS UNRESTRICTED ; Th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "log . svl_statementtext to GROUP atlan_users ; ALTER USER atlan_user SYSLOG ACCESS UNRESTRICTED ; The additional permissions are used for the following: STL_DDLTEXT is used for DDL queries. STL_QUERY is used for DML and regular queries. STL_CONNECTION_LOG is used to obtain the session ID that a query is part of. STL_UNDONE is used to obtain information about transactions that have been undone or r", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "y is part of. STL_UNDONE is used to obtain information about transactions that have been undone or rolled back. STL_INSERT is used to obtain the table ID used in the insert queries. SVL_STATEMENTTEXT is used to obtain the query text for all queries. SYSLOG ACCESS UNRESTRICTED is used to access all queries performed by any user in the system tables above. To use basic authentication, your setup is", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ueries performed by any user in the system tables above. To use basic authentication, your setup is now complete. To configure IAM-based authentication, you need to continue with the following steps. (Optional) Create IAM policy \u200b All IAM-based authentication mechanisms require an IAM policy to be created. For all supported authentication mechanisms except IAM role authentication on serverless dep", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "reated. For all supported authentication mechanisms except IAM role authentication on serverless deployment , create the following IAM policy. For IAM role authentication on serverless deployment only, skip to this step . To create an IAM policy with the necessary permissions follow the steps in the AWS Identity and Access Management User Guide . Create the policy using the following JSON: { \"Vers", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "AWS Identity and Access Management User Guide . Create the policy using the following JSON: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"redshift:GetClusterCredentials\" ] , \"Resource\" : [ \"arn:aws:redshift:<region>:<account_id>:dbuser:<redshift_cluster_identifier>/atlan_user\" , \"arn:aws:redshift:<region>:<account_id>:dbname:<redshift_cluster_identifier>/<datab", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "r>/atlan_user\" , \"arn:aws:redshift:<region>:<account_id>:dbname:<redshift_cluster_identifier>/<database>\" ] } ] } Replace <region> with the AWS region of your Redshift instance. Replace <account_id> with your account ID. Replace <redshift_cluster_identifier> with your Redshift cluster identifier. Replace <database> with the name of the Redshift database. (Optional) Create IAM policy for role-based", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "place <database> with the name of the Redshift database. (Optional) Create IAM policy for role-based authentication on serverless \u200b For IAM role-based authentication on Amazon Redshift serverless deployment only, create an IAM policy with the necessary permissions. Follow the steps in the AWS Identity and Access Management User Guide . Create the policy using the following JSON: { \"Version\" : \"201", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ty and Access Management User Guide . Create the policy using the following JSON: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"redshift-serverless:GetCredentials\" ] , \"Resource\" : [ \"arn:aws:redshift-serverless:<region>:<account_id>:workgroup/<workgroup_identifier>\" , ] } ] } Replace <region> with the AWS region of your Amazon Redshift instance. Replace <accoun", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "r>\" , ] } ] } Replace <region> with the AWS region of your Amazon Redshift instance. Replace <account_id> with your AWS account ID. Replace <workgroup_identifier> with your Amazon Redshift serverless workgroup identifier. Configure tag for IAM role: { RedshiftDbRoles : <role> } Replace <role> with the role you created . (Optional) Choose IAM-based authentication mechanism \u200b Using the policy create", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "he role you created . (Optional) Choose IAM-based authentication mechanism \u200b Using the policy created above, configure one of the following options for authentication. User-based authentication \u200b To configure user-based authentication: Create an AWS IAM user by following the steps in the AWS Identity and Access Management User Guide . On the Set permissions page, attach the policy created in the p", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "y and Access Management User Guide . On the Set permissions page, attach the policy created in the previous step to this user. Once the user is created, view or download the user's access key ID and secret access key . danger This will be your only opportunity to view or download the access keys. You will not have access to them again after leaving the user creation screen. Role delegation-based a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "u will not have access to them again after leaving the user creation screen. Role delegation-based authentication \u200b To configure role delegation-based authentication: Raise a support ticket to get the ARN of the Node Instance Role for your Atlan EKS cluster. Create a new role in your AWS account by following the steps in the AWS Identity and Access Management User Guide . When prompted for policie", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "following the steps in the AWS Identity and Access Management User Guide . When prompted for policies, attach the policy created in the previous step to this role. When prompted, create a trust relationship for the role using the following trust policy. (Replace <atlan_nodeinstance_role_arn> with the ARN received from Atlan support.) { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "e ARN received from Atlan support.) { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Principal\" : { \"AWS\" : \"<atlan_nodeinstance_role_arn>\" } , \"Action\" : \"sts:AssumeRole\" , \"Condition\" : { } } ] } (Optional) To use an external ID for additional security, paste the external ID into the policy: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Principal\" : { \"", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "to the policy: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Principal\" : { \"AWS\" : \"<atlan_nodeinstance_role_arn>\" } , \"Action\" : \"sts:AssumeRole\" , \"Condition\" : { \"StringEquals\" : { \"sts:ExternalId\" : \"<atlan_external_id>\" } } } ] } Replace <atlan_external_id> with the external ID you want to use. Now, reach out to Atlan support with: The name of the role you created abov", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "rnal ID you want to use. Now, reach out to Atlan support with: The name of the role you created above. The ID of the AWS account where the role was created. danger Wait until the support team confirms the account is allowlisted to assume the role before running the crawler. Grant permissions (Optional) Grant permissions for role-based authentication on serverless Grant additional permissions for m", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "al) Grant permissions for role-based authentication on serverless Grant additional permissions for mining query history (Optional) Create IAM policy (Optional) Create IAM policy for role-based authentication on serverless (Optional) Choose IAM-based authentication mechanism", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift", "title": "Set up Amazon Redshift | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "Build custom app Create a local file extraction application from scratch using the patterns and tools you learned Run your first sample app Download and run the Hello World sample application to see an Atlan app in action Set up your development environment Set up your local development environment to start building applications with the Application SDK", "metadata": {"source_url": "https://docs.atlan.com/tags/application-sdk", "title": "3 docs tagged with \"application sdk\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "On this page Once you've crawled Sisense , you can use connector-specific filters for quick asset discovery. The following filters are currently supported for these asset types: Dashboards: Widget count filter - filter dashboards by widget count Data models: Type filter - filter data models by live or extract (formerly called Elasticube) type Data model tables: Tags filter - filter data model tabl", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "or extract (formerly called Elasticube) type Data model tables: Tags filter - filter data model tables by Sisense tags Is hidden filter - use this filter to find hidden data model tables Atlan crawls and maps the following assets and properties from Sisense. danger Currently, Atlan only represents the assets marked with \ud83d\udd00 in lineage. Column-level lineage is not supported at present. Dashboards \ud83d\udd00 \u200b", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "he assets marked with \ud83d\udd00 in lineage. Column-level lineage is not supported at present. Dashboards \ud83d\udd00 \u200b Atlan maps dashboards from Sisense to its SisenseDashboard asset type. Source property Atlan property Where in Atlan title name asset profile and overview sidebar desc description asset profile and overview sidebar created createdAt properties sidebar lastUpdated updatedAt properties sidebar calcul", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "verview sidebar created createdAt properties sidebar lastUpdated updatedAt properties sidebar calculated by Atlan widgetCount asset filter and overview sidebar generated using the dashboard ID sourceURL View in Sisense button on asset profile Widgets \ud83d\udd00 \u200b Atlan maps widgets from Sisense to its SisenseWidget asset type. Source property Atlan property Where in Atlan title name asset profile and overv", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "eWidget asset type. Source property Atlan property Where in Atlan title name asset profile and overview sidebar desc description asset profile and overview sidebar created createdAt properties sidebar lastUpdated updatedAt properties sidebar calculated by Atlan columnCount overview sidebar subType subType API only size size API only Data models \u200b Atlan maps data models from Sisense to its SisenseD", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ubType API only size size API only Data models \u200b Atlan maps data models from Sisense to its SisenseDataModel asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar desc description asset profile and overview sidebar created createdAt properties sidebar lastUpdated updatedAt properties sidebar calculated by Atlan tableCount API only server server API", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "lastUpdated updatedAt properties sidebar calculated by Atlan tableCount API only server server API only revision revision API only lastBuildTime lastBuildTime API only lastSuccessfulBuildTime lastSuccessfulBuildTime API only type type asset filter and overview sidebar relationshipType relationshipType API only Data model tables \ud83d\udd00 \u200b Atlan maps data model tables from Sisense to its SisenseDataModel", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ype API only Data model tables \ud83d\udd00 \u200b Atlan maps data model tables from Sisense to its SisenseDataModelTable asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created createdAt properties sidebar lastUpdated updatedAt properties sidebar calculated by Atlan columnCount overview sidebar type", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ebar lastUpdated updatedAt properties sidebar calculated by Atlan columnCount overview sidebar type type API only expression expression API only isMaterialized isMaterialized API only isHidden isHidden asset filter and overview sidebar schedule schedule API only liveQuerySettings liveQuerySettings API only tags assetTags properties sidebar Folders \u200b Atlan maps folders from Sisense to its SisenseFo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "PI only tags assetTags properties sidebar Folders \u200b Atlan maps folders from Sisense to its SisenseFolder asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar created createdAt properties sidebar lastUpdated updatedAt properties sidebar Dashboards \ud83d\udd00 Widgets \ud83d\udd00 Data models Data model tables \ud83d\udd00 Folders", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/references/what-does-atlan-crawl-from-sisense", "title": "What does Atlan crawl from Sisense? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "query_username_strategy \u00b6 TBC Complete reference This is a complete reference for the query_username_strategy enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 connectionUsername atlanUsername", "metadata": {"source_url": "https://developer.atlan.com/models/enums/query_username_strategy/", "title": "query_username_strategy - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "oughs of common multi-step implementation patterns. Valid values \u00b6 connectionUsername atlanUsername Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/query_username_strategy/", "title": "query_username_strategy - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "On this page Before running the Snowflake crawler , you can run preflight checks to perform the necessary technical validations. The following preflight checks will be completed: Database and schema check \u200b Information schema \u200b \u2705 Check successful \u274c Check failed for $missingObjectName Account usage \u200b \u2705 Check successful \u274c Check failed for $missingObjectName Warehouse access \u200b \u2705 Check successful \u274c Op", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/references/preflight-checks-for-snowflake", "title": "Preflight checks for Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "\u2705 Check successful \u274c Check failed for $missingObjectName Warehouse access \u200b \u2705 Check successful \u274c Operation cannot be performed / User is not authorized to perform this action / Cannot be resumed because resource monitor has exceeded its quota Miner \u200b Did you know? Once you have crawled assets from Snowflake, you can mine query history . Query history view \u200b \u2705 Check successful \u274c Cannot access quer", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/references/preflight-checks-for-snowflake", "title": "Preflight checks for Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Snowflake, you can mine query history . Query history view \u200b \u2705 Check successful \u274c Cannot access query history table. Please run the command in your Snowflake instance: GRANT IMPORTED PRIVILEGES ON DATABASE snowflake TO ROLE atlan_user_role; Access history view \u200b \u2705 Check successful \u274c Check failed. Something went wrong with your request. Sessions view \u200b \u2705 Check successful \u274c Check failed. Something w", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/references/preflight-checks-for-snowflake", "title": "Preflight checks for Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "mething went wrong with your request. Sessions view \u200b \u2705 Check successful \u274c Check failed. Something went wrong with your request. S3 \u200b \u2705 Check successful if the bucket, region, and prefix combination is valid and the S3 credential passed is accessible. \u274c Check failed with error code <AWS error code> - <AWS SDK ERR message> For example: Miner S3 credentials: failed with error code: NoSuchBucket Data", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/references/preflight-checks-for-snowflake", "title": "Preflight checks for Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "- <AWS SDK ERR message> For example: Miner S3 credentials: failed with error code: NoSuchBucket Database and schema check Warehouse access Miner", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/references/preflight-checks-for-snowflake", "title": "Preflight checks for Snowflake | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "SlackDiscussionReporter \u00b6 This content has moved! We have moved our samples to a separate, dedicated site: https://solutions.atlan.com . This document is no longer being maintained. Extracts counts of the number of Slack conversations tracked against each asset, producing an Excel workbook consisting of 1 worksheet with the following columns: Column name Usage Qualified name Unique name of the ass", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "g of 1 worksheet with the following columns: Column name Usage Qualified name Unique name of the asset. Type Type of the asset. Name Human-readable name of the asset. Slack Number of discussions through Slack linked to this asset. Link Link to the asset in Atlan. Configuration \u00b6 You can configure the following options for this reporter as environment variables: ATLAN_BASE_URL \u00b6 URL for your Atlan", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "e following options for this reporter as environment variables: ATLAN_BASE_URL \u00b6 URL for your Atlan tenant (for example: https://tenant.atlan.com ). ATLAN_API_KEY \u00b6 API token to use when accessing Atlan. BATCH_SIZE \u00b6 Defines how many records the API calls attempt to retrieve on each request. (Defaults to 50 if not specified.) FILE_PREFIX \u00b6 Defines what the Excel file's name will start with. (Defau", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ts to 50 if not specified.) FILE_PREFIX \u00b6 Defines what the Excel file's name will start with. (Defaults to slack-discussion-report if not specified.) REGION \u00b6 Defines the AWS region of the S3 bucket where you want to write the Excel file output. BUCKET \u00b6 Defines the S3 bucket where you want the reporter to store the Excel file output. (Note that there is no default value for this, so this must be", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "rter to store the Excel file output. (Note that there is no default value for this, so this must be sent for the utility to run via a Lambda function and produce consumable output \u2014 if blank (default) the reporter produces a local Excel file.) Lambda configuration \u00b6 To use this reporter as an AWS Lambda function, you can configure the same variables as above, but send them in a JSON structure: Lam", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "mbda function, you can configure the same variables as above, but send them in a JSON structure: Lambda configuration { \"BATCH_SIZE\" : \"50\" , \"FILE_PREFIX\" : \"slack-discussion-report\" , \"REGION\" : \"ap-south-1\" , \"BUCKET\" : \"\" } Logging \u00b6 By default, only messages at INFO and above will be logged (to the console). You can change this level by copying the main/resources/log4j2.xml from the source re", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "the console). You can change this level by copying the main/resources/log4j2.xml from the source repo and modifying it to give: more detail ( DEBUG will log every API request and response, including their full payloads) less detail ( WARN will only print warnings and errors, ERROR only errors). Running the reporters locally \u00b6 You can run the reporters locally on any machine with network access to", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ning the reporters locally \u00b6 You can run the reporters locally on any machine with network access to your Atlan tenant. When run in this mode, the reporter will read the input Excel file locally on the machine running the reporter. If you want to change any of the settings , you can simply prepend the command with the environment variables. You can run the SlackDiscussionReporter by downloading th", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "he command with the environment variables. You can run the SlackDiscussionReporter by downloading the pre-compiled jar files for both: With this approach you only need a JRE installed, as you will be using pre-compiled code. Requires at least Java 11, though 17+ is recommended You must have a Java 11 (or higher) JRE installed to use the samples. If possible, we recommend using Java 17 (or higher)", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "1 (or higher) JRE installed to use the samples. If possible, we recommend using Java 17 (or higher) for significantly improved performance. macOS Windows Windows Linux Using Gradle Run SlackDiscussionReporter from pre-compiled jar files 1 2 3 4 5 6 export ATLAN_BASE_URL = https://tenant.atlan.com # (1) export ATLAN_API_KEY = eyNnCJd2T9Y8fEsbdx... export FILE_PREFIX = slack java \\ -cp atlan-java-..", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "(1) export ATLAN_API_KEY = eyNnCJd2T9Y8fEsbdx... export FILE_PREFIX = slack java \\ -cp atlan-java-...-jar-with-dependencies.jar:atlan-java-samples-...-jar-with-dependencies.jar \\ com.atlan.samples.reporters.SlackDiscussionReporter # (2) Export environment variables for the configuration you want to use. At a minimum: ATLAN_BASE_URL giving the URL of your Atlan tenant ATLAN_API_KEY giving the value", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "use. At a minimum: ATLAN_BASE_URL giving the URL of your Atlan tenant ATLAN_API_KEY giving the value of an API token with access to that tenant to load the assets Overriding the configuration Note that you can specify any optional overrides as environment variables before running the reporter in the same way. For example, you could use export FILE_PREFIX=slack to change the prefix of the file the", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "same way. For example, you could use export FILE_PREFIX=slack to change the prefix of the file the reporter will produce. (Optional) If you want to override the logging settings, also add -Dlog4j.configurationFile=./log4j2.xml just before the canonical classname, pointing to your modified version of the log4j2.xml file. Within the directory containing the downloaded jar files, run the java comman", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "f the log4j2.xml file. Within the directory containing the downloaded jar files, run the java command providing at least two arguments: The two jar files, separated by a : . The canonical classname of the SlackDiscussionReporter . Replace the ... with proper version numbers Don't forget to replace the ... in the -cp argument's values with proper version numbers, or running this will not work. Run", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "he ... in the -cp argument's values with proper version numbers, or running this will not work. Run SlackDiscussionReporter from pre-compiled jar files 1 2 3 4 5 $env :ATLAN_BASE_URL = \"https://tenant.atlan.com\" # (1) $env :ATLAN_API_KEY = \"eyNnCJd2T9Y8fEsbdx...\" $env :FILE_PREFIX = \"slack\" $env :CLASSPATH = \"atlan-java-...-jar-with-dependencies.jar;atlan-java-samples-...-jar-with-dependencies.jar", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ASSPATH = \"atlan-java-...-jar-with-dependencies.jar;atlan-java-samples-...-jar-with-dependencies.jar\" # (2) java com.atlan.samples.reporters.SlackDiscussionReporter # (3) Export environment variables for the configuration you want to use. At a minimum: ATLAN_BASE_URL giving the URL of your Atlan tenant ATLAN_API_KEY giving the value of an API token with access to that tenant to load the assets Ove", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ant ATLAN_API_KEY giving the value of an API token with access to that tenant to load the assets Overriding the configuration Note that you can specify any optional overrides as environment variables before running the reporter in the same way. For example, you could use $env:FILE_PREFIX=\"slack\" to change the prefix of the file the reporter will produce. (Optional) If you want to override the logg", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "change the prefix of the file the reporter will produce. (Optional) If you want to override the logging settings, also add -Dlog4j.configurationFile=./log4j2.xml just before the canonical classname, pointing to your modified version of the log4j2.xml file. Note that on windows you must surround the value of the variable in double-quotes! In our experience, it seems that the java -cp command does n", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "value of the variable in double-quotes! In our experience, it seems that the java -cp command does not always work on Windows. Therefore, ensure you set the $env:CLASSPATH environment variable to include the names of the downloaded jar files, separated by a ; . Replace the ... with proper version numbers Don't forget to replace the ... in the -cp argument's values with proper version numbers, or r", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "mbers Don't forget to replace the ... in the -cp argument's values with proper version numbers, or running this will not work. Within the directory containing the downloaded jar files, run the java command providing the canonical classname of the SlackDiscussionReporter . Run SlackDiscussionReporter from pre-compiled jar files 1 2 3 4 5 6 export ATLAN_BASE_URL = https://tenant.atlan.com # (1) expo", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "from pre-compiled jar files 1 2 3 4 5 6 export ATLAN_BASE_URL = https://tenant.atlan.com # (1) export ATLAN_API_KEY = eyNnCJd2T9Y8fEsbdx... export FILE_PREFIX = slack java \\ -cp atlan-java-...-jar-with-dependencies.jar:atlan-java-samples-...-jar-with-dependencies.jar \\ com.atlan.samples.reporters.SlackDiscussionReporter # (2) Export environment variables for the configuration you want to use. At", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "lackDiscussionReporter # (2) Export environment variables for the configuration you want to use. At a minimum: ATLAN_BASE_URL giving the URL of your Atlan tenant ATLAN_API_KEY giving the value of an API token with access to that tenant to load the assets Overriding the configuration Note that you can specify any optional overrides as environment variables before running the reporter in the same wa", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "n specify any optional overrides as environment variables before running the reporter in the same way. For example, you could use export FILE_PREFIX=slack to change the prefix of the file the reporter will produce. (Optional) If you want to override the logging settings, also add -Dlog4j.configurationFile=./log4j2.xml just before the canonical classname, pointing to your modified version of the lo", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "onFile=./log4j2.xml just before the canonical classname, pointing to your modified version of the log4j2.xml file. Within the directory containing the downloaded jar files, run the java command providing at least two arguments: The two jar files, separated by a : . The canonical classname of the SlackDiscussionReporter . Replace the ... with proper version numbers Don't forget to replace the ... i", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ckDiscussionReporter . Replace the ... with proper version numbers Don't forget to replace the ... in the -cp argument's values with proper version numbers, or running this will not work. You can also run the SlackDiscussionReporter from a clone of the samples repository: If you want to change the sample code provided to include additional logic, this is your best option. You have full control ove", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ample code provided to include additional logic, this is your best option. You have full control over all of the code this way and can make any changes you like before running it. Additional requirements You will need a JDK installed to run this way, not only the JRE, as the code must be compiled locally before it can be executed. The computer on which you run the code must also have network acces", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "cally before it can be executed. The computer on which you run the code must also have network access to be able to configure Gradle itself and download the necessary dependencies of the code from Maven Central. Run SlackDiscussionReporter from a clone of the GitHub repo export FILE_PREFIX = slack ./gradlew SlackDiscussionReporter # (1)! Within the root directory of your local clone of the repo, r", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "/gradlew SlackDiscussionReporter # (1)! Within the root directory of your local clone of the repo, run the Gradle task for the SlackDiscussionReporter . Overriding the configuration Note that you can specify any optional overrides as environment variables before running the loader. You can either do this in the same line where you run the command, or by exporting them first for example using expor", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "this in the same line where you run the command, or by exporting them first for example using export FILE_PREFIX=slack . Example output 18:04:33.705 [main] INFO com.atlan.samples.reporters.SlackDiscussionReporter - Creating Excel file (streaming)... 18:04:37.244 [main] INFO com.atlan.samples.reporters.SlackDiscussionReporter - Investigating 7 linked resources in https://tenant.atlan.com in batche", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "ers.SlackDiscussionReporter - Investigating 7 linked resources in https://tenant.atlan.com in batches of: 50 18:04:37.660 [ForkJoinPool.commonPool-worker-2] INFO com.atlan.samples.reporters.SlackDiscussionReporter - ... processed 0/7 (0%) 18:04:37.660 [main] INFO com.atlan.samples.reporters.SlackDiscussionReporter - Writing report to file: slack-discussion-report-20230906-170435-471.xlsx More deta", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "cussionReporter - Writing report to file: slack-discussion-report-20230906-170435-471.xlsx More details If there are many links in assets, you will see multiple lines (one per batch) about the extraction of the asset links (Slack discussions). The final line will always tell you the name of the Excel file that it produced. Was this page helpful? Thanks for your feedback! Thanks for your feedback!", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "l file that it produced. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/samples/reporters/slack/", "title": "SlackDiscussionReporter - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "On this page Overview: Catalog ThoughtSpot liveboards, visualizations, and worksheets in Atlan. Gain visibility into lineage, usage, and governance for your ThoughtSpot analytics assets. Get started \u200b Follow these steps to connect and catalog ThoughtSpot assets in Atlan: Set up the connector Crawl assets References \u200b What does Atlan crawl from ThoughtSpot? : Detailed list of ThoughtSpot asset type", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/thoughtspot", "title": "ThoughtSpot | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ssets References \u200b What does Atlan crawl from ThoughtSpot? : Detailed list of ThoughtSpot asset types and metadata fields that Atlan can extract and catalog. Troubleshooting \u200b Troubleshooting connectivity : Solutions for common issues encountered when connecting Atlan to ThoughtSpot, including permissions and network problems. Get started References Troubleshooting", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/thoughtspot", "title": "ThoughtSpot | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "DataverseEntity \u00b6 Instances of DataverseEntity in Atlan. Complete reference This is a complete reference for the DataverseEntity object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DataverseEntity inherits its attributes and relationships from these other types: classDiagram direction RL class DataverseEntity link DataverseEntity \"../dataverseentity\" class Dataverse { <<abstract>> } link Dataverse \"../dataverse\" Dataverse <|-- DataverseEntity : extends class SaaS", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "{ <<abstract>> } link Dataverse \"../dataverse\" Dataverse <|-- DataverseEntity : extends class SaaS { <<abstract>> } link SaaS \"../saas\" SaaS <|-- Dataverse : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SaaS : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "t\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DataverseEntity 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a diffe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "lly-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ame in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ink terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ssets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ertain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "me (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ation that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total nu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccoun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "d in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether arti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "etDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasS", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ast run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "e sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total durat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "et in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that mat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "tDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "tus message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materiali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "alized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron sche", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "nder the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags at", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "essCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "t. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubT", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "IncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last sy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "ssetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSoda", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "y of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "st of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedB", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "dAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "he connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different na", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "(true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. le", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "d, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "ceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "dAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "s sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "essed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordLi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ery_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "UserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insight", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ds source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "is asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at whi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of username", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "t. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "e in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collectio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "d for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) dataverseIsAuditEnabled \u00b6 Indicator if DataverseEntity has auditing enabled. dataverseIsCustom \u00b6 Indicator if DataverseEntity is custom built. dataverseIsCustomizable \u00b6 Indicator if DataverseEntity is customizable. These attributes are specific to inst", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "IsCustomizable \u00b6 Indicator if DataverseEntity is customizable. These attributes are specific to instances of DataverseEntity (and all of its subtypes). dataverseEntitySchemaName \u00b6 Schema Name of the DataverseEntity. dataverseEntityTableType \u00b6 Table Type of the DataverseEntity. Relationships \u00b6 Inherited relationships These relationships are inherited from DataverseEntity 's supertypes: anomaloCheck", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ted relationships These relationships are inherited from DataverseEntity 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "s Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortData", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": ") \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "tors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "RelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset pr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outpu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of DataverseEntity (and all of its subtypes). dataverseAttributes ( DataverseAttribute ) \u00b6 DataverseAttribute assets contained with", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "its subtypes). dataverseAttributes ( DataverseAttribute ) \u00b6 DataverseAttribute assets contained within this DataverseEntity. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dataverseentity/", "title": "DataverseEntity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "CognosExploration \u00b6 Instance of a Cognos Exploration in Atlan. Complete reference This is a complete reference for the CognosExploration object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step impl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "\u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. CognosExploration inherits its attributes and relationships from these other types: classDiagram direction RL class CognosExploration link CognosExploration \"../cognosexploration\" class Cognos { <<abstract>> } link Cognos \"../cognos\" Cognos <|-- CognosExploration : extends class", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "class Cognos { <<abstract>> } link Cognos \"../cognos\" Cognos <|-- CognosExploration : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Cognos : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "t <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from CognosExploration 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "nique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snipp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "n SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Tim", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "nt that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "he asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "sifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that ar", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "erms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for ce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "n asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "poch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "tAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "alo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that mater", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "JobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSource", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "un of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "t from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that material", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "obLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "essage of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "d this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "hat materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attache", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "iteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "n that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "setMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "entStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "t is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "cMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheck", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 N", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "nnection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Huma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "rawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserte", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": ") or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicog", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "y ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "atedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "rceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ecords sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ist \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "urce_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadU", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "set the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "te a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames wit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "arredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If pres", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) cognosDefaultScreenTip \u00b6 Tooltip text present for the Cognos asset cognosId \u00b6 ID of the asset in Cognos cognosIsDisabled \u00b6 Whether the Cognos asset is diabled cognosIsHidden \u00b6 Whether the Cognos asset is hidden from the ui cognosParentName \u00b6 Name of the par", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "d cognosIsHidden \u00b6 Whether the Cognos asset is hidden from the ui cognosParentName \u00b6 Name of the parent asset in Cognos cognosParentQualifiedName \u00b6 Qualified name of the parent asset in Cognos cognosPath \u00b6 Path of the asset in Cognos. E.g. /content/folder[@name='Folder Name'] cognosType \u00b6 Cognos type of the Cognos asset. E.g. report, dashboard, package, etc. cognosVersion \u00b6 Version of the Cognos a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "e of the Cognos asset. E.g. report, dashboard, package, etc. cognosVersion \u00b6 Version of the Cognos asset Relationships \u00b6 Inherited relationships These relationships are inherited from CognosExploration 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 Applicat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "cation ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "ut port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaCheck", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "EADME that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflow", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "BC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEnt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "butes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "d as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of CognosExploration (and all of its subtypes). cognosFolder ( CognosFolder ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosexploration/", "title": "CognosExploration - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "SisenseWidget \u00b6 Instance of a Sisense widget in Atlan. Complete reference This is a complete reference for the SisenseWidget object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "mic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. SisenseWidget inherits its attributes and relationships from these other types: classDiagram direction RL class SisenseWidget link SisenseWidget \"../sisensewidget\" class Sisense { <<abstract>> } link Sisense \"../sisense\" Sisense <|-- SisenseWidget : extends class BI { <<abstract>> } link BI", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "> } link Sisense \"../sisense\" Sisense <|-- SisenseWidget : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Sisense : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset :", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ass Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from SisenseWidget 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_ta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ". classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "m_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset wa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "tedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on delet", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "y You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ngTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "\u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief titl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "sage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total numbe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "tAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ta quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "L of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "is asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunG", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources we", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "btJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ob that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "bLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "un \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "t. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonito", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "etMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "es of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ssetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last update", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "et is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "BC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom orde", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "Name \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "et ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCost", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopula", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "nt name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "tal cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "urceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of uniq", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ent name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the user", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "o have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "scription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of SisenseWidget (and all of its subtypes). sisenseWidgetColumnCount \u00b6 Number of columns used in this widget. sisenseWidgetDashboardQualifiedName \u00b6 Unique name of the dashboard in which this widget exists. sisenseWidgetFolderQualifiedName \u00b6 Uniq", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "\u00b6 Unique name of the dashboard in which this widget exists. sisenseWidgetFolderQualifiedName \u00b6 Unique name of the folder in which this widget exists. sisenseWidgetSize \u00b6 Size of this widget. sisenseWidgetSubType \u00b6 Subtype of this widget. Relationships \u00b6 Inherited relationships These relationships are inherited from SisenseWidget 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "re inherited from SisenseWidget 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assig", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an outp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "etric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "(1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "tToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes fr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "irflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of SisenseWidget (and all of its subtypes). sisenseDashboard ( SisenseDashboard ) \u00b6 Dashboard in which this widget exists. sisenseDatamodelTables ( SisenseDatamodelTable )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "shboard ) \u00b6 Dashboard in which this widget exists. sisenseDatamodelTables ( SisenseDatamodelTable ) \u00b6 TBC sisenseFolder ( SisenseFolder ) \u00b6 Folder in which this widget exists. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensewidget/", "title": "SisenseWidget - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "kafka_topic_compression_type \u00b6 TBC Complete reference This is a complete reference for the kafka_topic_compression_type enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 uncompressed zstd lz4 s", "metadata": {"source_url": "https://developer.atlan.com/models/enums/kafka_topic_compression_type/", "title": "kafka_topic_compression_type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "\u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 uncompressed zstd lz4 snappy gzip producer Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/kafka_topic_compression_type/", "title": "kafka_topic_compression_type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "On this page Overview: Catalog reports, dashboards, and data modules from IBM Cognos Analytics in Atlan to enable discovery, lineage, and governance for your analytics assets. Get started \u200b Follow these steps to connect and catalog IBM Cognos Analytics assets in Atlan: Set up the connector : Configure Atlan to connect to your IBM Cognos Analytics environment. Crawl assets : Extract and catalog IBM", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/ibm-cognos-analytics", "title": "IBM Cognos Analytics | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "re Atlan to connect to your IBM Cognos Analytics environment. Crawl assets : Extract and catalog IBM Cognos Analytics reports, dashboards, and data modules. Guides \u200b Set up on-premises access : Configure Atlan to connect to IBM Cognos Analytics environments that are isolated from the public internet Crawl on-premises IBM Cognos Analytics : Step-by-step instructions for extracting metadata from on-", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/ibm-cognos-analytics", "title": "IBM Cognos Analytics | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Crawl on-premises IBM Cognos Analytics : Step-by-step instructions for extracting metadata from on-premises IBM Cognos Analytics instances. References \u200b What does Atlan crawl from IBM Cognos Analytics? : Detailed list of IBM Cognos Analytics asset types and metadata fields that Atlan can extract and catalog. Troubleshooting \u200b Troubleshooting connectivity : Solutions for common issues encountered", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/ibm-cognos-analytics", "title": "IBM Cognos Analytics | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "d catalog. Troubleshooting \u200b Troubleshooting connectivity : Solutions for common issues encountered when connecting Atlan to IBM Cognos Analytics, including permissions and network problems. Get started Guides References Troubleshooting", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/ibm-cognos-analytics", "title": "IBM Cognos Analytics | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "DataProductSensitivity \u00b6 Information sensitivity of a data product. Complete reference This is a complete reference for the DataProductSensitivity enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid value", "metadata": {"source_url": "https://developer.atlan.com/models/enums/dataproductsensitivity/", "title": "DataProductSensitivity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "le-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 Public Internal Confidential Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/dataproductsensitivity/", "title": "DataProductSensitivity - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "On this page Is the certified status in MicroStrategy mapped to the certificates field in Atlan? \u200b No, the certified status in MicroStrategy is not mapped to the certificates field in Atlan. While the MicroStrategy certified field only supports a yes or no status, the certification field in Atlan supports multiple values. However, if your assets have been certified in MicroStrategy, you can view t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/troubleshooting/troubleshooting-microstrategy-connectivity", "title": "Troubleshooting MicroStrategy connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "pports multiple values. However, if your assets have been certified in MicroStrategy, you can view that information in the Properties tab of the asset sidebar in Atlan. Is the owner field in MicroStrategy mapped to the owners field in Atlan? \u200b No, the asset owner in MicroStrategy is displayed as the source owner in the Overview section of the asset sidebar in Atlan. How is the upstream lineage for", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/troubleshooting/troubleshooting-microstrategy-connectivity", "title": "Troubleshooting MicroStrategy connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "source owner in the Overview section of the asset sidebar in Atlan. How is the upstream lineage for source tables calculated for cubes and reports? \u200b Cubes or reports do not directly reference SQL tables or columns - they import attributes and metrics. Attributes can directly reference columns of SQL tables while metrics may reference an attribute, a fact, or another metric. Upstream lineage for", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/troubleshooting/troubleshooting-microstrategy-connectivity", "title": "Troubleshooting MicroStrategy connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "QL tables while metrics may reference an attribute, a fact, or another metric. Upstream lineage for cubes and reports is created by aggregating all the directly referenced SQL tables of the attributes and metrics that cubes and reports are sourced from. Why am I not seeing upstream lineage for attributes, facts, and metrics? \u200b Atlan currently does not support upstream lineage for schema objects li", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/troubleshooting/troubleshooting-microstrategy-connectivity", "title": "Troubleshooting MicroStrategy connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "butes, facts, and metrics? \u200b Atlan currently does not support upstream lineage for schema objects like attributes, facts, and metrics. Why are datasets created in a dossier missing from lineage? \u200b Atlan currently does not support lineage for datasets directly created in a dossier due to limitations of the MicroStrategy REST APIs. The complete metadata required for creating lineage is unavailable.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/troubleshooting/troubleshooting-microstrategy-connectivity", "title": "Troubleshooting MicroStrategy connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "of the MicroStrategy REST APIs. The complete metadata required for creating lineage is unavailable. Does Atlan support document visualizations? \u200b Atlan currently does not support document visualizations due to limitations of the MicroStrategy REST APIs. The complete metadata required for supporting document visualizations is unavailable.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/troubleshooting/troubleshooting-microstrategy-connectivity", "title": "Troubleshooting MicroStrategy connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Source owner manager Reference for source owner management capabilities and configuration in stewardship workflows Stewardship Learn how to implement data stewardship in Atlan through automated workflows, policies, and task management.", "metadata": {"source_url": "https://docs.atlan.com/tags/stewardship", "title": "2 docs tagged with \"stewardship\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "On this page Why are assets missing for a collection? \u200b Check permissions attached to the Atlan group . The group should have View permission for the collection. Why are Metabase questions missing for a dashboard? \u200b Check the Metabase question's collection. Was the collection excluded by the metadata filters configured when crawling Metabase ? If so, you can modify the workflow and re-run it .", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/troubleshooting/troubleshooting-metabase-connectivity", "title": "Troubleshooting Metabase connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "BusinessPolicyIncident \u00b6 Incident of business policy Complete reference This is a complete reference for the BusinessPolicyIncident object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implement", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ll, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. BusinessPolicyIncident inherits its attributes and relationships from these other types: classDiagram direction RL class BusinessPolicyIncident link BusinessPolicyIncident \"../businesspolicyincident\" class Incident { <<abstract>> } link Incident \"../incident\" Incident <|-- BusinessPo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "policyincident\" class Incident { <<abstract>> } link Incident \"../incident\" Incident <|-- BusinessPolicyIncident : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Incident : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from BusinessPolicyIn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "set : extends Properties \u00b6 Inherited properties These attributes are inherited from BusinessPolicyIncident 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of cus", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "anTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "atus of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last upd", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ch the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do no", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "een linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "le \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringifie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "t \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnviro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ccount in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "n \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "et in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "tDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ther sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "eadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Ru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "f the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationH", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ion of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that mate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that mate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "DbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeveritie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "edNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo inci", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQual", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": ". assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "ssociated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastSc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ssociated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "Status \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection thr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ccessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids lin", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchroniz", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "eleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for disp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "r \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "n this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed fo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "teCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "s with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "centUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ead this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "t updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "ion of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "e used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) incidentSeverity \u00b6 Status of this asset's severity. These attributes are", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "for certain asset types.) incidentSeverity \u00b6 Status of this asset's severity. These attributes are specific to instances of BusinessPolicyIncident (and all of its subtypes). businessPolicyIncidentFilterDSL \u00b6 Filter ES DSL to denote the associate asset/s involved. businessPolicyIncidentNoncompliantCount \u00b6 count of noncompliant assets in the incident businessPolicyIncidentRelatedPolicyGUIDs \u00b6 polic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "ount \u00b6 count of noncompliant assets in the incident businessPolicyIncidentRelatedPolicyGUIDs \u00b6 policy ids related to this incident Relationships \u00b6 Inherited relationships These relationships are inherited from BusinessPolicyIncident 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "gned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "put port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "ionshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/businesspolicyincident/", "title": "BusinessPolicyIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "Namespace \u00b6 Base class for query collections and folders. Complete reference This is a complete reference for the Namespace object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation pa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Namespace inherits its attributes and relationships from these other types: classDiagram direction RL class Namespace { <<abstract>> } link Namespace \"../namespace\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Namespace : extends class Referenceable { <<abstract>> } link Ref", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "} link Asset \"../asset\" Asset <|-- Namespace : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from Namespace 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "set. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "atedBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Hum", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "lan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any ba", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "nstead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (Th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the annou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcemen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "entUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anom", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ame of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedChec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ed to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "et is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSav", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that ma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "erated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-rea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "rialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "sset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "atusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the j", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "e job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ally everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "etDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "e DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ched to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "is asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "acks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done vi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "olicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "BC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. ce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is emp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "sset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "t (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchroniz", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "t was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "GUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "an. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "mpute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "e_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "eadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Ti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "lication, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "he Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contain", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "(This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) Relationships \u00b6 Inherited relationships These relationships are inherited from Namespace 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "\u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data con", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "Ks assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attache", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "uct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegist", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRela", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "ip_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos These relationships are specific to instances of Namespace (and all of its subtypes). childrenFolders ( Folder ) \u00b6 Folders that exist within this namespace. childrenQueries ( Query ) \u00b6 Queries that exist within this namespace. Was this page helpful? Thanks for y", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "renQueries ( Query ) \u00b6 Queries that exist within this namespace. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/namespace/", "title": "Namespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "CognosDashboard \u00b6 Instance of a Cognos Dashboard in Atlan. Complete reference This is a complete reference for the CognosDashboard object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "l, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. CognosDashboard inherits its attributes and relationships from these other types: classDiagram direction RL class CognosDashboard link CognosDashboard \"../cognosdashboard\" class Cognos { <<abstract>> } link Cognos \"../cognos\" Cognos <|-- CognosDashboard : extends class BI { <<abstract", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "{ <<abstract>> } link Cognos \"../cognos\" Cognos <|-- CognosDashboard : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Cognos : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from CognosDashboard 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlan", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "or this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Stat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "e asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snip", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "t as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have bee", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "e changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "nouncementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "s asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the acc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "onmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "terialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "illiseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "h \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Wheth", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThrea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "n of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ueued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "onHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duratio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "t. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "etDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that ma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "his asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, curren", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "d the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualified", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "ities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Ca", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "f Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "pes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ng this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateSt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "hich the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is acc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "hich this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "ce. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage h", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or del", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "tSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "t to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "ch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQue", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryCompute", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "tList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRece", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "names of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who rea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ry_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "w this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra informatio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "r of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "xists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "es.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) cognosDefaultScreenTip \u00b6 Tooltip text present for the Cognos asset cognosId \u00b6 ID of the asset in Cognos cognosIsDisabled \u00b6 Whether the Cognos asset is diabled cognosIsHidden \u00b6 Whether the Cognos asset is hidden from the ui cognosParentName \u00b6 Name of the parent asset in Cogno", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "Whether the Cognos asset is hidden from the ui cognosParentName \u00b6 Name of the parent asset in Cognos cognosParentQualifiedName \u00b6 Qualified name of the parent asset in Cognos cognosPath \u00b6 Path of the asset in Cognos. E.g. /content/folder[@name='Folder Name'] cognosType \u00b6 Cognos type of the Cognos asset. E.g. report, dashboard, package, etc. cognosVersion \u00b6 Version of the Cognos asset Relationships", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "set. E.g. report, dashboard, package, etc. cognosVersion \u00b6 Version of the Cognos asset Relationships \u00b6 Inherited relationships These relationships are inherited from CognosDashboard 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset conta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "on asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( Data", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "test version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "k ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TB", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ent name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities imp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "te ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of CognosDashboard (an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "romSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of CognosDashboard (and all of its subtypes). cognosFolder ( CognosFolder ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cognosdashboard/", "title": "CognosDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "WorkflowType \u00b6 Defines the possible types of a workflow. Complete reference This is a complete reference for the WorkflowType enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 DATA_ACCESS POLIC", "metadata": {"source_url": "https://developer.atlan.com/models/enums/workflowtype/", "title": "WorkflowType - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "tterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 DATA_ACCESS POLICY CHANGE_MANAGEMENT PUBLICATION_MANAGEMENT IMPACT_ANALYSIS REVOKE_DATA_ACCESS Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/workflowtype/", "title": "WorkflowType - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Weekly update \u00b6 This week we: Added creator() helpers for Airflow assets Further enhanced the (experimental) typedef toolkit Fixed a number of bugs Custom types \u00b6 In the toolkit, we've added: Further elements for generating the UX. A truncated index option for very long string attributes. We've fixed: The inclusion of attributeDefs in the output for all typedefs, even if empty. Python \u00b6 We've adde", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/19/update--apr-19/", "title": "Update \u2014 Apr 19 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "d: The inclusion of attributeDefs in the output for all typedefs, even if empty. Python \u00b6 We've added: An AssetFilterGroup enum for persona personalization. creator() helper methods for Airflow assets. We've fixed: Accessibility of qualified_name in related glossary objects. Logic for removing parent category relationships through AtlasGlossaryCategory objects. Lineage list performance by avoiding", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/19/update--apr-19/", "title": "Update \u2014 Apr 19 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "t category relationships through AtlasGlossaryCategory objects. Lineage list performance by avoiding unnecessary page retrievals using the hasMore attribute to short-circuit. An issue where explicit assignment of None to asset attributes in a bulk request followed by a client.asset.save() resulted in exclusion from the request payload. An issue with multiple remove/append relationships where value", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/19/update--apr-19/", "title": "Update \u2014 Apr 19 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "n exclusion from the request payload. An issue with multiple remove/append relationships where values could be left out of a request due to the underlying dictionary management. Kotlin (and Java) \u00b6 We've added: creator() helper methods for Airflow assets. We've fixed: Accessibility of qualifiedName so it can still be accessed easily even if it is embedded in uniqueAttributes . Tracking of GUID ass", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/19/update--apr-19/", "title": "Update \u2014 Apr 19 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "so it can still be accessed easily even if it is embedded in uniqueAttributes . Tracking of GUID assignments in batch operations when a real, existing GUID is provided as input in the batch and is thus re-used as-is rather than being re-assigned. Learn more \u00b6 Python SDK release notes Java SDK release notes Custom packages Was this page helpful? Thanks for your feedback! Thanks for your feedback! H", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/19/update--apr-19/", "title": "Update \u2014 Apr 19 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "e notes Custom packages Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/19/update--apr-19/", "title": "Update \u2014 Apr 19 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "AtlasGlossaryTermType \u00b6 Defines type if the Glossary Term Complete reference This is a complete reference for the AtlasGlossaryTermType enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 DOCUMEN", "metadata": {"source_url": "https://developer.atlan.com/models/enums/atlasglossarytermtype/", "title": "AtlasGlossaryTermType - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 DOCUMENT Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/atlasglossarytermtype/", "title": "AtlasGlossaryTermType - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "DbtSource \u00b6 Instance of a dbt source asset in Atlan. Complete reference This is a complete reference for the DbtSource object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation pattern", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "amples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DbtSource inherits its attributes and relationships from these other types: classDiagram direction RL class DbtSource link DbtSource \"../dbtsource\" class Dbt { <<abstract>> } link Dbt \"../dbt\" Dbt <|-- DbtSource : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Dbt :", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "<|-- DbtSource : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Dbt : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DbtSource 's supertypes (shown", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "roperties \u00b6 Inherited properties These attributes are inherited from DbtSource 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "nformation, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. delet", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a diffe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "lassificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "anings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its paren", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "e \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "es who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of ann", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ouncement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. appl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "pplicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing sta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "resent in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "xists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Pat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "e job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "t materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "illiseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDoc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobL", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "er of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "artedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ob that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "econds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "unHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metada", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "bt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic laye", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "dNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo inci", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "te Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ociated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "rs. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSync", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "s. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide fur", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "t's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is acc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "cation of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ent name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContrac", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "ay purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEdi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": ". lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostU", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "e \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQuery", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ist \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "e most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "em, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "arred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "n user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) dbtAccountName \u00b6 TBC dbtAlias \u00b6 TBC dbtConnectionContext \u00b6 TBC dbtEnvironmentDbtVersion \u00b6 TBC dbtEnvi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "btAccountName \u00b6 TBC dbtAlias \u00b6 TBC dbtConnectionContext \u00b6 TBC dbtEnvironmentDbtVersion \u00b6 TBC dbtEnvironmentName \u00b6 TBC dbtJobLastRun \u00b6 TBC dbtJobName \u00b6 TBC dbtJobNextRun \u00b6 TBC dbtJobNextRunHumanized \u00b6 TBC dbtJobRuns \u00b6 List of latest DBT job runs across all environments dbtJobSchedule \u00b6 TBC dbtJobScheduleCronHumanized \u00b6 TBC dbtJobStatus \u00b6 TBC dbtMeta \u00b6 TBC dbtPackageName \u00b6 TBC dbtProjectName \u00b6 TBC d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "duleCronHumanized \u00b6 TBC dbtJobStatus \u00b6 TBC dbtMeta \u00b6 TBC dbtPackageName \u00b6 TBC dbtProjectName \u00b6 TBC dbtSemanticLayerProxyUrl \u00b6 TBC dbtTags \u00b6 TBC dbtUniqueId \u00b6 TBC These attributes are specific to instances of DbtSource (and all of its subtypes). dbtFreshnessCriteria \u00b6 TBC dbtState \u00b6 TBC Relationships \u00b6 Inherited relationships These relationships are inherited from DbtSource 's supertypes: anomaloCh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "\u00b6 Inherited relationships These relationships are inherited from DbtSource 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "ct ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 D", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "onitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "DefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "sks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. ou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ed by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of DbtSource (and all of its subtypes). dbtTests ( DbtTest ) \u00b6 TBC sqlAsset ( SQL ) \u00b6 TBC (1) Uses a different name in SDKs prim", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "subtypes). dbtTests ( DbtTest ) \u00b6 TBC sqlAsset ( SQL ) \u00b6 TBC (1) Uses a different name in SDKs primarySqlAsset primary_sql_asset sqlAssets ( SQL ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtsource/", "title": "DbtSource - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "Workflow \u00b6 These are the model elements in Atlan related to governance workflows. Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand how to manage resources in Atlan. classDiagram direction RL class Workflow link Workflow \"../workflow\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Work", "metadata": {"source_url": "https://developer.atlan.com/models/workflow/", "title": "Workflows - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "kflow link Workflow \"../workflow\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Workflow : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class WorkflowRun link WorkflowRun \"../entities/workflowrun\" Asset <|-- WorkflowRun : extends class Task link Task \"../entities/task\" Asset <|-- Task : extends Properties \u00b6 Th", "metadata": {"source_url": "https://developer.atlan.com/models/workflow/", "title": "Workflows - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "kflowRun : extends class Task link Task \"../entities/task\" Asset <|-- Task : extends Properties \u00b6 These attributes are specific to instances of Workflow (and all of its subtypes). workflowActionChoices \u00b6 List of workflow action choices. workflowConfig \u00b6 Details of the workflow. workflowCreatedBy \u00b6 Username of the user who created this workflow. workflowDeletedAt \u00b6 Deletion time of this workflow. w", "metadata": {"source_url": "https://developer.atlan.com/models/workflow/", "title": "Workflows - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "sername of the user who created this workflow. workflowDeletedAt \u00b6 Deletion time of this workflow. workflowRunExpiresIn \u00b6 Time duration after which a run of this workflow will expire. workflowStatus \u00b6 Status of the workflow. workflowTemplateGuid \u00b6 GUID of the workflow template from which this workflow was created. workflowType \u00b6 Type of the workflow. workflowUpdatedBy \u00b6 Username of the user who up", "metadata": {"source_url": "https://developer.atlan.com/models/workflow/", "title": "Workflows - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ow was created. workflowType \u00b6 Type of the workflow. workflowUpdatedBy \u00b6 Username of the user who updated this workflow. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/workflow/", "title": "Workflows - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "Event handlers \u00b6 This content has moved! We have moved our samples to a separate, dedicated site: https://solutions.atlan.com . This document is no longer being maintained. The event handlers provide examples to process metadata creation, update and deletion events in real-time: ScoreCalculator calculates a completeness score for an asset any time the asset changes, and populates the result into c", "metadata": {"source_url": "https://developer.atlan.com/samples/events/", "title": "Event handlers - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ulates a completeness score for an asset any time the asset changes, and populates the result into custom metadata on the asset. VerificationEnforcer checks whether an asset that has been given a certificate of VERIFIED is worthy of it, and if not automatically reverts the certificate to DRAFT with an explanatory message. Setting up the event handlers \u00b6 To set up the event handlers, follow the ins", "metadata": {"source_url": "https://developer.atlan.com/samples/events/", "title": "Event handlers - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "an explanatory message. Setting up the event handlers \u00b6 To set up the event handlers, follow the instructions in the handling webhooks via AWS Lambda pattern. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/samples/events/", "title": "Event handlers - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "API authentication Learn about api authentication. Atlan's open API Learn about atlan's open api. Connectors and capabilities Learn about connectors and capabilities. Databricks connectivity Learn about troubleshooting databricks connectivity. Generate HAR files and console logs Atlan is built on [REST APIs](https://apidocs.atlan.com/), so you can see the requests being sent by the UI to the API g", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "EST APIs](https://apidocs.atlan.com/), so you can see the requests being sent by the UI to the API gateway through your browser's developer console. How can Atlan generate upstream lineage from the data warehouse layer? Learn about how can atlan generate upstream lineage from the data warehouse layer?. How do I fully delete glossary terms or archived items? Learn about how do i fully delete glossa", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "r?. How do I fully delete glossary terms or archived items? Learn about how do i fully delete glossary terms or archived items?. How does a Snowflake connection know that a table referenced in LookML is actually the same table? Learn about how does a snowflake connection know that a table referenced in lookml is actually the same table?. How to obtain upstream lineage if I connect to a Tableau dat", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "in lookml is actually the same table?. How to obtain upstream lineage if I connect to a Tableau data asset? Learn about how to obtain upstream lineage if i connect to a tableau data asset?. Integrate Google Cloud Composer/OpenLineage To integrate Google Cloud Composer/OpenLineage with Atlan, complete the following steps. To learn more about OpenLineage, refer to [OpenLineage configuration and fac", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "te the following steps. To learn more about OpenLineage, refer to [OpenLineage configuration and facets](/product/connections/references/openlineage-configuration-and-facets). Is there a way to build lineage from NetSuite to Snowflake? Learn about is there a way to build lineage from netsuite to snowflake?. Provider package versions for OpenLineage Learn about provider package versions for openlin", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "wflake?. Provider package versions for OpenLineage Learn about provider package versions for openlineage. Set up an AWS private network link to Databricks For all details, see [Databricks documentation](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html). Set up Qlik Sense Cloud :::warning Who can do this? You will need your Qlik Sense Cloud tenant administr", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "up Qlik Sense Cloud :::warning Who can do this? You will need your Qlik Sense Cloud tenant administrator to complete these steps - you may not have access yourself. Set up Qlik Sense Enterprise on Windows :::warning Who can do this? You will need your Qlik Sense Enterprise on Windows administrator to complete these steps - you may not have access yourself. Set up Sigma :::warning Who can do this?", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "o complete these steps - you may not have access yourself. Set up Sigma :::warning Who can do this? You will probably need your Sigma administrator to complete these steps - you may not have access yourself. Software development kits (SDKs) Learn about software development kits (sdks). Support and Technical Help Complete guide to getting support, understanding API limits, and accessing technical a", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "echnical Help Complete guide to getting support, understanding API limits, and accessing technical assistance for Atlan. Supported sources Learn about supported sources. Troubleshooting IBM Cognos Analytics connectivity Learn about troubleshooting ibm cognos analytics connectivity. Troubleshooting Matillion connectivity Learn about troubleshooting matillion connectivity. Troubleshooting Qlik Sense", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "atillion connectivity Learn about troubleshooting matillion connectivity. Troubleshooting Qlik Sense Cloud connectivity Learn about troubleshooting qlik sense cloud connectivity. Troubleshooting Sigma connectivity Learn about troubleshooting sigma connectivity. Troubleshooting Trino connectivity Learn about troubleshooting trino connectivity. Why is my Databricks lineage API not working? Learn abo", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "rn about troubleshooting trino connectivity. Why is my Databricks lineage API not working? Learn about why is my databricks lineage api not working?.", "metadata": {"source_url": "https://docs.atlan.com/tags/rest-api", "title": "25 docs tagged with \"rest-api\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "On this page Once you have configured the Qlik Sense Cloud permissions , you can establish a connection between Atlan and Qlik Sense Cloud. To crawl metadata from Qlik Sense Cloud, review th e order of operations and then complete the following steps. Select the source \u200b To select Qlik Sense Cloud as your source: In the top right of any screen in Atlan, navigate to +New and click New Workflow . Fr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s your source: In the top right of any screen in Atlan, navigate to +New and click New Workflow . From the Marketplace page, click Qlik Sense Assets . In the right panel, click Setup Workflow . Provide your credentials \u200b To enter your Qlik Sense Cloud credentials: For Host , enter the tenant URL for your Qlik Sense Cloud instance. For Port , enter the port number for your Qlik Sense Cloud instance", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "your Qlik Sense Cloud instance. For Port , enter the port number for your Qlik Sense Cloud instance. For Authentication , API key is the default option. For API Key , enter the API key you copied from your Qlik Sense Cloud instance. Click the Test Authentication button to confirm connectivity to Qlik Sense Cloud. Once authentication is successful, navigate to the bottom of the screen and click Ne", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ik Sense Cloud. Once authentication is successful, navigate to the bottom of the screen and click Next . Configure the connection \u200b To complete the Qlik Sense Cloud connection configuration: Provide a Connection Name that represents your source environment. For example, you might use values like production , development , gold , or analytics . (Optional) To change the users who are able to manage", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "duction , development , gold , or analytics . (Optional) To change the users who are able to manage this connection, change the users or groups listed under Connection Admins . danger If you do not specify any user or group, no one will be able to manage the connection - not even admins. Navigate to the bottom of the screen and click Next to proceed. Configure the crawler \u200b Before running the Qlik", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "the bottom of the screen and click Next to proceed. Configure the crawler \u200b Before running the Qlik Sense Cloud crawler, you can further configure it. On the Metadata page, you can override the defaults for any of these options: To select the assets you want to exclude from crawling, click Exclude Spaces . (This will default to no assets if none are specified.) To select the assets you want to in", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Spaces . (This will default to no assets if none are specified.) To select the assets you want to include in crawling, click Include Spaces . (This will default to all assets, if none are specified.) Did you know? If an asset appears in both the include and exclude filters, the exclude filter takes precedence. Run the crawler \u200b To run the Qlik Sense Cloud crawler, after completing the steps above:", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "precedence. Run the crawler \u200b To run the Qlik Sense Cloud crawler, after completing the steps above: To check for any permissions or other configuration issues before running the crawler, click Preflight checks . You can either: To run the crawler once immediately, at the bottom of the screen, click the Run button. To schedule the crawler to run hourly, daily, weekly, or monthly, at the bottom of", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "the Run button. To schedule the crawler to run hourly, daily, weekly, or monthly, at the bottom of the screen, click the Schedule Run button. Once the crawler has completed running, you will see the assets on Atlan's asset page! \ud83c\udf89 Select the source Provide your credentials Configure the connection Configure the crawler Run the crawler", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/crawl-qlik-sense-cloud", "title": "Crawl Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Power BI PowerBI \u00b6 Base class for Power BI assets. Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand managing Power BI assets in Atlan. For that, we would suggest starting with either: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementat", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": ", atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. classDiagram direction RL class PowerBI { <<abstract>> } link PowerBI \"../powerbi\" class BI { <<abstract>> } link BI \"../entities/bi\" BI <|-- PowerBI : extends class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": ">> } link Catalog \"../entities/catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Referenceable <|-- Asset : extends class PowerBIReport link PowerBIReport \"../entities/powerbireport\" PowerBI <|-- PowerBIReport : extends class PowerBIMeasure l", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "owerBIReport \"../entities/powerbireport\" PowerBI <|-- PowerBIReport : extends class PowerBIMeasure link PowerBIMeasure \"../entities/powerbimeasure\" PowerBI <|-- PowerBIMeasure : extends class PowerBIColumn link PowerBIColumn \"../entities/powerbicolumn\" PowerBI <|-- PowerBIColumn : extends class PowerBITable link PowerBITable \"../entities/powerbitable\" PowerBI <|-- PowerBITable : extends class Powe", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "rBITable link PowerBITable \"../entities/powerbitable\" PowerBI <|-- PowerBITable : extends class PowerBITile link PowerBITile \"../entities/powerbitile\" PowerBI <|-- PowerBITile : extends class PowerBIDatasource link PowerBIDatasource \"../entities/powerbidatasource\" PowerBI <|-- PowerBIDatasource : extends class PowerBIWorkspace link PowerBIWorkspace \"../entities/powerbiworkspace\" PowerBI <|-- Power", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "tends class PowerBIWorkspace link PowerBIWorkspace \"../entities/powerbiworkspace\" PowerBI <|-- PowerBIWorkspace : extends class PowerBIDataset link PowerBIDataset \"../entities/powerbidataset\" PowerBI <|-- PowerBIDataset : extends class PowerBIDashboard link PowerBIDashboard \"../entities/powerbidashboard\" PowerBI <|-- PowerBIDashboard : extends class PowerBIDataflow link PowerBIDataflow \"../entitie", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "oard\" PowerBI <|-- PowerBIDashboard : extends class PowerBIDataflow link PowerBIDataflow \"../entities/powerbidataflow\" PowerBI <|-- PowerBIDataflow : extends class PowerBIPage link PowerBIPage \"../entities/powerbipage\" PowerBI <|-- PowerBIPage : extends class PowerBIDataflowEntityColumn link PowerBIDataflowEntityColumn \"../entities/powerbidataflowentitycolumn\" PowerBI <|-- PowerBIDataflowEntityCol", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "DataflowEntityColumn \"../entities/powerbidataflowentitycolumn\" PowerBI <|-- PowerBIDataflowEntityColumn : extends Properties \u00b6 These attributes are specific to instances of PowerBI (and all of its subtypes). powerBIEndorsement \u00b6 Endorsement status of this asset, in Power BI. powerBIFormatString \u00b6 Format of this asset, as specified in the FORMAT_STRING of the MDX cell property. powerBIIsHidden \u00b6 Wh", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "rmat of this asset, as specified in the FORMAT_STRING of the MDX cell property. powerBIIsHidden \u00b6 Whether this asset is hidden in Power BI (true) or not (false). powerBITableQualifiedName \u00b6 Unique name of the Power BI table in which this asset exists. Relationships \u00b6 The following illustrates how the various Power BI objects inter-relate with each other: erDiagram Connection ||..o{ PowerBIWorkspac", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "e various Power BI objects inter-relate with each other: erDiagram Connection ||..o{ PowerBIWorkspace : \"\" PowerBIWorkspace |o--o{ PowerBIDashboard : dashboards PowerBIWorkspace |o--o{ PowerBIDataflow : dataflows PowerBIWorkspace |o--o{ PowerBIDataset : datasets PowerBIWorkspace |o--o{ PowerBIReport : reports PowerBIDashboard |o--o{ PowerBITile : tiles PowerBIDataflow }o--o{ PowerBIDataset : datas", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": ": reports PowerBIDashboard |o--o{ PowerBITile : tiles PowerBIDataflow }o--o{ PowerBIDataset : datasets PowerBIDataflow |o--o{ IPowerBIDataflowEntityColumn : powerBIDataflowEntityColumns PowerBIDataset }o--o{ PowerBIDatasource : datasources PowerBIDataset |o--o{ PowerBIReport : reports PowerBIDataset |o--o{ PowerBITable : tables PowerBIDataset |o--o{ PowerBITile : tiles PowerBIReport |o--o{ PowerB", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "t |o--o{ PowerBITable : tables PowerBIDataset |o--o{ PowerBITile : tiles PowerBIReport |o--o{ PowerBIPage : pages PowerBIReport |o--o{ PowerBITile : tiles PowerBITable |o--o{ PowerBIColumn : columns PowerBITable |o--o{ PowerBIMeasure : measures Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more inf", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/powerbi/", "title": "PowerBI - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "Build custom app Create a local file extraction application from scratch using the patterns and tools you learned Run your first sample app Download and run the Hello World sample application to see an Atlan app in action", "metadata": {"source_url": "https://docs.atlan.com/tags/tutorial", "title": "2 docs tagged with \"tutorial\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Access archived assets Learn about access archived assets. Add contract impact analysis in GitHub Add contract impact analysis in GitHub <Badge variant=\"preview\" text=\"Private Preview\" link=\"/get-started/references/product-release-stages#private-preview\" /> Add custom metadata <div style={{position: \"relative\", paddingBottom: \"calc(66.33333333333333% + 41px)\", height: 0}}> <iframe src=\"https://dem", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "\"relative\", paddingBottom: \"calc(66.33333333333333% + 41px)\", height: 0}}> <iframe src=\"https://demo.arcade.software/1dT1bPneM5fp1O71lb. Add descriptions You can add descriptions to your assets in Atlan, including tables, views, and individual columns. You can even add a description in the form of a [README](/product/integrations). Doing so will enrich your data asset with the relevant contextual", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "a [README](/product/integrations). Doing so will enrich your data asset with the relevant contextual information. Add impact analysis in GitLab Learn about add impact analysis in gitlab. Add options :::warning Who can do this? You must be an admin user in Atlan to create options for custom metadata properties. AI and Automation Features Guide to Atlan's AI capabilities and automation features for", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "properties. AI and Automation Features Guide to Atlan's AI capabilities and automation features for enhanced data governance and productivity. Atlan AI security Atlan uses [Azure OpenAI Service](https://azure.microsoft.com/en-in/products/cognitive-services/openai-service) to power Atlan AI. Specifically, Atlan uses GPT-4o, a large, pretrained AI model. Attach a tag Atlan allows users to add [tags]", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ally, Atlan uses GPT-4o, a large, pretrained AI model. Attach a tag Atlan allows users to add [tags](/product/capabilities/governance/tags/concepts/what-are-tags) to assets. You can use them to identify key characteristics of assets or group them together for usage or data protection. Automate data profiling \u2795Available via the Data Quality Studio package Can Atlan read a dump of SQL statements to", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "profiling \u2795Available via the Data Quality Studio package Can Atlan read a dump of SQL statements to create lineage? Atlan supports column-level lineage generation for cloud data warehouses like Snowflake, Amazon Redshift, Google BigQuery, and more. Atlan [mines SQL queries](/. Can I be notified if there is a change in downstream dashboards or a schema drift? You can [create webhooks](/product/inte", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "here is a change in downstream dashboards or a schema drift? You can [create webhooks](/product/integrations/automation/webhooks/how-tos/create-webhooks) in Atlan to configure alerts or triggers for downstream actions for metadata change events, including schema changes. You can also configure alerts for asset creation or deletion events. Can I connect to any source with an ODBC/JDBC driver? A num", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "s for asset creation or deletion events. Can I connect to any source with an ODBC/JDBC driver? A number of Atlan's [supported connectors](/product/connections/references/connectors-and-capabilities) use a JDBC- or REST API-based approach for metadata extraction. If you are attempting to connect to a source with no native integration, [contact Atlan support](/support/submit-request) to share more d", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "source with no native integration, [contact Atlan support](/support/submit-request) to share more details about your use case. Can I query any DW/DL? You can query any data warehouse (DW) or data lake (DL) if the integration is supported via Atlan's [supported sources](/product/connections/references/supported-sources#data-sources). Once integrated, you will be able to query the underlying data u", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "es/supported-sources#data-sources). Once integrated, you will be able to query the underlying data using the [Insights](/product/capabilities/insights/how-tos/query-data) feature. Can I turn off sample data preview for the entire organization? Atlan recommends that you turn off sample data preview at a connection level. For example, you can configure the [Snowflake crawler](/apps/connectors/data-w", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "t a connection level. For example, you can configure the [Snowflake crawler](/apps/connectors/data-warehouses/snowflake/how-tos/crawl-snowflake) to prevent users from previewing any Snowflake data. Configure Snowflake data metric functions Configure Snowflake data metric functions <Badge variant=\"preview\" text=\"Private Preview\" link=\"/get-started/references/product-release-stages#private-preview\"", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "eview\" text=\"Private Preview\" link=\"/get-started/references/product-release-stages#private-preview\" /> Connect data sources for Azure-hosted Atlan instances This document provides recommended solutions for integrating Atlan instances hosted on Microsoft Azure with the following:. Connect on-premises databases to Kubernetes You can configure and use [Atlan's metadata-extractor tool](/apps/connector", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "databases to Kubernetes You can configure and use [Atlan's metadata-extractor tool](/apps/connectors/database/on-premises-databases/how-tos/set-up-on-premises-database-access) to extract metadata from on-premises databases with Kubernetes deployment architecture, as an alternative to using Docker Compose. Crawl Aiven Kafka Once you have [configured the Aiven Kafka permissions](/apps/connectors/me", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ompose. Crawl Aiven Kafka Once you have [configured the Aiven Kafka permissions](/apps/connectors/messaging/aiven-kafka/how-tos/set-up-aiven-kafka), you can establish a connection between Atlan and Aiven Kafka. Crawl Amazon Athena To crawl metadata from Amazon Athena, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl Amazon", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl Amazon DynamoDB Once you have [configured the Amazon DynamoDB permissions](/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb), you can establish a connection between Atlan and Amazon DynamoDB. Crawl Amazon MSK To crawl metadata from Amazon MSK, review the [order of operations](/produ", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ynamoDB. Crawl Amazon MSK To crawl metadata from Amazon MSK, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl Amazon QuickSight Once you have [configured the Amazon QuickSight permissions](/apps/connectors/business-intelligence/amazon-quicksight/how-tos/set-up-amazon-quicksight),. Crawl Amazon Redshift Once you have configu", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ce/amazon-quicksight/how-tos/set-up-amazon-quicksight),. Crawl Amazon Redshift Once you have configured the [Amazon Redshift access permissions](/apps/connectors/data-warehouses/amazon-redshift/how-tos/set-up-amazon-redshift), you can establish a connection between Atlan and Amazon Redshift. Crawl Apache Kafka Learn about crawl apache kafka. Crawl AWS Glue Once you have configured the [AWS Glue ac", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "pache Kafka Learn about crawl apache kafka. Crawl AWS Glue Once you have configured the [AWS Glue access permissions](/apps/connectors/etl-tools/aws-glue/how-tos/set-up-aws-glue), you can establish a connection between Atlan and AWS Glue. Crawl BigID Configure and run the Atlan BigID workflow to crawl metadata from BigID. Crawl Confluent Kafka Learn about crawl confluent kafka. Crawl Confluent Sch", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "wl metadata from BigID. Crawl Confluent Kafka Learn about crawl confluent kafka. Crawl Confluent Schema Registry Once you have [configured the Confluent Schema Registry access permissions](/apps/connectors/schema/confluent-schema-registry/how-tos/set-up-confluent-schema-registry), you can establish a connection between Atlan and Confluent Schema Registry. Crawl CrateDB Configure and run the CrateD", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "a connection between Atlan and Confluent Schema Registry. Crawl CrateDB Configure and run the CrateDB crawler to extract metadata from your database Crawl Databricks To crawl metadata from your Databricks instance, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl DataStax Enterprise Crawl DataStax Enterprise Crawl dbt Once", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "en complete the following steps. Crawl DataStax Enterprise Crawl DataStax Enterprise Crawl dbt Once you have [configured a dbt Cloud service token](/apps/connectors/etl-tools/dbt/how-tos/set-up-dbt-cloud) or [uploaded your dbt Core project files to S3](/apps/connectors/etl-tools/dbt/how-tos/set-up-dbt-core), you can crawl dbt metadata into Atlan. Crawl Domo Once you have [configured the Domo permi", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "bt-core), you can crawl dbt metadata into Atlan. Crawl Domo Once you have [configured the Domo permissions](/apps/connectors/business-intelligence/domo/how-tos/set-up-domo), you can establish a connection between Atlan and Domo. Crawl Fivetran Learn about crawl fivetran. Crawl Google BigQuery Once you have configured the [Google BigQuery user permissions](/apps/connectors/data-warehouses/google-bi", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ou have configured the [Google BigQuery user permissions](/apps/connectors/data-warehouses/google-bigquery/how-tos/set-up-google-bigquery), you can establish a connection between Atlan and Google BigQuery. Crawl Hive To crawl metadata from Hive, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl IBM Cognos Analytics Once you", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "how-tos/order-workflows) and then complete the following steps. Crawl IBM Cognos Analytics Once you have [configured the IBM Cognos Analytics permissions](/apps/connectors/business-intelligence/ibm-cognos-analytics/how-tos/set-up-ibm-cognos-analytics), you can establish a connection between Atlan and IBM Cognos Analytics. Crawl Looker Once you have configured the [Looker user permissions](/apps/co", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "d IBM Cognos Analytics. Crawl Looker Once you have configured the [Looker user permissions](/apps/connectors/business-intelligence/looker/how-tos/set-up-looker), you can establish a connection between Atlan and Looker. Crawl Matillion Once you have [configured the Matillion user permissions](/apps/connectors/etl-tools/matillion/how-tos/set-up-matillion), you can establish a connection between Atla", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "onnectors/etl-tools/matillion/how-tos/set-up-matillion), you can establish a connection between Atlan and Matillion. Crawl Metabase Once you have [configured the Metabase user permissions](/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase), you can establish a connection between Atlan and Metabase. Crawl Microsoft Azure Cosmos DB Once you have [configured the Microsoft Azure", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "n Atlan and Metabase. Crawl Microsoft Azure Cosmos DB Once you have [configured the Microsoft Azure Cosmos DB permissions](/apps/connectors/database/microsoft-azure-cosmos-db/how-tos/set-up-microsoft-azure-cosmos-db), you can establish a connection between Atlan and Microsoft Azure Cosmos DB. Crawl Microsoft Azure Data Factory Once you have [configured the Microsoft Azure Data Factory permissions]", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "Microsoft Azure Data Factory Once you have [configured the Microsoft Azure Data Factory permissions](/apps/connectors/etl-tools/microsoft-azure-data-factory/how-tos/set-up-microsoft-. Crawl Microsoft Azure Event Hubs Once you have [configured the Microsoft Azure Event Hubs permissions](/apps/connectors/messaging/microsoft-azure-event-hubs/how-tos/set-up-microsoft-azure-event-hubs), you can establi", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "ors/messaging/microsoft-azure-event-hubs/how-tos/set-up-microsoft-azure-event-hubs), you can establish a connection between Atlan and Microsoft Azure Event Hubs. Crawl Microsoft Azure Synapse Analytics Once you have [configured the Microsoft Azure Synapse Analytics permissions](/apps/connectors/data-warehouses/microsoft-azure-synapse-analytics/how-tos/set-up-microsoft-azure-synapse-analytics), you", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "-warehouses/microsoft-azure-synapse-analytics/how-tos/set-up-microsoft-azure-synapse-analytics), you can establish a connection between Atlan and Microsoft Azure Synapse Analytics. Crawl Microsoft Power BI Once you have configured the [Microsoft Power BI user permissions](/apps/connectors/business-intelligence/microsoft-power-bi/how-tos/set-up-microsoft-power-bi), you can establish a connection be", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ntelligence/microsoft-power-bi/how-tos/set-up-microsoft-power-bi), you can establish a connection between Atlan and Microsoft Power BI. Crawl Microsoft SQL Server Once you have configured the [Microsoft SQL Server user permissions](/apps/connectors/database/microsoft-sql-server/how-tos/set-up-microsoft-sql-server),. Crawl MicroStrategy Once you have [configured the MicroStrategy permissions](/apps", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "oft-sql-server),. Crawl MicroStrategy Once you have [configured the MicroStrategy permissions](/apps/connectors/business-intelligence/microstrategy/how-tos/set-up-microstrategy), you can establish a connection between Atlan and MicroStrategy. Crawl Mode Once you have [configured the Mode user permissions](/apps/connectors/business-intelligence/mode/how-tos/set-up-mode), you can establish a connect", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "sions](/apps/connectors/business-intelligence/mode/how-tos/set-up-mode), you can establish a connection between Atlan and Mode. Crawl MongoDB Once you have [configured the MongoDB permissions](/apps/connectors/database/mongodb/how-tos/set-up-mongodb), you can establish a connection between Atlan and MongoDB. Crawl Monte Carlo Once you have [configured the Monte Carlo permissions](/apps/connectors/", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "MongoDB. Crawl Monte Carlo Once you have [configured the Monte Carlo permissions](/apps/connectors/observability/monte-carlo/how-tos/set-up-monte-carlo), you can establish a connection between Atlan and Monte Carlo. Crawl MySQL To crawl metadata from MySQL, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl on-premises datab", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "/connections/how-tos/order-workflows) and then complete the following steps. Crawl on-premises databases Once you have [set up the metadata-extractor tool](/apps/connectors/database/on-premises-databases/how-tos/set-up-on-premises-database-access), you can extract metadata from your on-premises databases using the following steps. Crawl on-premises Databricks Once you have [set up the databricks-e", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "bases using the following steps. Crawl on-premises Databricks Once you have [set up the databricks-extractor tool](/apps/connectors/database/on-premises-databases/references/supported-connections-for-on-premises-databases), you can extract metadata from your on-premises Databricks instances by completing the following steps. Crawl on-premises IBM Cognos Analytics Once you have [set up the cognos-e", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "eting the following steps. Crawl on-premises IBM Cognos Analytics Once you have [set up the cognos-extractor tool](/apps/connectors/business-intelligence/ibm-cognos-analytics/how-tos/set-up-on-premises-ibm-cognos-analytics-access), you can extract metadata from your on-premises IBM Cognos Analytics instances by completing the following steps. Crawl on-premises Kafka Once you have [set up the kafka", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "instances by completing the following steps. Crawl on-premises Kafka Once you have [set up the kafka-extractor tool](/apps/connectors/messaging/on-premises-event-buses/how-tos/set-up-on-premises-kafka-access), you can extract metadata from your on-premises Kafka instances by completing the following steps. Crawl on-premises Looker Once you have [set up the looker-extractor tool](/apps/connectors/b", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "steps. Crawl on-premises Looker Once you have [set up the looker-extractor tool](/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access), you can extract metadata from your on-premises Looker instances using the following steps. Crawl on-premises Tableau Once you have [set up the tableau-extractor tool](/apps/connectors/business-intelligence/tableau/how-tos/set-up-", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "e [set up the tableau-extractor tool](/apps/connectors/business-intelligence/tableau/how-tos/set-up-on-premises-tableau-access), you can extract metadata from your on-premises Tableau instances by completing the following steps. Crawl on-premises ThoughtSpot Once you have [set up the thoughtspot-extractor tool](/apps/connectors/business-intelligence/thoughtspot/how-tos/set-up-on-premises-thoughtsp", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ractor tool](/apps/connectors/business-intelligence/thoughtspot/how-tos/set-up-on-premises-thoughtspot-access),. Crawl Oracle Once you have configured the [Oracle user permissions](/apps/connectors/database/oracle/how-tos/set-up-oracle#create-user-in-oracle), you can establish a connection between Atlan and Oracle. Crawl PostgreSQL To crawl metadata from PostgreSQL, review the [order of operations", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "tlan and Oracle. Crawl PostgreSQL To crawl metadata from PostgreSQL, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl PrestoSQL Once you have configured the [PrestoSQL user permissions](/apps/connectors/database/prestosql/how-tos/set-up-prestosql), you can establish a connection between Atlan and PrestoSQL. Crawl Qlik Sense", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "-tos/set-up-prestosql), you can establish a connection between Atlan and PrestoSQL. Crawl Qlik Sense Cloud Once you have [configured the Qlik Sense Cloud permissions](/apps/connectors/business-intelligence/qlik-sense-cloud/how-tos/set-up-qlik-sense-cloud), you can establish a connection between Atlan and Qlik Sense Cloud. Crawl Qlik Sense Enterprise on Windows Once you have [configured the Qlik Se", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "n and Qlik Sense Cloud. Crawl Qlik Sense Enterprise on Windows Once you have [configured the Qlik Sense Enterprise on Windows permissions](/apps/connectors/business-intelligence/qlik-sense-enterprise-on-windows/how-tos/how-. Crawl Redash Once you have [configured the Redash permissions](/apps/connectors/business-intelligence/redash/how-tos/set-up-redash), you can establish a connection between Atl", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "tors/business-intelligence/redash/how-tos/set-up-redash), you can establish a connection between Atlan and Redash. Crawl Redpanda Kafka Once you have [configured the Redpanda Kafka permissions](/apps/connectors/messaging/redpanda-kafka/how-tos/set-up-redpanda-kafka), you can establish a connection between Atlan and Redpanda Kafka. Crawl Salesforce Once you have configured the [Salesforce user perm", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "etween Atlan and Redpanda Kafka. Crawl Salesforce Once you have configured the [Salesforce user permissions](/apps/connectors/crm/salesforce/how-tos/set-up-salesforce), you can establish a connection between Atlan and Salesforce. Crawl SAP HANA Once you have [configured the SAP HANA permissions](/apps/connectors/database/sap-hana/how-tos/set-up-sap-hana), you can establish a connection between Atl", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ps/connectors/database/sap-hana/how-tos/set-up-sap-hana), you can establish a connection between Atlan and SAP HANA. Crawl Sigma Once you have [configured the Sigma permissions](/apps/connectors/business-intelligence/sigma/how-tos/set-up-sigma), you can establish a connection between Atlan and Sigma. Crawl Sisense Once you have [configured the Sisense permissions](/apps/connectors/business-intelli", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": ". Crawl Sisense Once you have [configured the Sisense permissions](/apps/connectors/business-intelligence/sisense/how-tos/set-up-sisense), you can establish a connection between Atlan and Sisense. Crawl Snowflake To crawl metadata from Snowflake, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl Soda Once you have [configure", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "/how-tos/order-workflows) and then complete the following steps. Crawl Soda Once you have [configured the Soda permissions](/apps/connectors/observability/soda/how-tos/set-up-soda), you can establish a connection between Atlan and Soda. Crawl Tableau To crawl metadata from Tableau, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps.", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Crawl Teradata Once you have configured the [Teradata user permissions](/apps/connectors/database/teradata/how-tos/set-up-teradata), you can establish a connection between Atlan and Teradata. Crawl ThoughtSpot Once you have [configured the ThoughtSpot permissions](/apps/connectors/business-intellig", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "houghtSpot Once you have [configured the ThoughtSpot permissions](/apps/connectors/business-intelligence/thoughtspot/how-tos/set-up-thoughtspot), you can establish a connection between Atlan and ThoughtSpot. Crawl Trino To crawl metadata from Trino, review the [order of operations](/product/connections/how-tos/order-workflows) and then complete the following steps. Create announcements Adding an a", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ons/how-tos/order-workflows) and then complete the following steps. Create announcements Adding an announcement to your data asset helps you call attention to an important feature or notify others about a change coming down the pipeline. Since announcements in Atlan display the time stamp and author information, you can easily identify whether an announcement is still relevant and who to ask for q", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "information, you can easily identify whether an announcement is still relevant and who to ask for questions. Data Connections and Integration Complete guide for connecting Atlan to your data sources, managing integrations, and troubleshooting connection issues. Data Models Data models provide a framework to describe how data is structured, organized, and related within a system. It acts as a blue", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "mework to describe how data is structured, organized, and related within a system. It acts as a blueprint for organizations to design their business applications and processes. Data models can be of different types: relational, hierarchical, entity relationship, and network. Data Pipelines Learn how to connect your data pipelines to Atlan. Explore ETL tools, workflow orchestration, and lineage tra", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "to connect your data pipelines to Atlan. Explore ETL tools, workflow orchestration, and lineage tracking to build a comprehensive view of your data movement. Disable data access :::warning Who can do this? You will need to be an admin user in Atlan to configure these options. Discovery FAQs Frequently asked questions about Atlan's Discovery capabilities. Does lineage only cover calculated fields", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "tly asked questions about Atlan's Discovery capabilities. Does lineage only cover calculated fields for Tableau dashboards? Atlan displays upstream as well as downstream lineage for [Tableau dashboards](/apps/connectors/business-intelligence/tableau/references/what-does-atlan-crawl-f. Download impacted assets in Microsoft Excel Once you've [connected Atlan with Microsoft Excel](/product/integratio", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "ted assets in Microsoft Excel Once you've [connected Atlan with Microsoft Excel](/product/integrations/collaboration/spreadsheets/how-tos/integrate-atlan-with-microsoft-excel), you can download impacted assets in Microsoft Excel. This can help you assess the downstream impact of any changes made to an upstream asset for [impact analysis](/product/capabilities/lineage/concepts/what-is-lineage#impac", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "an upstream asset for [impact analysis](/product/capabilities/lineage/concepts/what-is-lineage#impact-analysis). Enable Snowflake OAuth Atlan supports [Snowflake OAuth-based authentication](https://docs.snowflake.com/user-guide/oauth-snowflake-overview) for [Snowflake](/apps/connectors/data-ware. Enable SSO for Amazon Redshift You will need to [create a client application in Okta](https://help.okt", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "able SSO for Amazon Redshift You will need to [create a client application in Okta](https://help.okta.com/en-us/Content/Topics/Apps/Apps_App_Integration_Wizard_OIDC.htm) to use for [configuring the identity provider in AWS](/apps/connectors/data-warehouses/amazon-redshift/how-tos/enable-sso-for-amazon-redshift). Enable SSO for Google BigQuery Credentials are used to obtain an access token from Goo", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "on-redshift). Enable SSO for Google BigQuery Credentials are used to obtain an access token from Google's authorization servers for authentication in Atlan. Enrich Atlan through dbt Beyond the default mapped [dbt Cloud](/apps/connectors/etl-tools/dbt/references/what-does-atlan-crawl-from-dbt-cloud) or [dbt Core](/apps/connectors/etl-tools/dbt/references/what-does-atlan-crawl-from-dbt-core) propert", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "or [dbt Core](/apps/connectors/etl-tools/dbt/references/what-does-atlan-crawl-from-dbt-core) properties, you can update any of Atlan's metadata attributes (except for `name`, `tenantId`, and `qualifiedName`) through your dbt model's `meta` property. extract lineage and usage from Databricks Once you have [crawled assets from Databricks](/apps/connectors/data-warehouses/databricks/how-tos/crawl-dat", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "have [crawled assets from Databricks](/apps/connectors/data-warehouses/databricks/how-tos/crawl-databricks), you can retrieve lineage from [Unity Catalog](https://docs.databricks.com/data-governance/unity-catalog/index.html) and [usage and popularity metrics](/product/capabilities/usage-and-popularity/how-tos/interpret-usage-metrics) from [query history](https://docs.databricks.com/api/workspace/", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ity/how-tos/interpret-usage-metrics) from [query history](https://docs.databricks.com/api/workspace/queryhistory/list) or system tables. This is supported for all [three authentication methods](/apps/connectors/data-warehouses/databricks/how-tos/set-up-databricks): personal access token, AWS service principal, and Azure service principal. extract on-premises Databricks lineage Once you have [set u", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "principal, and Azure service principal. extract on-premises Databricks lineage Once you have [set up the databricks-extractor tool](/apps/connectors/data-warehouses/databricks/how-tos/set-up-on-premises-databricks-lineage-extraction), you can extract lineage from your on-premises Databricks instances by completing the following steps. Find assets by usage Data teams often lack clarity on which da", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "es by completing the following steps. Find assets by usage Data teams often lack clarity on which data assets can be considered trustworthy, whether these are frequently used, the freshness of the data itself, or how critical these are for enrichment and governance. How can I identify an Insights query in my database access log? Atlan appends the product name Atlan and a unique ID at the end of ea", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "ery in my database access log? Atlan appends the product name Atlan and a unique ID at the end of each query in a comment. This can help you identify queries from Insights in your database access logs. How can I use personas to update a term in a glossary? By default, any user in Atlan can view all [glossaries](/product/capabilities/governance/glossary/concepts/what-is-a-glossary) and nested categ", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "[glossaries](/product/capabilities/governance/glossary/concepts/what-is-a-glossary) and nested categories and terms in the _Glossary_ section. Implement OpenLineage in Airflow operators If you're using an Airflow operator supported by OpenLineage, the OpenLineage events will contain input and output details. This means that you do not have to modify your current DAG implementation and Atlan will b", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "details. This means that you do not have to modify your current DAG implementation and Atlan will be able to generate data lineage. Integrate Amazon MWAA/OpenLineage To learn more about OpenLineage, refer to [OpenLineage configuration and facets](/product/connections/references/openlineage-configuration-and-facets). Integrate Apache Airflow/OpenLineage To integrate Apache Airflow/OpenLineage with", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "ation-and-facets). Integrate Apache Airflow/OpenLineage To integrate Apache Airflow/OpenLineage with Atlan, complete the following steps. To learn more about OpenLineage, refer to [OpenLineage configuration and facets](/product/connections/references/openlineage-configuration-and-facets). Integrate Apache Spark/OpenLineage Atlan extracts job-level operational metadata from Apache Spark and generat", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "Apache Spark/OpenLineage Atlan extracts job-level operational metadata from Apache Spark and generates job lineage through OpenLineage. To learn more about OpenLineage, refer to [OpenLineage configuration and facets](/product/connections/references/openlineage-configuration-and-facets). Integrate Atlan with Microsoft Excel The Atlan add-in for Microsoft Excel makes it easy to enrich metadata in bu", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "lan with Microsoft Excel The Atlan add-in for Microsoft Excel makes it easy to enrich metadata in bulk for your data assets in Atlan. You can use the Atlan add-in for both the web and desktop versions of Microsoft Excel. Integrate Jira Data Center You will need to [configure an incoming link](https://confluence.atlassian.com/adminjiraserver/configure-an-incoming-link-1115659067.html) with an exter", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "//confluence.atlassian.com/adminjiraserver/configure-an-incoming-link-1115659067.html) with an external application - in this case, Atlan. This will allow Atlan to access Jira data, which means that Jira will act as the OAuth provider. Integrate ServiceNow If your Atlan admin has [enabled the governance workflows and inbox module](/product/capabilities/governance/stewardship/how-tos/automate-data-", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "ance workflows and inbox module](/product/capabilities/governance/stewardship/how-tos/automate-data-governance) in your Atlan workspace, you can create a ServiceNow integration to allow your users to [grant or revoke data access](/product/capabilities/governance/stewardship/how-tos/automate-data-governance) for governed assets in Atlan or any other data source. Interpret usage metrics Atlan curren", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "ernance) for governed assets in Atlan or any other data source. Interpret usage metrics Atlan currently supports usage and popularity metrics for the following connectors: Link your account To [export assets to and bulk enrich metadata from](/product/integrations/collaboration/spreadsheets/how-tos/export-assets) a supported spreadsheet tool,. Link your ServiceNow account To request or revoke data", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21900}}, {"content": "xport-assets) a supported spreadsheet tool,. Link your ServiceNow account To request or revoke data access through ServiceNow inside Atlan, you may first need to link your ServiceNow account. This is done automatically for the user that [set up the ServiceNow integration](/product/integrations/project-management/servicenow/how-tos/integrate-servicenow), but not for other users. Manage custom metad", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22200}}, {"content": "ct-management/servicenow/how-tos/integrate-servicenow), but not for other users. Manage custom metadata structures :::warning Who can do this? You must be an admin user to manage custom metadata structures, including defining new ones. Manage Databricks tags You must have a [Unity Catalog-enabled workspace](https://docs.databricks.com/en/data-governance/unity-catalog/get-started.html) and SQL ware", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22500}}, {"content": "rkspace](https://docs.databricks.com/en/data-governance/unity-catalog/get-started.html) and SQL warehouse configured to import Databricks tags in Atlan. Manage Google BigQuery tags Atlan imports your [Google BigQuery tags](https://docs.getdbt.com/references/resource-configs/tags) and allows you to update your Google BigQuery assets with the imported tags. Note that object tagging in Google BigQuer", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22800}}, {"content": "pdate your Google BigQuery assets with the imported tags. Note that object tagging in Google BigQuery currently requires [Enterprise edition or higher](https://cloud.google.com/bigquery/docs/editions-intro#editions_features). Manage Snowflake tags You can import your Snowflake tags to Atlan through one-way tag sync. The synced Snowflake tags will be matched to corresponding tags in Atlan through c", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23100}}, {"content": "one-way tag sync. The synced Snowflake tags will be matched to corresponding tags in Atlan through case-insensitive name match and your Snowflake assets will be enriched with their synced tags from Snowflake. Migrate from dbt to Atlan action The dbt-action is a custom action designed to perform impact analysis on changes to your dbt models in a [GitHub](/apps/connectors/etl-tools/dbt/how-tos/. Min", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23400}}, {"content": "ct analysis on changes to your dbt models in a [GitHub](/apps/connectors/etl-tools/dbt/how-tos/. Mine Amazon Redshift Once you have [crawled assets from Amazon Redshift](/apps/connectors/data-warehouses/amazon-redshift/how-tos/crawl-amazon-redshift), you can mine its query history to construct lineage and retrieve [usage and popularity metrics](/product/capabilities/usage-and-popularity/how-tos/in", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23700}}, {"content": "ge and retrieve [usage and popularity metrics](/product/capabilities/usage-and-popularity/how-tos/interpret-usage-metrics). Mine Google BigQuery Once you have [crawled assets from Google BigQuery](/apps/connectors/data-warehouses/google-bigquery/how-tos/crawl-google-bigquery), you can mine its query history to construct lineage. Mine Microsoft Azure Synapse Analytics Learn about mine microsoft azu", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24000}}, {"content": "history to construct lineage. Mine Microsoft Azure Synapse Analytics Learn about mine microsoft azure synapse analytics. Mine queries through S3 Once you have crawled assets from a supported connector, you can mine query history. Mine Snowflake Once you have [crawled assets from Snowflake](/apps/connectors/data-warehouses/snowflake/how-tos/crawl-snowflake), you can mine its query history to const", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24300}}, {"content": "nnectors/data-warehouses/snowflake/how-tos/crawl-snowflake), you can mine its query history to construct lineage. Mine Teradata Once you have [crawled assets from Teradata](/apps/connectors/database/teradata/how-tos/crawl-teradata), you can mine its query history to construct lineage. order workflows The [order of operations](/product/connections/how-tos/order-workflows#order-of-operations) you ru", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24600}}, {"content": "s The [order of operations](/product/connections/how-tos/order-workflows#order-of-operations) you run in Atlan is important. Follow the specific workflow sequence outlined below when crawling [data tools](/product/connections/references/supported-sources). The right order particularly ensures that lineage is constructed without needing to rerun crawlers. Preflight checks for Amazon Redshift Before", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24900}}, {"content": "ineage is constructed without needing to rerun crawlers. Preflight checks for Amazon Redshift Before [running the Amazon Redshift crawler](/apps/connectors/data-warehouses/amazon-redshift/how-tos/crawl-amazon-redshift), you can run [preflight chec. Preflight checks for Anomalo This check tests for the validity of the [host name URL and API key](/apps/connectors/observability/anomalo/how-tos/integr", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25200}}, {"content": "he validity of the [host name URL and API key](/apps/connectors/observability/anomalo/how-tos/integrate-anomalo) you provided. If Atlan is unable to connect to your Anomalo instance, this may indicate that your credentials are either incorrect or invalid. Preflight checks for Databricks Before [running the Databricks crawler](/apps/connectors/data-warehouses/databricks/how-tos/crawl-databricks), y", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25500}}, {"content": "ing the Databricks crawler](/apps/connectors/data-warehouses/databricks/how-tos/crawl-databricks), you can run [preflight checks](/product/co. Preflight checks for DataStax Enterprise Preflight checks for DataStax Enterprise Preflight checks for Domo Atlan uses the [DataSet API](https://developer.domo.com/portal/72ae9b3e80374-list-data-sets) to fetch dataset metadata from Domo. Preflight checks fo", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25800}}, {"content": "mo.com/portal/72ae9b3e80374-list-data-sets) to fetch dataset metadata from Domo. Preflight checks for Fivetran Learn about preflight checks for fivetran. Preflight checks for Google BigQuery Each request requires an OAuth 2.0 access token generated via the [service account key](https://cloud.google.com/docs/authentication#service-accounts). Preflight checks for Hive Before [running the Hive crawle", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26100}}, {"content": "com/docs/authentication#service-accounts). Preflight checks for Hive Before [running the Hive crawler](/apps/connectors/database/hive/how-tos/crawl-hive), you can run [preflight checks](/product/connections/concepts/what-a. Preflight checks for Metabase Before [running the Metabase crawler](/apps/connectors/business-intelligence/metabase/how-tos/crawl-metabase), you can run [preflight checks](/pro", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26400}}, {"content": "nnectors/business-intelligence/metabase/how-tos/crawl-metabase), you can run [preflight checks](/product/co. Preflight checks for Microsoft Azure Data Factory Before [running the Microsoft Azure Data Factory crawler](/apps/connectors/etl-tools/microsoft-azure-data-factory/how-tos/crawl-microsoft-azure-data-fact. Preflight checks for Microsoft Azure Synapse Analytics This check is performed for bot", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26700}}, {"content": "re-data-fact. Preflight checks for Microsoft Azure Synapse Analytics This check is performed for both [basic](/apps/connectors/data-warehouses/microsoft-azure-synapse-analytics/how-tos/set-up-microsoft-azure-synapse-analytics) and [service principal](/apps/connectors/data-warehouses/microsoft-azure-synapse-analytics/how-tos/set-up-microsoft-azure-synapse-analytics) authentication method. Preflight", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27000}}, {"content": "synapse-analytics/how-tos/set-up-microsoft-azure-synapse-analytics) authentication method. Preflight checks for Microsoft SQL Server Before [running the Microsoft SQL Server crawler](/apps/connectors/database/microsoft-sql-server/how-tos/crawl-microsoft-sql-server), you can run [prefli. Preflight checks for Mode Before [running the Mode crawler](/apps/connectors/business-intelligence/mode/how-tos/", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27300}}, {"content": "ecks for Mode Before [running the Mode crawler](/apps/connectors/business-intelligence/mode/how-tos/crawl-mode), you can run [preflight checks](/product/connections/co. Preflight checks for MySQL Before [running the MySQL crawler](/apps/connectors/database/mysql/how-tos/crawl-mysql), you can run [preflight checks](/product/connections/concepts/wha. Preflight checks for Oracle Before [running the O", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27600}}, {"content": "eflight checks](/product/connections/concepts/wha. Preflight checks for Oracle Before [running the Oracle crawler](/apps/connectors/database/oracle/how-tos/crawl-oracle), you can run [preflight checks](/product/connections/concepts/. Preflight checks for PostgreSQL Before [running the PostgreSQL crawler](/apps/connectors/database/postgresql/how-tos/crawl-postgresql), you can run [preflight checks]", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27900}}, {"content": "wler](/apps/connectors/database/postgresql/how-tos/crawl-postgresql), you can run [preflight checks](/product/connectio. Preflight checks for PrestoSQL Before [running the PrestoSQL crawler](/apps/connectors/database/prestosql/how-tos/crawl-prestosql), you can run [preflight checks](/product/connections/. Preflight checks for Qlik Sense Cloud This check tests for access to datasets and other Qlik", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28200}}, {"content": "ions/. Preflight checks for Qlik Sense Cloud This check tests for access to datasets and other Qlik objects. Preflight checks for SAP S/4HANA Preflight checks for SAP S/4HANA <Badge variant=\"preview\" text=\"Private Preview\" link=\"/get-started/references/product-release-stages#private-preview\" /> Preflight checks for Snowflake Before [running the Snowflake crawler](/apps/connectors/data-warehouses/s", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28500}}, {"content": "light checks for Snowflake Before [running the Snowflake crawler](/apps/connectors/data-warehouses/snowflake/how-tos/crawl-snowflake), you can run [preflight checks](/product/conne. Preflight checks for Soda Learn about preflight checks for soda Preflight checks for Teradata Before [running the Teradata crawler](/apps/connectors/database/teradata/how-tos/crawl-teradata), you can run [preflight che", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28800}}, {"content": "data crawler](/apps/connectors/database/teradata/how-tos/crawl-teradata), you can run [preflight checks](/product/connections/con. Preflight checks for Trino Before [running the Trino crawler](/apps/connectors/database/trino/how-tos/crawl-trino), you can run [preflight checks](/product/connections/concepts/wha. provide SSL certificates SSL (Secure Sockets Layer) encryption helps establish a secure", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29100}}, {"content": "oncepts/wha. provide SSL certificates SSL (Secure Sockets Layer) encryption helps establish a secure connection between your data source and Atlan. Atlan currently only supports SSL certificates for [crawling Tableau](/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau). Schedule a query You must [save your query](/product/capabilities/insights/how-tos/save-and-share-queries) befo", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29400}}, {"content": "query You must [save your query](/product/capabilities/insights/how-tos/save-and-share-queries) before you can schedule it. Your [SMTP configuration](/product/integrations/communication/smtp-and-announcements/how-tos/configure-smtp) must also be in a working state to send results to recipients. Search and discover assets Atlan is a living catalog of all your data assets and knowledge. It lets you", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29700}}, {"content": "ch and discover assets Atlan is a living catalog of all your data assets and knowledge. It lets you quickly discover and access your data, along with the tribal knowledge and business context. Security The Secure Agent is designed with multiple security controls to protect metadata, credentials, and communication between systems. This document outlines its security mechanisms across authentication", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 30000}}, {"content": "communication between systems. This document outlines its security mechanisms across authentication, encryption, container security, network security, and logging and monitoring. Security and Compliance Complete guide to Atlan's security features, compliance certifications, and data protection capabilities. Set up a private network link to Amazon Athena :::warning Who can do this? You will need y", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 30300}}, {"content": "bilities. Set up a private network link to Amazon Athena :::warning Who can do this? You will need your Amazon Athena or AWS administrator involved - you may not have access yourself to complete these steps. Set up Aiven Kafka Atlan supports the [S3 extraction method](/apps/connectors/messaging/on-premises-event-buses/how-tos/set-up-on-premises-kafka-access) for fetching metadata from Aiven Kafka.", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 30600}}, {"content": "remises-event-buses/how-tos/set-up-on-premises-kafka-access) for fetching metadata from Aiven Kafka. This method uses Atlan's kafka-extractor tool to fetch metadata. Set up Amazon DynamoDB Learn about set up amazon dynamodb. Set up Amazon MSK Learn about set up amazon msk. Set up Amazon QuickSight Learn about set up amazon quicksight. Set up Amazon Redshift :::warning Who can do this? You will nee", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 30900}}, {"content": "earn about set up amazon quicksight. Set up Amazon Redshift :::warning Who can do this? You will need your Amazon Redshift administrator to run these commands - you may not have access yourself. Set up Amazon S3 Create AWS IAM permissions and credentials for Atlan to access and catalog your S3 buckets and objects. Set up an Azure private network link to Databricks For all details, see [Databricks", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 31200}}, {"content": "ts and objects. Set up an Azure private network link to Databricks For all details, see [Databricks documentation](https://learn.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/private-link-simplified?source=recommendations#create-the-workspace-and-private-endpoints-in-the-azure-portal-ui). Set up Anomalo Atlan supports the API authentication method for fetchin", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 31500}}, {"content": "nts-in-the-azure-portal-ui). Set up Anomalo Atlan supports the API authentication method for fetching metadata from [Anomalo](https://docs.anomalo.com/integrations/atlan-integration). This method uses an API key to fetch metadata. Set up AWS Glue Learn about set up aws glue. Set up BigID Create a BigID system user and API token for Atlan integration. Set up Confluent Kafka Atlan supports the API a", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 31800}}, {"content": "gID system user and API token for Atlan integration. Set up Confluent Kafka Atlan supports the API authentication method for fetching metadata from Confluent Kafka. This method uses an API key and API secret to fetch metadata. Set up Confluent Schema Registry :::warning Who can do this? You will probably need your Schema Registry administrator to complete these steps - you may not have access your", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 32100}}, {"content": "bably need your Schema Registry administrator to complete these steps - you may not have access yourself. Set up Databricks Atlan supports three authentication methods for fetching metadata from Databricks. You can set up any of the following authentication methods:. Set up DataStax Enterprise Set up DataStax Enterprise Set up dbt Cloud :::warning Who can do this? You will probably need your dbt C", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 32400}}, {"content": "p DataStax Enterprise Set up dbt Cloud :::warning Who can do this? You will probably need your dbt Cloud administrator to complete these steps - you may not have access yourself. Set up Domo :::warning Who can do this? You will need your Domo administrator to complete these steps - you may not have access yourself. Set up Fivetran Learn about set up fivetran. Set up Google BigQuery You must be a G", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 32700}}, {"content": "access yourself. Set up Fivetran Learn about set up fivetran. Set up Google BigQuery You must be a Google BigQuery administrator to run these commands. For more information, see [Google Cloud's Granting, changing, and revoking access to resources](https://cloud.google.com/iam/docs/granting-changing-revoking-access). Set up Google Cloud Storage Configure Google Cloud Storage for secure metadata ing", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 33000}}, {"content": "revoking-access). Set up Google Cloud Storage Configure Google Cloud Storage for secure metadata ingestion with Atlan. Set up Hive :::warning Who can do this? You will need your Hadoop administrator to run these commands - you may not have access yourself. Set up IBM Cognos Analytics :::warning Who can do this? You must be an IBM Cognos Analytics administrator to complete these steps - you may not", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 33300}}, {"content": "can do this? You must be an IBM Cognos Analytics administrator to complete these steps - you may not have access yourself. Set up Inventory reports Create Inventory report for Amazon S3 in case of inventory based ingestion through the crawler. Set up Microsoft Azure Cosmos DB If your Microsoft Azure Cosmos DB deployment includes a mix of vCore- and RU-based accounts, you must configure both to fet", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 33600}}, {"content": "Cosmos DB deployment includes a mix of vCore- and RU-based accounts, you must configure both to fetch metadata. You can then use the _vCore and RU_ deployment option to [crawl your Microsoft Azure Cosmos DB assets](/apps/connectors/database/microsoft-azure-cosmos-db/how-tos/crawl-microsoft-azure-cosmos-db). Set up Microsoft Azure Data Factory Atlan supports service principal authentication for fe", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 33900}}, {"content": "smos-db). Set up Microsoft Azure Data Factory Atlan supports service principal authentication for fetching metadata from Microsoft Azure Data Factory. This method requires a client ID, client secret, and tenant ID to fetch metadata. Set up Microsoft Azure Event Hubs Atlan supports the following authentication methods for Microsoft Azure Event Hubs:. Set up Microsoft Azure Synapse Analytics Atlan s", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 34200}}, {"content": "entication methods for Microsoft Azure Event Hubs:. Set up Microsoft Azure Synapse Analytics Atlan supports crawling the following with the Microsoft Azure Synapse Analytics package:. Set up Microsoft Power BI This guide outlines how to set up Microsoft Power BI so it can connect with Atlan for metadata extraction and lineage tracking. Set up Microsoft SQL Server :::warning Who can do this? You wi", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 34500}}, {"content": "data extraction and lineage tracking. Set up Microsoft SQL Server :::warning Who can do this? You will probably need your Microsoft SQL Server administrator to run these commands - you may not have access yourself. Set up MicroStrategy Atlan supports the basic authentication method for fetching metadata from MicroStrategy. This method uses a username and password to fetch metadata. Set up MongoDB", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 34800}}, {"content": "data from MicroStrategy. This method uses a username and password to fetch metadata. Set up MongoDB Atlan supports the basic authentication method for fetching metadata from MongoDB. This method uses a [username and password](#create-database-user-in-mongodb) to fetch metadata. Set up Monte Carlo :::warning Who can do this? You will probably need your Monte Carlo [account owner](https://docs.getmo", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 35100}}, {"content": ":warning Who can do this? You will probably need your Monte Carlo [account owner](https://docs.getmontecarlo.com/docs/authorizationmanaged-roles-and-groups). Set up MySQL :::warning Who can do this? You will probably need your MySQL administrator to run these commands - you may not have access yourself. Set up on-premises database access In such cases you may want to decouple the extraction of met", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 35400}}, {"content": "elf. Set up on-premises database access In such cases you may want to decouple the extraction of metadata from its ingestion in Atlan. This approach gives you full control over your resources and metadata transfer to Atlan. Set up on-premises Databricks access In some cases you will not be able to expose your Databricks instance for Atlan to crawl and ingest metadata. For example, this may happen", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 35700}}, {"content": "xpose your Databricks instance for Atlan to crawl and ingest metadata. For example, this may happen when security requirements restrict access to sensitive, mission-critical data. Set up on-premises IBM Cognos Analytics access :::warning Who can do this? You will need access to a machine that can run Docker on-premises. You will also need your IBM Cognos Analytics instance details,. Set up on-prem", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 36000}}, {"content": "n Docker on-premises. You will also need your IBM Cognos Analytics instance details,. Set up on-premises Kafka access In some cases you won't be able to expose your Kafka instance for Atlan to crawl and ingest metadata. For example, this may happen when security requirements restrict access to sensitive, mission-critical data. Set up on-premises Looker access In some cases you won't be able to exp", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 36300}}, {"content": "tive, mission-critical data. Set up on-premises Looker access In some cases you won't be able to expose your Looker instance for Atlan to crawl and ingest metadata. For example, this may happen when security requirements restrict access to sensitive, mission-critical data. Set up on-premises Microsoft Azure Synapse Analytics miner access In some cases you will not be able to expose your Microsoft", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 36600}}, {"content": "ft Azure Synapse Analytics miner access In some cases you will not be able to expose your Microsoft Azure Synapse Analytics instance for Atlan to [mine query history from the Query Store](/apps/connectors/data-warehouses/microsoft-azure-synapse-analytics/how-tos/set-up-microsoft-azure-synapse-analytics). For example, this may happen when security requirements restrict access to sensitive, mission-", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 36900}}, {"content": "ics). For example, this may happen when security requirements restrict access to sensitive, mission-critical data. Set up on-premises Tableau access In some cases you may not be able to expose your Tableau instance for Atlan to crawl and ingest metadata. For example, this may happen when security requirements restrict access to sensitive, mission-critical data. Set up on-premises Teradata miner ac", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 37200}}, {"content": "quirements restrict access to sensitive, mission-critical data. Set up on-premises Teradata miner access In some cases you will not be able to expose your Teradata instance for Atlan to mine query history. For example, this may happen when security requirements restrict access to sensitive, mission-critical data. Set up on-premises ThoughtSpot access In some cases you will not be able to expose yo", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 37500}}, {"content": "critical data. Set up on-premises ThoughtSpot access In some cases you will not be able to expose your ThoughtSpot instance for Atlan to crawl and ingest metadata. For example, this may happen when security requirements restrict access to sensitive, mission-critical data. Set up Oracle :::warning Who can do this? You need your Oracle database administrator or a similar role to run these commands -", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 37800}}, {"content": "o can do this? You need your Oracle database administrator or a similar role to run these commands - you may not have access yourself. Set up PostgreSQL :::warning Who can do this? You will probably need your PostgreSQL administrator to run these commands - you may not have access yourself. Set up PrestoSQL Learn about set up prestosql. Set up Redash :::warning Who can do this? You will probably n", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 38100}}, {"content": "restoSQL Learn about set up prestosql. Set up Redash :::warning Who can do this? You will probably need your Redash administrator to complete the following steps - you may not have access yourself. Set up Redpanda Kafka Atlan supports the [S3 extraction method](/apps/connectors/messaging/on-premises-event-buses/how-tos/set-up-on-premises-kafka-access) for fetching metadata from Redpanda Kafka. Thi", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 38400}}, {"content": "-event-buses/how-tos/set-up-on-premises-kafka-access) for fetching metadata from Redpanda Kafka. This method uses Atlan's kafka-extractor tool to fetch metadata. Set up SAP HANA :::warning Who can do this? You will probably need your SAP HANA administrator to run these commands - you may not have access yourself. Set up Sisense Atlan supports the basic authentication method for fetching metadata f", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 38700}}, {"content": "cess yourself. Set up Sisense Atlan supports the basic authentication method for fetching metadata from Sisense. This method uses a username and password to fetch metadata. Set up Snowflake :::warning Who can do this? You need your Snowflake administrator to run these commands - you may not have access yourself. :::. Set up Soda :::warning Who can do this? You will need your [Soda Cloud administra", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 39000}}, {"content": "ess yourself. :::. Set up Soda :::warning Who can do this? You will need your [Soda Cloud administrator](https://docs.soda.io/soda-cloud/roles-and-rights.html) to complete these steps -. Set up Tableau :::warning Who can do this? You will probably need your Tableau administrator to run these commands - you may not have access yourself. Set up Teradata :::warning Who can do this? You will probably", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 39300}}, {"content": "s - you may not have access yourself. Set up Teradata :::warning Who can do this? You will probably need your Teradata administrator to run these commands - you may not have access yourself. SSO integration with PingFederate using SAML To use both IdP- and SP-initiated SSO, add both the URLs mentioned above. Star assets :::warning Who can do this? Anyone with access to Atlan - admin, member, or gu", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 39600}}, {"content": "ed above. Star assets :::warning Who can do this? Anyone with access to Atlan - admin, member, or guest user - can star assets. Supported connections for on-premises databases The metadata-extractor tool supports the following connection types. Tags and Metadata Management Complete guide to managing tags, classifications, and metadata in Atlan for effective data governance and organization. Troubl", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 39900}}, {"content": "tags, classifications, and metadata in Atlan for effective data governance and organization. Troubleshooting data models What are the known limitations of data models in Atlan? Troubleshooting Jira What fields are supported when creating tickets or requesting access? Troubleshooting lineage So you've crawled your source, and mined the queries, but lineage is missing. Why? update column metadata i", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 40200}}, {"content": "ve crawled your source, and mined the queries, but lineage is missing. Why? update column metadata in Google Sheets Once you've [connected Atlan with Google Sheets](/product/integrations/collaboration/spreadsheets/how-tos/integrate-atlan-with-google-sheets), you can import the column metadata for all your data assets in Atlan and make changes to them directly in Google Sheets. Update column metada", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 40500}}, {"content": "l your data assets in Atlan and make changes to them directly in Google Sheets. Update column metadata in Microsoft Excel Once you've [connected Atlan with Microsoft Excel](/product/integrations/collaboration/spreadsheets/how-tos/integrate-atlan-with-microsoft-excel), you can import the column metadata for all your data assets in Atlan and make changes to them directly in Microsoft Excel. Use the", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 40800}}, {"content": "ata for all your data assets in Atlan and make changes to them directly in Microsoft Excel. Use the filters menu You can refine the search for your assets in Atlan using the filters menu. Add filters to your asset search to find assets that are more relevant to you. view data models Once you have [ingested your ER model assets in Atlan](/product/capabilities/data-models/concepts/what-are-data-mode", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 41100}}, {"content": "ngested your ER model assets in Atlan](/product/capabilities/data-models/concepts/what-are-data-models), you can:. View query logs You can also view additional details and run status for each query and use filters to track specific queries. Query logs are persisted throughout the lifecycle of the Atlan instance for your organization. What are Power BI processes on the lineage graph? Note that proc", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 41400}}, {"content": "lan instance for your organization. What are Power BI processes on the lineage graph? Note that process entities may not have a counterpart entity in Microsoft Power BI. Consider these to be nodes that you can enrich with metadata to describe the process or relationship between two Microsoft Power BI assets. What does Atlan crawl from Amazon Athena? Atlan crawls and maps the following assets and p", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 41700}}, {"content": "I assets. What does Atlan crawl from Amazon Athena? Atlan crawls and maps the following assets and properties from Amazon Athena. What does Atlan crawl from Amazon DynamoDB? Atlan crawls and maps the following assets and properties from Amazon DynamoDB. Atlan also currently supports lineage between Amazon DynamoDB as a source to supported data warehouses as destinations, as enriched by Fivetran. W", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 42000}}, {"content": "Amazon DynamoDB as a source to supported data warehouses as destinations, as enriched by Fivetran. What does Atlan crawl from Amazon QuickSight? Atlan currently supports lineage for the Amazon QuickSight connector to the following data sources:. What does Atlan crawl from Amazon Redshift? Atlan crawls and maps the following assets and properties from Amazon Redshift. What does Atlan crawl from Ano", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 42300}}, {"content": "ls and maps the following assets and properties from Amazon Redshift. What does Atlan crawl from Anomalo? Once you have [integrated Anomalo](/apps/connectors/observability/anomalo/how-tos/integrate-anomalo), Atlan will receive webhook events when checks are executed in Anomalo. These checks will be cataloged in Atlan to create a relationship with existing assets using the association information f", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 42600}}, {"content": "cataloged in Atlan to create a relationship with existing assets using the association information from the check. What does Atlan crawl from Apache Spark/OpenLineage? Atlan maps the following assets and properties from Apache Spark/OpenLineage. Asset lineage support depends on the data sources that OpenLineage supports. What does Atlan crawl from AWS Glue? Atlan crawls and maps the following asse", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 42900}}, {"content": "OpenLineage supports. What does Atlan crawl from AWS Glue? Atlan crawls and maps the following assets and properties from AWS Glue. What does Atlan crawl from BigID? Reference guide for BigID metadata crawled by Atlan. What does Atlan crawl from Databricks? Atlan crawls and maps the following assets and properties from Databricks. What does Atlan crawl from DataStax Enterprise? What does Atlan cr", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 43200}}, {"content": "s and properties from Databricks. What does Atlan crawl from DataStax Enterprise? What does Atlan crawl from DataStax Enterprise? What does Atlan crawl from Domo? Atlan supports lineage for the following asset types:. What does Atlan crawl from Fivetran? Learn about what does atlan crawl from fivetran?. What does Atlan crawl from Google BigQuery? Atlan doesn't run any table scans. Atlan leverages", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 43500}}, {"content": "an?. What does Atlan crawl from Google BigQuery? Atlan doesn't run any table scans. Atlan leverages the table preview options from [Google BigQuery](https://cloud.google.com/bigquery/docs/best-practices-costs#preview-data) that enable you to view data for free and without affecting any quotas using the `tabledata.list` API. Hence, [table](/apps/connectors/data-warehouses/google-bigquery/references", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 43800}}, {"content": "the `tabledata.list` API. Hence, [table](/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery#tables) asset previews in Atlan are already cost-optimized. However, this doesn't apply to [views](/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery#views) and [materialized views](/apps/connectors/data-", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 44100}}, {"content": "es/what-does-atlan-crawl-from-google-bigquery#views) and [materialized views](/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery#materialized-views). What does Atlan crawl from Hive? Atlan crawls and maps the following assets and properties from Hive. What does Atlan crawl from Microsoft Azure Cosmos DB? Once you have [crawled Microsoft Azure Cos", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 44400}}, {"content": "ve. What does Atlan crawl from Microsoft Azure Cosmos DB? Once you have [crawled Microsoft Azure Cosmos DB](/apps/connectors/database/microsoft-azure-cosmos-db/how-tos/crawl-microsoft-azure-cosmos-db), you can [. What does Atlan crawl from Microsoft Azure Data Factory? Atlan crawls and maps the following assets and properties from Microsoft Azure Data Factory. What does Atlan crawl from Microsoft", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 44700}}, {"content": "owing assets and properties from Microsoft Azure Data Factory. What does Atlan crawl from Microsoft Azure Synapse Analytics? Atlan crawls and maps the following assets and properties from Microsoft Azure Synapse Analytics. Atlan also currently supports view-level lineage and cross-source lineage between BI tools and SQL sources. What does Atlan crawl from Microsoft SQL Server? Atlan crawls and map", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 45000}}, {"content": "ween BI tools and SQL sources. What does Atlan crawl from Microsoft SQL Server? Atlan crawls and maps the following assets and properties from Microsoft SQL Server. What does Atlan crawl from MongoDB? Atlan crawls and maps the following assets and properties from MongoDB. Atlan currently does not support lineage for MongoDB assets. What does Atlan crawl from MySQL? Atlan crawls and maps the follow", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 45300}}, {"content": "pport lineage for MongoDB assets. What does Atlan crawl from MySQL? Atlan crawls and maps the following assets and properties from MySQL. What does Atlan crawl from Oracle? Atlan crawls and maps the following assets and properties from Oracle. What does Atlan crawl from PostgreSQL? Atlan crawls and maps the following assets and properties from PostgreSQL. What does Atlan crawl from PrestoSQL? Atla", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 45600}}, {"content": "maps the following assets and properties from PostgreSQL. What does Atlan crawl from PrestoSQL? Atlan crawls and maps the following assets and properties from PrestoSQL. What does Atlan crawl from Qlik Sense Cloud? Atlan crawls and maps the following assets and properties from Qlik Sense Cloud. What does Atlan crawl from SAP ECC? What does Atlan crawl from SAP ECC? <Badge variant=\"preview\" text=\"P", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 45900}}, {"content": "does Atlan crawl from SAP ECC? What does Atlan crawl from SAP ECC? <Badge variant=\"preview\" text=\"Private Preview\" link=\"/get-started/references/product-release-stages#private-preview\" /> What does Atlan crawl from SAP S/4HANA? What does Atlan crawl from SAP S/4HANA? <Badge variant=\"preview\" text=\"Private Preview\" link=\"/get-started/references/product-release-stages#private-preview\" /> What does", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 46200}}, {"content": "Private Preview\" link=\"/get-started/references/product-release-stages#private-preview\" /> What does Atlan crawl from Sisense? Atlan crawls and maps the following assets and properties from Sisense. What does Atlan crawl from Snowflake? Atlan crawls and maps the following assets and properties from Snowflake. What does Atlan crawl from Soda? Atlan crawls datasets and then filters out all the datase", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 46500}}, {"content": "nowflake. What does Atlan crawl from Soda? Atlan crawls datasets and then filters out all the datasets without any checks. It then crawls the checks associated with each of the datasets with checks from Soda. These checks are cataloged in Atlan to create a relationship with existing assets using the association information from the dataset. What does Atlan crawl from Tableau? Atlan crawls and maps", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 46800}}, {"content": "association information from the dataset. What does Atlan crawl from Tableau? Atlan crawls and maps the following assets and properties from Tableau. What does Atlan crawl from Teradata? Atlan crawls and maps the following assets and properties from Teradata. What does Atlan crawl from Trino? Atlan crawls and maps the following assets and properties from Trino. What is included in the Jira integr", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 47100}}, {"content": "crawls and maps the following assets and properties from Trino. What is included in the Jira integration? With two of your most important workspaces connected, you can save time and improve the way you track issues for your data. What is included in the Microsoft Teams integration? With two of your most important workspaces connected, you can save time and improve the way you share data assets wi", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 47400}}, {"content": "most important workspaces connected, you can save time and improve the way you share data assets with your team. What is included in the Slack integration? Learn about the features and capabilities of the Slack integration with Atlan. What is the default permission for a glossary? By default, users can search and discover [glossaries](/product/capabilities/governance/glossary/concepts/what-is-a-g", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 47700}}, {"content": "can search and discover [glossaries](/product/capabilities/governance/glossary/concepts/what-is-a-glossary) in Atlan, irrespective of their user role. The rationale being that glossaries are meant to be accessible to all users who want to understand business context. You can define a [glossary policy](/product/capabilities/governance/custom-metadata/how-tos/control-access-metadata-data#glossary-p", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 48000}}, {"content": "cy](/product/capabilities/governance/custom-metadata/how-tos/control-access-metadata-data#glossary-policies) to control what users can do with glossary metadata and [create a persona](/product/capabilities/governance/access-control/how-tos/create-a-persona) to curate edit access. What is the difference between a Power BI data source and dataflow? Learn about what is the difference between a power", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 48300}}, {"content": "nce between a Power BI data source and dataflow? Learn about what is the difference between a power bi data source and dataflow?. What lineage does Atlan extract from Matillion? Atlan uses Matillion's metadata API to generate lineage associated with [Matillion connectors](https://www.matillion.com/connectors). This is particularly useful for creating lineage between different tools. What lineage d", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 48600}}, {"content": "onnectors). This is particularly useful for creating lineage between different tools. What lineage does Atlan extract from Microsoft Azure Data Factory? Atlan uses the [Microsoft Azure Data Factory REST API](https://learn.microsoft.com/en-us/rest/api/datafactory/operation-groups?view=rest-datafactory-2018-06-01). What lineage does Atlan extract from Microsoft Azure Synapse Analytics? Learn about w", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 48900}}, {"content": "y-2018-06-01). What lineage does Atlan extract from Microsoft Azure Synapse Analytics? Learn about what lineage does atlan extract from microsoft azure synapse analytics?. What lineage does Atlan extract from Microsoft Power BI? This document helps you understand how Atlan generates lineage to upstream SQL sources for your Microsoft Power BI assets using a custom query parser, and the steps you ca", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 49200}}, {"content": "eam SQL sources for your Microsoft Power BI assets using a custom query parser, and the steps you can take while developing reports and dashboards in Microsoft Power BI to create seamless lineage generation. When does Atlan become a personal data processor or subprocessor? Atlan personnel do not have access to any customer instance unless specifically provided by the customer. Accordingly, in the", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 49500}}, {"content": "e access to any customer instance unless specifically provided by the customer. Accordingly, in the event that a customer instance contains personal data and Atlan personnel are provided access to that instance, Atlan may act as a personal data processor. In addition, depending on whether the customer is a data controller or processor, Atlan may act as a data processor or subprocessor, respectivel", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 49800}}, {"content": "er is a data controller or processor, Atlan may act as a data processor or subprocessor, respectively. Why do I only see tables from the same schema to join from in a visual query? When [creating a visual query](/product/capabilities/insights/how-tos/query-data), Atlan recommends that you do not select a database or schema in the editor context. Leaving both blank will allow you to discover more t", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 50100}}, {"content": "ect a database or schema in the editor context. Leaving both blank will allow you to discover more tables to join in the Visual Query Builder. Why does the description from Salesforce not show up in Atlan? Atlan supports extracting and displaying description metadata for your [Salesforce objects](/apps/connectors/crm/salesforce/references/what-does-atlan-crawl-from-salesforce). Why is lineage avai", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 50400}}, {"content": "pps/connectors/crm/salesforce/references/what-does-atlan-crawl-from-salesforce). Why is lineage available for table level but not column level? The home icon on top of any asset on the [lineage graph](/product/capabilities/lineage/how-tos/view-lineage) indicates the current asset in focus. The lineage view will be different based on the asset you're viewing. To view column-level lineage for [suppo", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 50700}}, {"content": "ge view will be different based on the asset you're viewing. To view column-level lineage for [supported sources](/product/connections/references/supported-sources), click **view columns** and then select a column to view data flows for that particular asset. Workflows and Data Processing Everything about managing data workflows, understanding lineage generation, and optimizing data processing pip", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 51000}}, {"content": "about managing data workflows, understanding lineage generation, and optimizing data processing pipelines in Atlan.", "metadata": {"source_url": "https://docs.atlan.com/tags/data", "title": "255 docs tagged with \"data\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 51300}}, {"content": "ColumnProcess \u00b6 Instance of a column-level lineage process in Atlan. Inputs and outputs of these processes should be columns. Complete reference This is a complete reference for the ColumnProcess object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. ColumnProcess inherits its attributes and relationships from these other types: classDiagram direction RL class ColumnProcess link ColumnProcess \"../columnprocess\" class Process link Process \"../process\" Process <|-- Col", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ocess link ColumnProcess \"../columnprocess\" class Process link Process \"../process\" Process <|-- ColumnProcess : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Process : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from ColumnProcess 's su", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": ": extends Properties \u00b6 Inherited properties These attributes are inherited from ColumnProcess 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset C", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in mil", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "leting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "o this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's nam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "et. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "es \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementTy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "itle for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON objec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "mber of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnoma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVers", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ich this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLast", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "och) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "n of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who execut", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "s dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "unGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (fals", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ad ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "at materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was star", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "tDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 H", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ast run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "dated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "me \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "tDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "tMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "st of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "nt sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "itorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPolicie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "nte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "da check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "tus of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "t used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or no", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "rder for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": ". popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ce_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a differen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceRea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "urce_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "et the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "nique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details sub", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "sers who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of grou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "he description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) additionalEtlContext \u00b6 TBC ast \u00b6 TBC code \u00b6 TBC sql \u00b6 TBC Relationships \u00b6 Inherited r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "asset types.) additionalEtlContext \u00b6 TBC ast \u00b6 TBC code \u00b6 TBC sql \u00b6 TBC Relationships \u00b6 Inherited relationships These relationships are inherited from ColumnProcess 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "ing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Lat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelatio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos adfActivity ( AdfActivity ) \u00b6 TBC airflowTasks ( A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "userDefRelationshipTos user_def_relationship_tos adfActivity ( AdfActivity ) \u00b6 TBC airflowTasks ( AirflowTask ) \u00b6 TBC columnProcesses ( ColumnProcess ) \u00b6 TBC fivetranConnector ( FivetranConnector ) \u00b6 TBC inputs ( Catalog ) \u00b6 TBC matillionComponent ( MatillionComponent ) \u00b6 TBC outputs ( Catalog ) \u00b6 TBC powerBIDataflow ( PowerBIDataflow ) \u00b6 TBC sparkJobs ( SparkJob ) \u00b6 TBC These relationships are s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "TBC powerBIDataflow ( PowerBIDataflow ) \u00b6 TBC sparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of ColumnProcess (and all of its subtypes). process ( Process ) \u00b6 Process in which this task exists. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/columnprocess/", "title": "ColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "TableauDashboard \u00b6 Instance of a Tableau dashboard in Atlan. These are collections of several views, letting you compare a variety of data simultaneously. Complete reference This is a complete reference for the TableauDashboard object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "an exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. TableauDashboard inherits its attributes and relationships from these other types: classDiagram direction RL class TableauDashboard link TableauDashboard \"../tableaudashboard\" class Tablea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Diagram direction RL class TableauDashboard link TableauDashboard \"../tableaudashboard\" class Tableau { <<abstract>> } link Tableau \"../tableau\" Tableau <|-- TableauDashboard : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Tableau : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Ca", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "/catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from TableauDashboard 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique iden", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "eauDashboard 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs cus", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that cr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "d, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "st updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classification", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the sa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset ty", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "sets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ed. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that cont", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "eld that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ngified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "EnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "s. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last creat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "bLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "he user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "t in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "n \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "et in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "t materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "t materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta'", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "sset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 F", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "roxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that las", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "sset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "erities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "o incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorSc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "orQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "tors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags atta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "LastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "iptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "on through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled fro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "nique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ds linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "he UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseco", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "hronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "r display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "e data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "bed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryCo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "rce. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the mo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "d_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a butto", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "ons at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "pdated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "tarred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of TableauDashboard (and all of its subtypes). projectHierarchy \u00b6 List of top-level projects and their nested child projects", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "all of its subtypes). projectHierarchy \u00b6 List of top-level projects and their nested child projects. projectQualifiedName \u00b6 Unique name of the project in which this dashboard exists. siteQualifiedName \u00b6 Unique name of the site in which this dashboard exists. topLevelProjectQualifiedName \u00b6 Unique name of the top-level project in which this dashboard exists. workbookQualifiedName \u00b6 Unique name of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "me of the top-level project in which this dashboard exists. workbookQualifiedName \u00b6 Unique name of the workbook in which this dashboard exists. Relationships \u00b6 Inherited relationships These relationships are inherited from TableauDashboard 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicatio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "ms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "roducts for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "efRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These rela", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "esses from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of TableauDashboard (and all of its subtypes). workbook ( TableauWorkbook ) \u00b6 Workbook in which this dashboard exists. worksheets ( TableauWorksheet ) \u00b6 Worksheets that use this dashboard. Was this page helpful? Thanks for your feedback! Thanks for your feedback!", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "that use this dashboard. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/tableaudashboard/", "title": "TableauDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "Referenceable \u00b6 Base class for everything in Atlan. Complete reference This is a complete reference for the Referenceable object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Referenceable is the root of inheritance, and has no supertypes itself. Properties \u00b6 These attributes are specific to instances of Referenceable (and all of its subtypes). typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "s asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the ch", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "s atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "t. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. Was this page helpful? Thanks for your feedback! Thanks", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "e unique across all assets of the same type. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/referenceable/", "title": "Referenceable - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Query \u00b6 Instance of a query in Atlan. Complete reference This is a complete reference for the Query object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Query inherits i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ep use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Query inherits its attributes and relationships from these other types: classDiagram direction RL class Query link Query \"../query\" class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- Query : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SQL : extends class Asset { <<abstract>> } l", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "{ <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from Query 's supertypes (shown above): typeName \u00b6 Type of this asset. guid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "attributes are inherited from Query 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a dif", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "sinessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "tus on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "nked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique acro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "uncementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "me of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "aloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ed Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is mat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ast ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "readId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated fr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notificat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "zed this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "DbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "t materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job tha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "etDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that mate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically ever", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "hat materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT wor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "UniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ames attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "set. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whet", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "es \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "his asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUID", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "ciated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetT", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ty from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certifica", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "\u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "le name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "pe dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "s \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was las", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "DataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "L \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "a insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_po", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceRe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": ") Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "pUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "tal cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "n SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "r this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) calculationViewName \u00b6 Simple name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation vie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "culation view in which this SQL asset exists, or empty if it does not exist within a calculation view. calculationViewQualifiedName \u00b6 Unique name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. databaseName \u00b6 Simple name of the database in which this SQL asset exists, or empty if it does not exist within a database. databaseQualified", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "e in which this SQL asset exists, or empty if it does not exist within a database. databaseQualifiedName \u00b6 Unique name of the database in which this SQL asset exists, or empty if it does not exist within a database. isProfiled \u00b6 Whether this asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch) at which this asset was last profiled, in milliseconds. queryCount \u00b6 Number of ti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "dAt \u00b6 Time (epoch) at which this asset was last profiled, in milliseconds. queryCount \u00b6 Number of times this asset has been queried. queryCountUpdatedAt \u00b6 Time (epoch) at which the query count was last updated, in milliseconds. queryUserCount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map of unique users who have queried this asset to the number of times they have queried", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ryUserMap \u00b6 Map of unique users who have queried this asset to the number of times they have queried it. schemaName \u00b6 Simple name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. schemaQualifiedName \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. tableName \u00b6 Simple name of the table in which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "s, or empty if it does not exist within a schema. tableName \u00b6 Simple name of the table in which this SQL asset exists, or empty if it does not exist within a table. tableQualifiedName \u00b6 Unique name of the table in which this SQL asset exists, or empty if it does not exist within a table. viewName \u00b6 Simple name of the view in which this SQL asset exists, or empty if it does not exist within a view.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "Simple name of the view in which this SQL asset exists, or empty if it does not exist within a view. viewQualifiedName \u00b6 Unique name of the view in which this SQL asset exists, or empty if it does not exist within a view. These attributes are specific to instances of Query (and all of its subtypes). collectionQualifiedName \u00b6 TBC defaultDatabaseQualifiedName \u00b6 TBC defaultSchemaQualifiedName \u00b6 TBC i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "collectionQualifiedName \u00b6 TBC defaultDatabaseQualifiedName \u00b6 TBC defaultSchemaQualifiedName \u00b6 TBC isPrivate \u00b6 TBC isSqlSnippet \u00b6 TBC isVisualQuery \u00b6 TBC longRawQuery \u00b6 TBC parentQualifiedName \u00b6 TBC rawQuery \u00b6 TBC rawQueryText \u00b6 TBC variablesSchemaBase64 \u00b6 TBC visualBuilderSchemaBase64 \u00b6 TBC Relationships \u00b6 Inherited relationships These relationships are inherited from Query 's supertypes: anomalo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "nships \u00b6 Inherited relationships These relationships are inherited from Query 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "g this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "ract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipF", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "erDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "nted by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 TBC dbtTests ( DbtTest ) \u00b6 TBC sqlDBTSources ( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC These relationships", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "btTest ) \u00b6 TBC sqlDBTSources ( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC These relationships are specific to instances of Query (and all of its subtypes). columns ( Column ) \u00b6 TBC parent ( Namespace ) \u00b6 TBC tables ( Table ) \u00b6 TBC views ( View ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "edback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/query/", "title": "Query - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "SisenseDashboard \u00b6 Instance of a Sisense dashboard in Atlan. These allow you to place multiple widgets on a single page. Complete reference This is a complete reference for the SisenseDashboard object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. SisenseDashboard inherits its attributes and relationships from these other types: classDiagram direction RL class SisenseDashboard link SisenseDashboard \"../sisensedashboard\" class Sisense { <<abstract>> } link Sisense \".", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Dashboard link SisenseDashboard \"../sisensedashboard\" class Sisense { <<abstract>> } link Sisense \"../sisense\" Sisense <|-- SisenseDashboard : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Sisense : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceabl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "s class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from SisenseDashboard 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classificat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata Fo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "eHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncom", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "rent name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Uni", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ed, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of gro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "t's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detail", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last upd", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ouncement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppli", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "icationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality fr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "tus of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the sour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "\u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "h \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "t which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from whi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "sGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that material", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "astRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "\u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readab", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "f the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that mater", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "tal duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (ep", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "s scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "ta for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 N", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "btWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident sta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "dent severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "his asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaChe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "f policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "RunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ther detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "essible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "escription \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lin", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "t \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowCha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "table \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "\u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroup", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset wa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "nit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "n image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "dList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ds source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "s a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "erList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starre", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "ystem. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 D", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "f this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of SisenseDashboard (and all of its subtypes). sisenseDashboardFolderQualifiedName \u00b6 Unique name of the folder in which this dashboard exists. sisenseDashboar", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "boardFolderQualifiedName \u00b6 Unique name of the folder in which this dashboard exists. sisenseDashboardWidgetCount \u00b6 Number of widgets in this dashboard. Relationships \u00b6 Inherited relationships These relationships are inherited from SisenseDashboard 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. ap", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "\u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubj", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationsh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "ms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "kJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC Th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": ") \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of SisenseDashboard (and all of its subtypes). sisenseDatamodels ( SisenseDatamodel ) \u00b6 TBC sisenseFolder ( SisenseFolder ) \u00b6 Folder in which this dashboard exists. sisenseWidgets ( SisenseWidget ) \u00b6 Widgets that exist in this dashboard. Was this page help", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "exists. sisenseWidgets ( SisenseWidget ) \u00b6 Widgets that exist in this dashboard. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensedashboard/", "title": "SisenseDashboard - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "On this page Once you have configured Tableau , you can establish a connection between Atlan and Tableau. (If you are also using a private network for Tableau, you will need to set that up first , too.) To crawl metadata from Tableau, review the order of operations and then complete the following steps. Select the source \u200b To select Tableau as your source: In the top right of any screen, navigate", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eps. Select the source \u200b To select Tableau as your source: In the top right of any screen, navigate to New and then click New Workflow . From the list of packages, select Tableau Assets and click on Setup Workflow . Provide credentials \u200b In Direct extraction, Atlan connects to Tableau and crawls metadata directly. In Offline extraction, you need to first extract metadata yourself and make it avail", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "adata directly. In Offline extraction, you need to first extract metadata yourself and make it available in S3 . In Agent extraction, Atlan\u2019s secure agent executes metadata extraction within the organization's environment. Direct extraction method \u200b To enter your Tableau credentials: For Host Name , enter the host name of your Tableau Online or Tableau Server instance (or the private DNS name if y", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "enter the host name of your Tableau Online or Tableau Server instance (or the private DNS name if your Tableau Server instance uses an SSL certificate ). For Port , enter the port number of your Tableau instance. For Authentication , choose how you would like to connect to Tableau: For Basic authentication, enter the Username and Password you use to log in to Tableau. For Personal Access Token au", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "tication, enter the Username and Password you use to log in to Tableau. For Personal Access Token authentication, enter the Personal Access Token Name and Personal Access Token Value you generated _Create_a_personal_access_token). For JWT Bearer authentication, enter your Tableau Server username or Tableau Online email address for Username , and the Client ID , Secret ID , and Secret Value you cop", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "Tableau Online email address for Username , and the Client ID , Secret ID , and Secret Value you copied from the connected app in Tableau. (Optional) For SSL , keep the default Enabled to use HTTPS or click Disabled to use HTTP. For Site , enter the name of the site you want to crawl. (If left blank, the default site will be used.) danger If you are using Tableau Online, the site is required for A", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": ", the default site will be used.) danger If you are using Tableau Online, the site is required for Atlan to authenticate properly. (Optional) For SSL certificate , this is only required if your Tableau Server instance uses a self-signed or an internal CA SSL certificate , paste a supported SSL certificate in the recommended format . At the bottom of the form, click the Test Authentication button t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ficate in the recommended format . At the bottom of the form, click the Test Authentication button to confirm connectivity to Tableau using these details. When successful, at the bottom of the screen click the Next button. Offline extraction method \u200b Atlan also supports the offline extraction method for fetching metadata from Tableau. This method uses Atlan's tableau-extractor tool to fetch metada", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "for fetching metadata from Tableau. This method uses Atlan's tableau-extractor tool to fetch metadata. You will need to first extract the metadata yourself and then make it available in S3 . To enter your S3 details: For Bucket name , enter the name of your S3 bucket. For Bucket prefix , enter the S3 prefix under which all the metadata files exist. These include dashboards/result-0.json , workboo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "S3 prefix under which all the metadata files exist. These include dashboards/result-0.json , workbooks/result-0.json , and so on. (Optional) For Bucket region , enter the name of the S3 region. When complete, at the bottom of the screen, click Next . Agent extraction method \u200b Atlan supports using a Secure Agent for fetching metadata from Tableau. To use a Secure Agent, follow these steps: Select t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "Secure Agent for fetching metadata from Tableau. To use a Secure Agent, follow these steps: Select the Agent tab. Configure the Tableau data source by adding the secret keys for your secret store. For details on the required fields, refer to the Direct extraction section. Complete the Secure Agent configuration by following the instructions in the How to configure Secure Agent for workflow executi", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "onfiguration by following the instructions in the How to configure Secure Agent for workflow execution guide. Click Next after completing the configuration. Configure the connection \u200b To complete the Tableau connection configuration: Provide a Connection Name that represents your source environment. For example, you might want to use values like production , development , gold , or analytics . (Op", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "For example, you might want to use values like production , development , gold , or analytics . (Optional) To change the users able to manage this connection, change the users or groups listed under Connection Admins . danger If you do not specify any user or group, nobody will be able to manage the connection - not even admins. Configure the crawler \u200b Before running the Tableau crawler, you can", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "e connection - not even admins. Configure the crawler \u200b Before running the Tableau crawler, you can further configure it. On the Metadata page, you can override the defaults for any of these options: To select the Tableau projects you want to include in crawling, click Include Projects . (This will default to all assets, if none are specified.) To select the Tableau projects you want to exclude fr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "default to all assets, if none are specified.) To select the Tableau projects you want to exclude from crawling, click Exclude Projects . (This will default to no assets, if none are specified.) To have the crawler ignore Tableau projects based on a naming convention, specify a regular expression in the Exclude Projects Regex field. To check for any permissions or other configuration issues before", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "the Exclude Projects Regex field. To check for any permissions or other configuration issues before running the crawler, click Preflight checks . Did you know? If a project appears in both the include and exclude filters, the exclude filter takes precedence. (The Exclude Projects Regex also takes precedence.) Configure advanced controls \u200b Before running the Tableau crawler, you can also configure", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "recedence.) Configure advanced controls \u200b Before running the Tableau crawler, you can also configure advanced controls for the crawler. On the Advanced page, you can override the defaults for any of these options: For Alternate Host URL , enter the protocol and host name to be used for viewing assets directly in Tableau. For Crawl Unpublished Worksheets and Dashboards , click Yes to enable crawlin", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "s directly in Tableau. For Crawl Unpublished Worksheets and Dashboards , click Yes to enable crawling hidden worksheets and dashboards or No to skip crawling them. For Hidden Datasource Fields , click Yes to enable crawling hidden datasource fields or No to skip crawling them. Crawl embedded dashboards: Embedded dashboard here means linking or displaying a dashboard inside another dashboard by pro", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "rds: Embedded dashboard here means linking or displaying a dashboard inside another dashboard by providing a link to the dashboard in a Web Page item of the embedding dashboard. Click Yes to enable relationships between different embedded dashboards. Click No to skip creating relationships between embedded dashboards. Run the crawler \u200b To run the Tableau crawler, after completing the steps above:", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "mbedded dashboards. Run the crawler \u200b To run the Tableau crawler, after completing the steps above: You can either: To run the crawler once immediately, at the bottom of the screen, click the Run button. To schedule the crawler to run hourly, daily, weekly, or monthly, at the bottom of the screen, click the Schedule Run button. Once the crawler has completed running, you will see the assets in Atl", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "lick the Schedule Run button. Once the crawler has completed running, you will see the assets in Atlan's asset page! \ud83c\udf89 Select the source Provide credentials Configure the connection Configure the crawler Configure advanced controls Run the crawler", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/how-tos/crawl-tableau", "title": "Crawl Tableau | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "LookerQuery \u00b6 Deprecated. Complete reference This is a complete reference for the LookerQuery object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. LookerQuery inherits i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. LookerQuery inherits its attributes and relationships from these other types: classDiagram direction RL class LookerQuery link LookerQuery \"../lookerquery\" class Looker { <<abstract>> } link Looker \"../looker\" Looker <|-- LookerQuery : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Looker : extends class Catal", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "LookerQuery : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Looker : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties Thes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "nceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from LookerQuery 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snip", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "(1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "set. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "n-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. Thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "kground tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "cement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qual", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "UpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "lo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Count \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "C assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "aterialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "d \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ch the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "erialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "btJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "t (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queue", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "able total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "JobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "b that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "hat materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "adable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "et. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "th this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcInc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "etMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attac", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "sset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "McMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of da", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionNam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "tificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType conn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "nnector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). do", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "y. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "s a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last ru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "peration that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "d this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "et. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total coun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "fferent name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular quer", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "centUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordLis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "th extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedB", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "e (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a differen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ed by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to ins", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "d in a collection. (This is only used for certain asset types.) These attributes are specific to instances of LookerQuery (and all of its subtypes). fields \u00b6 Deprecated. sourceDefinition \u00b6 Deprecated. sourceDefinitionDatabase \u00b6 Deprecated. sourceDefinitionSchema \u00b6 Deprecated. Relationships \u00b6 Inherited relationships These relationships are inherited from LookerQuery 's supertypes: anomaloChecks ( A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "ed relationships These relationships are inherited from LookerQuery 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "et. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProdu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "atest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data prod", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "ionshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provide", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "hich this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFrom", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "is asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of LookerQuery (and all of its subtypes). looks ( LookerLook ) \u00b6 Deprecated. model ( LookerModel ) \u00b6 Deprecated. tiles ( LookerTile ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "pes). looks ( LookerLook ) \u00b6 Deprecated. model ( LookerModel ) \u00b6 Deprecated. tiles ( LookerTile ) \u00b6 Deprecated. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/lookerquery/", "title": "LookerQuery - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "Manage API assets \u00b6 Operations on API assets (specs, paths, objects, queries, fields). Example OpenAPI crawler For a jump-start, read more about an example for crawling OpenAPI specifications , or grab the code from: atlanhq/atlan-java-samples In general, these should be: Created in top-down order (connection, then spec/object/query, then path/field) Deleted in bottom-up order (paths/fields, then", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "connection, then spec/object/query, then path/field) Deleted in bottom-up order (paths/fields, then specs/objects/queries, then connections) 1 erDiagram Connection ||--o{ APISpec : contains APISpec ||--o{ APIPath : contains Connection ||--o{ APIObject : contains Connection ||--o{ APIQuery : contains APIObject ||--o{ APIField : contains APIQuery ||--o{ APIField : contains APIObject o|..o{ APIField", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "APIObject ||--o{ APIField : contains APIQuery ||--o{ APIField : contains APIObject o|..o{ APIField : refers APIObject o|..o{ APIQuery : refers Asset structure \u00b6 Connection \u00b6 7.0.0 4.0.0 An API connection requires a name and qualifiedName . For creation, specific settings are also required to distinguish it as an API connection rather than another type of connection. In addition, at least one of a", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "guish it as an API connection rather than another type of connection. In addition, at least one of adminRoles , adminGroups , or adminUsers must be provided. Java Python Kotlin Raw REST API Create an API connection 1 2 3 4 5 6 7 8 9 10 String adminRoleGuid = client . getRoleCache (). getIdForName ( \"$admin\" ); // (1) Connection connection = Connection . creator ( // (2) \"api-connection\" , // (3) A", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "\"$admin\" ); // (1) Connection connection = Connection . creator ( // (2) \"api-connection\" , // (3) AtlanConnectorType . API , // (4) List . of ( adminRoleGuid ), // (5) List . of ( \"group2\" ), // (6) List . of ( \"jsmith\" )) // (7) . build (); AssetMutationResponse response = connection . save ( client ); // (8) String connectionQualifiedName = response . getCreatedAssets (). get ( 0 ). getQualifie", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "nt ); // (8) String connectionQualifiedName = response . getCreatedAssets (). get ( 0 ). getQualifiedName (); // (9) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. Provide a human-readable name for your connection, such as production or development . Set the type of connection to API", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "able name for your connection, such as production or development . Set the type of connection to API. List the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adm", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "at the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , ad", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "nnection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "inRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create an API connection 1 2 3 4 5 6 7 8 9 10 11", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ou'd probably want to do some null checking first.) Create an API connection 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import Connection , APISpec , APIPath , APIObject , APIQuery , APIField from pyatlan.model.enums import AtlanConnectorType , APIQueryParamTypeEnum client = AtlanClient () admin_role_guid = client . role_cache .", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "onnectorType , APIQueryParamTypeEnum client = AtlanClient () admin_role_guid = client . role_cache . get_id_for_name ( \"$admin\" ) # (1) connection = Connection . creator ( # (2) client = client , # (3) name = \"api-connection\" , # (4) connector_type = AtlanConnectorType . API , # (5) admin_roles = [ admin_role_guid ], # (6) admin_groups = [ \"group2\" ], # (7) admin_users = [ \"jsmith\" ] # (8) ) respo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "admin_role_guid ], # (6) admin_groups = [ \"group2\" ], # (7) admin_users = [ \"jsmith\" ] # (8) ) response = client . asset . save ( connection ) # (9) connection_qualified_name = response . assets_created ( asset_type = Connection )[ 0 ] . qualified_name # (10) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. You must provide a client instance. Provide a human-readable name for your connection, such as production or development . Set the type of connection to API. List the workspace roles that should be able to administer the connection (or None if none). All users with that worksp", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "roles that should be able to administer the connection (or None if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of admin_roles , admin_groups , or admin_users must be provided. List the group names that can administer this connection (or None if none).", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "_users must be provided. List the group names that can administer this connection (or None if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of admin_roles , admin_groups , or admin_users must be provided. List the user names that can administer this connection (or None if non", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "dmin_users must be provided. List the user names that can administer this connection (or None if none). Note that the values here are the username(s) of the user(s). At least one of admin_roles , admin_groups , or admin_users must be provided. Actually call Atlan to create the connection. Retrieve the qualified_name for use in subsequent creation calls. (You'd probably want to do some null checkin", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "he qualified_name for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create an API connection 1 2 3 4 5 6 7 8 9 10 val adminRoleGuid = client . roleCache . getIdForName ( \"\\ $ admin \" ); // (1) val connection = Connection . creator ( // (2) \"api-connection\" , // (3) AtlanConnectorType . API , // (4) listOf ( adminRoleGuid ), // (5) listOf ( \"group2\" ), // (", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "// (3) AtlanConnectorType . API , // (4) listOf ( adminRoleGuid ), // (5) listOf ( \"group2\" ), // (6) listOf ( \"jsmith\" )) // (7) . build () val response = connection . save ( client ) // (8) val connectionQualifiedName = response . createdAssets [ 0 ] . qualifiedName // (9) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "he admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. Provide a human-readable name for your connection, such as production or development . Set the type of connection to API. List the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current a", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "e able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the group names that can administer this connection (or null if none). All users within that", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "d. List the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the user names that can administer this connection (or null if none). Note that the values", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ed. List the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retriev", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "e asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \"entities\" : [ { \"typeName\" : \"Connection\" , // (1) \"attributes\" : { \"name\" : \"api-connection\" , // (2", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ntities\" : [ { \"typeName\" : \"Connection\" , // (1) \"attributes\" : { \"name\" : \"api-connection\" , // (2) \"connectorName\" : \"api\" , // (3) \"qualifiedName\" : \"default/api/123456789\" , // (4) \"category\" : \"API\" , // (5) \"adminRoles\" : [ // (6) \"e7ae0295-c60a-469a-bd2c-fb903943aa02\" ], \"adminGroups\" : [ // (7) \"group2\" ], \"adminUsers\" : [ // (8) \"jsmith\" ] } } ] } The typeName must be exactly Connection", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "(7) \"group2\" ], \"adminUsers\" : [ // (8) \"jsmith\" ] } } ] } The typeName must be exactly Connection . Human-readable name for your connection, such as production or development . The connectorName must be exactly api . The qualifiedName should follow the pattern: default/api/<epoch> , where <epoch> is the time in milliseconds at which the connection is being created. The category must be API . Lis", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "is the time in milliseconds at which the connection is being created. The category must be API . List any workspace roles that can administer this connection. All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be pro", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any groups that can administer this connection. All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any users", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any users that can administer this connection. Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Access policies Atlan creates the policies that grant access to a connection, including the ability to retrieve the connection", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "tes the policies that grant access to a connection, including the ability to retrieve the connection and to create assets within it, asynchronously. It can take several seconds (even up to approximately 30 seconds) before these are in place after creating the connection. You may therefore need to wait before you'll be able to create the assets below within the connection. To confirm access, retrie", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "it before you'll be able to create the assets below within the connection. To confirm access, retrieve the connection after it has been created. The SDKs' retry loops will automatically retry until the connection can be successfully retrieved. At that point, your API token has permission to create the other assets. Note: if you are reusing an existing connection rather than creating one via your A", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "he other assets. Note: if you are reusing an existing connection rather than creating one via your API token, you must give your API token a persona that has access to that connection. Otherwise all attempts to create, read, update, or delete assets within that connection will fail due to a lack of permissions. APISpec \u00b6 2.0.0 4.0.0 An API spec requires a name and a qualifiedName . For creation, y", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "permissions. APISpec \u00b6 2.0.0 4.0.0 An API spec requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the spec. Java Python Kotlin Raw REST API Create an API spec 11 12 13 14 15 16 APISpec apiSpec = APISpec . creator ( // (1) \"api-spec\" , // (2) connectionQualifiedName ) // (3) . build (); AssetMutationResponse response = apiS", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "pi-spec\" , // (2) connectionQualifiedName ) // (3) . build (); AssetMutationResponse response = apiSpec . save ( client ); // (4) apiSpec = response . getResult ( apiSpec ); // (5) Build up the minimum request to create a spec. Provide a human-readable name for your spec. Provide the qualifiedName of the connection for this spec. Actually call Atlan to create the spec. Because this operation will", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "f the connection for this spec. Actually call Atlan to create the spec. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created spec for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create an API spec 17 18 19 20 21 22 apiSpec = APISpec . creator ( # (1) name =", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ull checking first.) Create an API spec 17 18 19 20 21 22 apiSpec = APISpec . creator ( # (1) name = \"api-spec\" , # (2) connection_qualified_name = connection_qualified_name # (3) ) response = client . asset . save ( apiSpec ) # (4) spec_qualified_name = response . assets_created ( asset_type = APISpec )[ 0 ] . qualified_name # (5) Build up the minimum request to create an spec. Provide a human-re", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "pec )[ 0 ] . qualified_name # (5) Build up the minimum request to create an spec. Provide a human-readable name for your spec. Provide the qualified_name of the connection for this spec. Actually call Atlan to create the spec. Retrieve the created spec for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create an API spec 11 12 13 14 15 16 var apiSpec = APIS", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "obably want to do some null checking first.) Create an API spec 11 12 13 14 15 16 var apiSpec = APISpec . creator ( // (1) \"api-spec\" , // (2) connectionQualifiedName ) // (3) . build () val response = apiSpec . save ( client ) // (4) apiSpec = response . getResult ( apiSpec ) // (5) Build up the minimum request to create a spec. Provide a human-readable name for your spec. Provide the qualifiedNa", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "nimum request to create a spec. Provide a human-readable name for your spec. Provide the qualifiedName of the connection for this spec. Actually call Atlan to create the spec. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created spec for use in subsequent creation calls. (You'd probably want to do so", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "enant. Retrieve the created spec for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 { \"entities\" : [ { \"typeName\" : \"APISpec\" , // (1) \"attributes\" : { \"name\" : \"api-spec\" , // (2) \"qualifiedName\" : \"default/api/123456789/api-spec\" , // (3) \"connectionQualifiedName\" : \"default/api/123456789\" , // (4)", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "fault/api/123456789/api-spec\" , // (3) \"connectionQualifiedName\" : \"default/api/123456789\" , // (4) \"connectorName\" : \"api\" // (5) } } ] } The typeName must be exactly APISpec . Human-readable name for your spec. The qualifiedName should follow the pattern: default/api/<epoch>/<specName> , where default/api/<epoch> is the qualifiedName of the connection for this spec and <specName> is the name of", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "ault/api/<epoch> is the qualifiedName of the connection for this spec and <specName> is the name of this spec. The connectionQualifiedName must be the exact qualifiedName of the connection for this spec. The connectorName must be exactly api . APIPath \u00b6 2.0.0 4.0.0 An API path requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the path and the apiSpec the path is in. If the name of your path does no give the URI of the endpoint it represents, be sure to also specify the apiPathRawURI . Java Python Kotlin Raw REST API Create an API path 18 19 20 21 22 APIPath apiPath = APIPath . creator ( // (1) \"/api/path\" , // (2) a", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "reate an API path 18 19 20 21 22 APIPath apiPath = APIPath . creator ( // (1) \"/api/path\" , // (2) apiSpec ) // (3) . build (); AssetMutationResponse response = apiPath . save ( client ); // (4) Build up the minimum request to create a path. Provide the unique endpoint URI for this path. (The SDK will also use this by default as the name for the path. If you want a different name, simply add a .na", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "ll also use this by default as the name for the path. If you want a different name, simply add a .name() call onto the builder with your preferred name.) Provide the spec for this path. If you did not already have the object, you could also use APISpec.refByGuid() with the GUID of the spec, or APISpec.refByQualifiedName() with the qualifiedName of the spec. Actually call Atlan to create the path.", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ec.refByQualifiedName() with the qualifiedName of the spec. Actually call Atlan to create the path. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create an API path 23 24 25 26 27 apiPath = APIPath . creator ( # (1) path_raw_uri = \"/api/path\" , # (2) spec_qualified_name = spec_qualified_name # (3) ) response = cli", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "path_raw_uri = \"/api/path\" , # (2) spec_qualified_name = spec_qualified_name # (3) ) response = client . asset . save ( apiPath ) # (4) Build up the minimum request to create an path. Provide the unique endpoint URI for this path. Provide the qualified_name of the API path. Actually call Atlan to create the path. Create an API path 18 19 20 21 22 val apiPath = APIPath . creator ( // (1) \"/api/pat", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "reate the path. Create an API path 18 19 20 21 22 val apiPath = APIPath . creator ( // (1) \"/api/path\" , // (2) apiSpec ) // (3) . build () val response = apiPath . save ( client ) // (4) Build up the minimum request to create a path. Provide the unique endpoint URI for this path. (The SDK will also use this by default as the name for the path. If you want a different name, simply add a .name() ca", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "use this by default as the name for the path. If you want a different name, simply add a .name() call onto the builder with your preferred name.) Provide the spec for this path. If you did not already have the object, you could also use APISpec.refByGuid() with the GUID of the spec, or APISpec.refByQualifiedName() with the qualifiedName of the spec. Actually call Atlan to create the path. Because", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "yQualifiedName() with the qualifiedName of the spec. Actually call Atlan to create the path. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { \"entities\" : [ { \"typeName\" : \"APIPath\" , // (1) \"attributes\" : { \"name\" : \"/api/path\" , // (2)", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "0 { \"entities\" : [ { \"typeName\" : \"APIPath\" , // (1) \"attributes\" : { \"name\" : \"/api/path\" , // (2) \"apiPathRawURI\" : \"/api/path\" , // (3) \"qualifiedName\" : \"default/api/123456789/api-spec/api/path\" , // (4) \"connectionQualifiedName\" : \"default/api/123456789\" , // (5) \"connectorName\" : \"api\" , // (6) \"apiSpec\" : { // (7) \"typeName\" : \"APISpec\" , // (8) \"uniqueAttributes\" : { // (9) \"qualifiedName\"", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": ") \"apiSpec\" : { // (7) \"typeName\" : \"APISpec\" , // (8) \"uniqueAttributes\" : { // (9) \"qualifiedName\" : \"default/api/123456789/api-spec\" } } } } ] } The typeName must be exactly APIPath . Human-readable name for your path. The apiPathRawURI should be the unique endpoint URI this path represents. The qualifiedName should follow the pattern: default/api/<epoch>/<specName>/<apiPathRawURI> , where defa", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "qualifiedName should follow the pattern: default/api/<epoch>/<specName>/<apiPathRawURI> , where default/api/<epoch>/<specName> is the qualifiedName of the spec for this path and <apiPathRawURI> is the unique endpoint URI the path represents. The connectionQualifiedName must be the exact qualifiedName of the connection for this path. The connectorName must be exactly api . The spec in which this pa", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "e of the connection for this path. The connectorName must be exactly api . The spec in which this path exists is embedded in the apiSpec attribute. The typeName for this embedded reference must be APISpec . To complete the reference, you must include a uniqueAttributes object with the qualifiedName of the spec. Note: the spec must already exist in Atlan before creating the path. APIObject \u00b6 2.5.3", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "of the spec. Note: the spec must already exist in Atlan before creating the path. APIObject \u00b6 2.5.3 An API object requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the object. Optionally, you can also provide the count of API field that exists in the object as apiFieldCount . Python Raw REST API Create an API object 17 18", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "PI field that exists in the object as apiFieldCount . Python Raw REST API Create an API object 17 18 19 20 21 22 23 apiObject = APIObject . creator ( # (1) name = \"api-object\" , # (2) connection_qualified_name = connection_qualified_name , # (3) api_field_count = 2 # (4) ) response = client . asset . save ( apiObject ) # (5) object_qualified_name = response . assets_created ( asset_type = APIObjec", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": ". save ( apiObject ) # (5) object_qualified_name = response . assets_created ( asset_type = APIObject )[ 0 ] . qualified_name # (6) Build up the minimum request to create an object. Provide a human-readable name for your object. Provide the qualified_name of the connection for this object. Provide the count of fields that exist in the object. Use None if no field exists in this object. Actually ca", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "he count of fields that exist in the object. Use None if no field exists in this object. Actually call Atlan to create the object. Retrieve the created object for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"entities\" : [ { \"typeName\" : \"APIObject\" , // (1) \"attributes\" : { \"name\" : \"api-objec", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "1 12 13 14 { \"entities\" : [ { \"typeName\" : \"APIObject\" , // (1) \"attributes\" : { \"name\" : \"api-object\" , // (2) \"qualifiedName\" : \"default/api/123456789/api-object\" , // (3) \"connectionQualifiedName\" : \"default/api/123456789\" , // (4) \"connectorName\" : \"api\" , // (5) \"apiFieldCount\" : 2 // (6) } } ] } The typeName must be exactly APIObject . Human-readable name for your object. The qualifiedName s", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "} The typeName must be exactly APIObject . Human-readable name for your object. The qualifiedName should follow the pattern: default/api/<epoch>/<objectName> , where default/api/<epoch> is the qualifiedName of the connection for this object and <objectName> is the name of this object. The connectionQualifiedName must be the exact qualifiedName of the connection for this object. The connectorName", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "nQualifiedName must be the exact qualifiedName of the connection for this object. The connectorName must be exactly api . The apiFieldCount should be the count of the fields present in the object. This is not a required attribute and can be excluded. APIQuery \u00b6 2.5.3 An API query requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connect", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the query. Optionally, you can provide other attribute which enrich the query asset. Like apiInputFieldCount to store the count of input API fields in the query. apiQueryOutputType and apiQueryOutputTypeSecondary to store the query output types. If the query refers to an object in its output", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "yOutputTypeSecondary to store the query output types. If the query refers to an object in its output, it requires apiIsObjectReference and apiObjectQualifiedName to be populated. Python Raw REST API Create an API query 17 18 19 20 21 22 23 24 25 26 27 apiQuery = APIQuery . creator ( # (1) name = \"api-query\" , # (2) connection_qualified_name = connection_qualified_name , # (3) api_input_field_count", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "i-query\" , # (2) connection_qualified_name = connection_qualified_name , # (3) api_input_field_count = 2 , # (4) api_query_output_type = \"api-object-ref\" , # (5) api_query_output_type_secondary = \"Object\" , # (6) is_object_reference = True , # (7) reference_api_object_qualified_name = \"default/api/123456789/api-object-ref\" # (8) ) response = client . asset . save ( apiQuery ) # (9) query_qualified", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "23456789/api-object-ref\" # (8) ) response = client . asset . save ( apiQuery ) # (9) query_qualified_name = response . assets_created ( asset_type = APIQuery )[ 0 ] . qualified_name # (10) Build up the minimum request to create a query. Provide a human-readable name for your query. Provide the qualified_name of the connection for this query. Provide the count of input fields that exist in the quer", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "fied_name of the connection for this query. Provide the count of input fields that exist in the query. Use None if no input field exists in this query. Provide the primary type for the output of the query. E.g.: If Object/api-obj-ref, then api-obj-ref is primary. Provide the secondary type for the output of the query. E.g.: If Object/api-obj-ref, then Object is secondary. If the Output of the quer", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "utput of the query. E.g.: If Object/api-obj-ref, then Object is secondary. If the Output of the query refers to an object make it True or else False. If is_object_reference is True, provide the qualified name of the object this query refers to in output. Or None . Actually call Atlan to create the query. Retrieve the created query for use in subsequent creation calls. (You'd probably want to do so", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "uery. Retrieve the created query for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 { \"entities\" : [ { \"typeName\" : \"APIQuery\" , // (1) \"attributes\" : { \"name\" : \"api-query\" , // (2) \"qualifiedName\" : \"default/api/123456789/api-query\" , // (3) \"connectionQualifiedName\" : \"default/api/12", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "lifiedName\" : \"default/api/123456789/api-query\" , // (3) \"connectionQualifiedName\" : \"default/api/123456789\" , // (4) \"connectorName\" : \"api\" , // (5) \"apiInputFieldCount\" : 2 , // (6) \"apiQueryOutputType\" : \"api-object-ref\" , // (7) \"apiQueryOutputTypeSecondary\" : \"Object\" , // (8) \"apiIsObjectReference\" : true , // (9) \"apiObjectQualifiedName\" : \"default/api/123456789/api-object-ref\" // (10) } }", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "rence\" : true , // (9) \"apiObjectQualifiedName\" : \"default/api/123456789/api-object-ref\" // (10) } } ] } The typeName must be exactly APIQuery . Human-readable name for your query. The qualifiedName should follow the pattern: default/api/<epoch>/<queryName> , where default/api/<epoch> is the qualifiedName of the connection for this query and <queryName> is the name of this query. The connectionQua", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "edName of the connection for this query and <queryName> is the name of this query. The connectionQualifiedName must be the exact qualifiedName of the connection for this query. The connectorName must be exactly api . The apiInputFieldCount should be the count of the input fields present in the object. For no input fields, remove the attribute from the request. The apiQueryOutputType is the primary", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "t. For no input fields, remove the attribute from the request. The apiQueryOutputType is the primary type for the output of the query. E.g.: If Object/api-obj-ref, then api-obj-ref is primary. The apiQueryOutputTypeSecondary is the secondary type for the output of the query. E.g.: If Object/api-obj-ref, then Object is secondary. The apiIsObjectReference should be true when the query refers to an o", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "ref, then Object is secondary. The apiIsObjectReference should be true when the query refers to an object in its output. The apiObjectQualifiedName is the qualified name of the object this query refers to in its output. Remove attribute when apiIsObjectReference is false. APIField \u00b6 2.5.3 An API field requires a name and a qualifiedName . For creation, you also need to specify the connectionQualif", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "ld requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the field and either the apiObject or the apiQuery the field is in. Optionally, you can provide other attribute which enrich the field asset. Like apiFieldType and apiFieldTypeSecondary to store the field types. If the field refers to an object, it requires apiIsObjectR", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21900}}, {"content": "ldTypeSecondary to store the field types. If the field refers to an object, it requires apiIsObjectReference and apiObjectQualifiedName to be populated. APIField inside APIObject \u00b6 Python Raw REST API Create an API field inside an API Object 23 24 25 26 27 28 29 30 31 32 33 34 apifield = APIField . creator ( # (1) name = \"api-field\" , # (2) parent_api_object_qualified_name = object_qualified_name", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22200}}, {"content": "creator ( # (1) name = \"api-field\" , # (2) parent_api_object_qualified_name = object_qualified_name , # (3) parent_api_query_qualified_name = None , # (4) connection_qualified_name = connection_qualified_name , # (5) api_field_type = \"api-object-ref\" , # (6) api_field_type_secondary = \"Object\" , # (7) is_api_object_reference = True , # (8) reference_api_object_qualified_name = \"default/api/1234567", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22500}}, {"content": "7) is_api_object_reference = True , # (8) reference_api_object_qualified_name = \"default/api/123456789/api-object-ref\" , # (9) api_query_param_type = None # (10) ) response = client . asset . save ( apifield ) # (11) Build up the minimum request to create a field. Provide the human-readable name for this field. Provide the qualified_name of the API object, this field exists in. None for when this", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22800}}, {"content": "this field. Provide the qualified_name of the API object, this field exists in. None for when this object exists in an object and not in a query. Provide the qualified_name of the connection for this field. Provide the primary type of the field. Provide the secondary type of the field. True when the field refers to an object. Else False. Provide the qualified_name of the API object this field ref", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23100}}, {"content": "e field refers to an object. Else False. Provide the qualified_name of the API object this field refers to. None when is_api_object_reference is False. None when field is inside an object. Holds Enum value when inside a query as input. Actually call Atlan to create the path. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 { \"entities\" : [ { \"typeName\" : \"APIF", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23400}}, {"content": "lk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 { \"entities\" : [ { \"typeName\" : \"APIField\" , // (1) \"attributes\" : { \"name\" : \"api-field\" , // (2) \"qualifiedName\" : \"default/api/123456789/api-object/api-field\" , // (3) \"connectionQualifiedName\" : \"default/api/123456789\" , // (4) \"connectorName\" : \"api\" , // (5) \"apiFieldType\" : \"String\" , // (6) \"apiFieldTypeSecondary\" : \"String\" ,", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23700}}, {"content": "ectorName\" : \"api\" , // (5) \"apiFieldType\" : \"String\" , // (6) \"apiFieldTypeSecondary\" : \"String\" , // (7) \"apiObject\" : { // (8) \"typeName\" : \"APIObject\" , // (9) \"uniqueAttributes\" : { // (10) \"qualifiedName\" : \"default/api/123456789/api-object\" } }, \"apiIsObjectReference\" : true , // (11) \"apiObjectQualifiedName\" : \"default/api/123456789/api-object-ref\" // (12) } } ] } The typeName must be exac", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24000}}, {"content": "ectQualifiedName\" : \"default/api/123456789/api-object-ref\" // (12) } } ] } The typeName must be exactly APIField . Human-readable name for your field. The qualifiedName should follow the pattern: default/api/<epoch>/<objectName>/<fieldName> , where default/api/<epoch>/<objectName> is the qualifiedName of the object for this field and <fieldName> is the human-readable name of the field. The connect", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24300}}, {"content": "me of the object for this field and <fieldName> is the human-readable name of the field. The connectionQualifiedName must be the exact qualifiedName of the connection for this field. The connectorName must be exactly api . The apiFieldType is the primary type of the field. The apiFieldTypeSecondary is the secondary type of the field. The object in which this field exists is embedded in the apiObje", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24600}}, {"content": "is the secondary type of the field. The object in which this field exists is embedded in the apiObject attribute. The typeName for this embedded reference must be APIObject . To complete the reference, you must include a uniqueAttributes object with the qualifiedName of the object. Note: the object must already exist in Atlan before creating the path. The apiIsObjectReference should be true when t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24900}}, {"content": "must already exist in Atlan before creating the path. The apiIsObjectReference should be true when this field refers to an object. The apiObjectQualifiedName should incldue the reference object qualified_name when apiIsObjectReference is true. APIField inside APIQuery \u00b6 Python Raw REST API Create an API field inside an API Query 23 24 25 26 27 28 29 30 31 32 33 34 apifield = APIField . creator ( #", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25200}}, {"content": "API field inside an API Query 23 24 25 26 27 28 29 30 31 32 33 34 apifield = APIField . creator ( # (1) name = \"api-field\" , # (2) parent_api_object_qualified_name = None , # (3) parent_api_query_qualified_name = query_qualified_name , # (4) connection_qualified_name = connection_qualified_name , # (5) api_field_type = \"api-object-ref\" , # (6) api_field_type_secondary = \"Object\" , # (7) is_api_ob", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25500}}, {"content": "(5) api_field_type = \"api-object-ref\" , # (6) api_field_type_secondary = \"Object\" , # (7) is_api_object_reference = True , # (8) reference_api_object_qualified_name = \"default/api/123456789/api-object-ref\" , # (9) api_query_param_type = APIQueryParamTypeEnum . INPUT # (10) ) response = client . asset . save ( apifield ) # (11) Build up the minimum request to create a field. Provide the human-read", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25800}}, {"content": "et . save ( apifield ) # (11) Build up the minimum request to create a field. Provide the human-readable name for this field. None for when this object exists in a query and not in an object. Provide the qualified_name of the API query, this field exists in. Provide the qualified_name of the connection for this field. Provide the primary type of the field. Provide the secondary type of the field.", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26100}}, {"content": "ion for this field. Provide the primary type of the field. Provide the secondary type of the field. True when the field refers to an object. Else False. Provide the qualified_name of the API object this field refers to. None when is_api_object_reference is False. Provide the enum value INPUT, if the field is an input to the query. Actually call Atlan to create the path. POST /api/meta/entity/bulk", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26400}}, {"content": "field is an input to the query. Actually call Atlan to create the path. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 { \"entities\" : [ { \"typeName\" : \"APIField\" , // (1) \"attributes\" : { \"name\" : \"api-field\" , // (2) \"qualifiedName\" : \"default/api/123456789/api-query/api-field\" , // (3) \"connectionQualifiedName\" : \"default/api/123456789\" , // (4) \"conne", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26700}}, {"content": "89/api-query/api-field\" , // (3) \"connectionQualifiedName\" : \"default/api/123456789\" , // (4) \"connectorName\" : \"api\" , // (5) \"apiFieldType\" : \"String\" , // (6) \"apiFieldTypeSecondary\" : \"String\" , // (7) \"apiQuery\" : { // (8) \"typeName\" : \"APIQuery\" , // (9) \"uniqueAttributes\" : { // (10) \"qualifiedName\" : \"default/api/123456789/api-query\" } }, \"apiIsObjectReference\" : true , // (11) \"apiObjectQ", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27000}}, {"content": "edName\" : \"default/api/123456789/api-query\" } }, \"apiIsObjectReference\" : true , // (11) \"apiObjectQualifiedName\" : \"default/api/123456789/api-object-ref\" , // (12) \"apiQueryParamType\" : \"Input\" // (13) } } ] } The typeName must be exactly APIField . Human-readable name for your field. The qualifiedName should follow the pattern: default/api/<epoch>/<queryName>/<fieldName> , where default/api/<epo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27300}}, {"content": "Name should follow the pattern: default/api/<epoch>/<queryName>/<fieldName> , where default/api/<epoch>/<queryName> is the qualifiedName of the query for which this field is an input and <fieldName> is the human-readable name of the field. The connectionQualifiedName must be the exact qualifiedName of the connection for this field. The connectorName must be exactly api . The apiFieldType is the pr", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27600}}, {"content": "of the connection for this field. The connectorName must be exactly api . The apiFieldType is the primary type of the field. The apiFieldTypeSecondary is the secondary type of the field. The query in which this field exists is embedded in the apiQuery attribute. The typeName for this embedded reference must be APIQuery . To complete the reference, you must include a uniqueAttributes object with th", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27900}}, {"content": "nce must be APIQuery . To complete the reference, you must include a uniqueAttributes object with the qualifiedName of the query. Note: the object must already exist in Atlan before creating the path. The apiIsObjectReference should be true when this field refers to an object. The apiObjectQualifiedName should incldue the reference object qualified_name when apiIsObjectReference is true. The apiQu", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28200}}, {"content": "Name should incldue the reference object qualified_name when apiIsObjectReference is true. The apiQueryParamType should be present when the field is an input to a query. The value must exactly be \"Input\". Available relationships \u00b6 Every level of the API structure is an Asset , and can therefore be related to the following other assets. erDiagram Asset }o--o{ AtlasGlossaryTerm : meanings Asset ||--", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28500}}, {"content": "elated to the following other assets. erDiagram Asset }o--o{ AtlasGlossaryTerm : meanings Asset ||--o{ Link : links Asset ||--o| Readme : readme Asset }o--o{ Process : inputToProcesses Asset }o--o{ Process : outputFromProcesses AtlasGlossaryTerm \u00b6 A glossary term provides meaning to an asset. The link terms to assets snippet provides more detail on setting this relationship. Link \u00b6 A link provides", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28800}}, {"content": "nk terms to assets snippet provides more detail on setting this relationship. Link \u00b6 A link provides additional context to an asset, by providing a URL to additional information. Readme \u00b6 A README provides rich documentation for an asset. The add asset READMEs snippet provides more detail on setting this relationship. Process \u00b6 A process provides lineage information for an asset. An asset can be b", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29100}}, {"content": "this relationship. Process \u00b6 A process provides lineage information for an asset. An asset can be both an input and an output for one or more processes. The lineage snippets provide more detail on creating and working with lineage. Although if you want to delete everything in a connection, your better avenue is the packaged connection delete utility in the UI. \u21a9 Was this page helpful? Thanks for", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29400}}, {"content": "ter avenue is the packaged connection delete utility in the UI. \u21a9 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/api/", "title": "Manage API assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29700}}, {"content": "Extending Atlan's model \u00b6 You can extend the metadata model in Atlan through its typedefs. Closed beta This feature is currently provided as a closed beta. Specific policies must be configured in your tenant to have the necessary access to create these extensions; without these operations these will not work. Further caveats When extending the Atlan data model, you should be aware of these additio", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "not work. Further caveats When extending the Atlan data model, you should be aware of these additional restrictions: You can only manage definitions that are not in Atlan's internally-managed namespace, defined by the serviceType of each model. So if you want to extend an existing model, you should create a new type in your own serviceType and specify the model you want to extend as the supertype", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "create a new type in your own serviceType and specify the model you want to extend as the supertype of that model. You should follow a naming convention that prefixes all attributes you define, to avoid potential future conflicts with Atlan-managed attributes. Create new struct models \u00b6 You can use structs to embed complex structures within other models. If you only intend to use primitive attrib", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "structs to embed complex structures within other models. If you only intend to use primitive attributes, you do not need to define any structs. To create a new struct model: Java Create a new struct model 1 2 3 4 5 6 7 8 final String ATTR_PREFIX = \"myns\" ; List < AttributeDef > attrs = List . of ( // (1) AttributeDef . creator ( ATTR_PREFIX + \"FieldOne\" , AtlanAttributeType . STRING ). build (),", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "// (1) AttributeDef . creator ( ATTR_PREFIX + \"FieldOne\" , AtlanAttributeType . STRING ). build (), // (2) AttributeDef . creator ( ATTR_PREFIX + \"FieldTwo\" , AtlanAttributeType . LONG ). build ()); StructDef sd = StructDef . creator ( \"SomeStruct\" , attrs ) // (3) . serviceType ( \"custom\" ) // (4) . build (); TypeDefResponse response = Atlan . getDefaultClient (). typeDefs . _create ( sd ); // (5", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": ". build (); TypeDefResponse response = Atlan . getDefaultClient (). typeDefs . _create ( sd ); // (5) Begin by defining the list of attribute definitions for the struct model. Each attribute definition must have at least a name and a type. Define the struct model itself by providing at least a name and the list of attribute definitions. (Optional) You can also specify your own namespace for the mo", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "and the list of attribute definitions. (Optional) You can also specify your own namespace for the model using serviceType . This will default to custom_extension if not specified. Call the _create() method to actually create the new struct model in Atlan. Create new entity models \u00b6 Entities define the metadata objects that Atlan can store, update, search, and so on. They can be made up of both pri", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "he metadata objects that Atlan can store, update, search, and so on. They can be made up of both primitive and struct-based (complex) attributes. To create a new entity model: Java Create a new entity model 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 List < AttributeDef > attrs = List . of ( // (1) AttributeDef . creator ( ATTR_PREFIX + \"ParentAttrOne\" , AtlanAttributeType . STRING ).", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "of ( // (1) AttributeDef . creator ( ATTR_PREFIX + \"ParentAttrOne\" , AtlanAttributeType . STRING ). build (), AttributeDef . creator ( // (2) ATTR_PREFIX + \"ParentStructs\" , AtlanAttributeType . STRUCT , \"SomeStruct\" , AtlanCustomAttributeCardinality . SET ) // (3) . build ()); EntityDef ed = EntityDef . creator ( \"SomeParent\" , attrs ) . serviceType ( \"custom\" ) // (4) . build (); // (5) TypeDefR", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Def . creator ( \"SomeParent\" , attrs ) . serviceType ( \"custom\" ) // (4) . build (); // (5) TypeDefResponse response = Atlan . getDefaultClient (). typeDefs . _create ( ed ); // (6) attrs = List . of ( AttributeDef . creator ( ATTR_PREFIX + \"ChildAttrOne\" , AtlanAttributeType . LONG ). build (), AttributeDef . creator ( ATTR_PREFIX + \"ChildAttrTwo\" , AtlanAttributeType . DATE ). build ()); ed = En", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ributeDef . creator ( ATTR_PREFIX + \"ChildAttrTwo\" , AtlanAttributeType . DATE ). build ()); ed = EntityDef . creator ( \"SomeChild\" , attrs ) . serviceType ( \"custom\" ) . build (); TypeDefResponse response = Atlan . getDefaultClient (). typeDefs . _create ( ed ); Begin by defining the list of attribute definitions for the entity model. Each attribute definition must have at least a name and a type", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ute definitions for the entity model. Each attribute definition must have at least a name and a type. If the type is not primitive (in this example a struct), you must also specify the kind of object (struct). You can also override the cardinality, in this example we allow multiple embedded complex values against this single attribute. (Optional) You can also specify your own namespace for the mod", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "values against this single attribute. (Optional) You can also specify your own namespace for the model using serviceType . This will default to custom_extension if not specified. Define the entity model itself by providing at least a name and the list of attribute definitions. Call the _create() method to actually create the new entity model in Atlan. Create new relationship models \u00b6 Relationships", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "hod to actually create the new entity model in Atlan. Create new relationship models \u00b6 Relationships define connections between entities. They must always have two entity model endpoints. To create a new relationship model: Java Create a new relationship model 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 List < AttributeDef > attrs = List . of ( // (1) AttributeDef . creator ( ATTR_", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "41 42 43 44 45 46 47 List < AttributeDef > attrs = List . of ( // (1) AttributeDef . creator ( ATTR_PREFIX + \"RelationshipAttrOne\" , AtlanAttributeType . STRING ). build (), // (2) AttributeDef . creator ( ATTR_PREFIX + \"RelationshipAttrTwo\" , AtlanAttributeType . LONG ). build ()); RelationshipEndDef one = RelationshipEndDef . creator ( // (3) ATTR_PREFIX + \"Children\" , // (4) \"SomeParent\" , // (", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ef one = RelationshipEndDef . creator ( // (3) ATTR_PREFIX + \"Children\" , // (4) \"SomeParent\" , // (5) true , // (6) AtlanCustomAttributeCardinality . SET ) // (7) . build (); RelationshipEndDef two = RelationshipEndDef . creator ( // (8) ATTR_PREFIX + \"Parent\" , // (9) \"SomeChild\" , // (10) false , // (11) AtlanCustomAttributeCardinality . SINGLE ) // (12) . build (); RelationshipDef rd = Relatio", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "// (11) AtlanCustomAttributeCardinality . SINGLE ) // (12) . build (); RelationshipDef rd = RelationshipDef . creator ( RELATIONSHIP_DEF_NAME , one , two , attrs ) // (13) . relationshipCategory ( RelationshipCategory . AGGREGATION ) // (14) . serviceType ( \"custom\" ) // (15) . build (); TypeDefResponse response = Atlan . getDefaultClient (). typeDefs . _create ( rd ); // (16) (Optional) Begin by", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ponse response = Atlan . getDefaultClient (). typeDefs . _create ( rd ); // (16) (Optional) Begin by defining the list of attribute definitions for the relationship model. These are optional for a relationship, but are used to capture any attributes on each instance of the relationship. Each attribute definition must have at least a name and a type. If the type is not primitive (in this example a", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "te definition must have at least a name and a type. If the type is not primitive (in this example a struct), you must also specify the kind of object (struct). Define each entity endpoint of the relationship. You must give the endpoint a name \u2014 this will be the name of the attribute that appears in the entity itself to represent this relationship. You must specify the type of entity this relations", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "the entity itself to represent this relationship. You must specify the type of entity this relationship exists on (where the attribute name above will appear). Specify whether the relationship on this entity \"contains\" the other entities. For parent-child relationships this should be true on the parent entity type, and false otherwise. Specify the cardinality of the relationship: in this example w", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ent entity type, and false otherwise. Specify the cardinality of the relationship: in this example we allow multiple children to be related to the parent type. Since every relationship is between exactly two entities, create an endpoint for the other side of the relationship as well. As before, you must give the endpoint a name \u2014 this will be the name of the attribute that appears in the entity it", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "must give the endpoint a name \u2014 this will be the name of the attribute that appears in the entity itself to represent this relationship. You must specify the type of entity this relationship exists on (where the attribute name above will appear). Since this example is the child referring to its parent, the child is not a container. Since this example is the child referring to a single parent, this", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "nt, the child is not a container. Since this example is the child referring to a single parent, this end of the relationship's cardinality is singular. Define the relationship model itself by providing at least a name, the two endpoints, and (optionally) the list of attribute definitions. By default, a relationship will be created as an ASSOCIATION . You can override this with any of: ASSOCIATION", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": ", a relationship will be created as an ASSOCIATION . You can override this with any of: ASSOCIATION : defines a peer-to-peer relationship between the entity endpoints. AGGREGATION : defines a relationship where one endpoint is logically the \"parent\" of another endpoint. This differs from the COMPOSITION by not cascading deletes to related entities. COMPOSITION : defines a relationship where one en", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "TION by not cascading deletes to related entities. COMPOSITION : defines a relationship where one endpoint is strictly the \"parent\" of another endpoint. This differs from AGGREGATION because any removal of the entity at the parent end of the relationship will cascade to removing any of the related children entities as well. (Optional) You can also specify your own namespace for the model using ser", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "hildren entities as well. (Optional) You can also specify your own namespace for the model using serviceType . This will default to custom_extension if not specified. Call the _create() method to actually create the new entity model in Atlan. Update existing models \u00b6 Treat existing attributes as immutable You can also update existing entity models. However, in general you should only append (creat", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "utable You can also update existing entity models. However, in general you should only append (create new) attributes and not remove or attempt to change any existing attributes, or you may lose data from those existing attributes. To update an existing model, first retrieve it and then apply updates to it: Java Update an existing model 48 49 50 51 52 53 54 EntityDef parent = ( EntityDef ) Atlan .", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "s to it: Java Update an existing model 48 49 50 51 52 53 54 EntityDef parent = ( EntityDef ) Atlan . getDefaultClient (). typeDefs . get ( \"SomeParent\" ); // (1) parent = parent . toBuilder () // (2) . attributeDef ( AttributeDef . creator ( ATTR_PREFIX + \"ThirdAttribute\" , AtlanAttributeType . BOOLEAN ) // (3) . build ()) . typeVersion ( \"1.1\" ) // (4) . build (); TypeDefResponse response = Atlan", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "EAN ) // (3) . build ()) . typeVersion ( \"1.1\" ) // (4) . build (); TypeDefResponse response = Atlan . getDefaultClient (). typeDefs . _update ( parent ); // (5) Begin by retrieving the existing model's definition. You can convert the immutable object returned into a mutatable builder using the .toBuilder() method. Remember to assign the value back Remember to assign the built immutable value back", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "uilder() method. Remember to assign the value back Remember to assign the built immutable value back to some variable, and use that variable in the next step. Otherwise the changes you make here will not be applied back. You can then append as many additional attributes as you like. You should also update the typeVersion of the model to the next minor version. Call the _update() method to actually", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "update the typeVersion of the model to the next minor version. Call the _update() method to actually update the existing model in Atlan. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/extensions/", "title": "Extending Atlan's model - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "Connection issues Resolve common connection and authentication issues when setting up CrateDB connector CrateDB Integrate, catalog, and govern CrateDB assets in Atlan. Permissions and limitations Frequently asked questions about CrateDB connector setup, permissions, and limitations Preflight checks for CrateDB Technical validations performed before running the CrateDB crawler to verify connectivit", "metadata": {"source_url": "https://docs.atlan.com/tags/cratedb", "title": "6 docs tagged with \"cratedb\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "for CrateDB Technical validations performed before running the CrateDB crawler to verify connectivity and permissions Set up CrateDB Configure authentication and connection settings for CrateDB connector What does Atlan crawl from CrateDB? Complete list of CrateDB assets and metadata properties extracted by Atlan during crawling", "metadata": {"source_url": "https://docs.atlan.com/tags/cratedb", "title": "6 docs tagged with \"cratedb\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "SparkJob \u00b6 Instance of a Spark Job run in Atlan. Complete reference This is a complete reference for the SparkJob object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Sp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. SparkJob inherits its attributes and relationships from these other types: classDiagram direction RL class SparkJob link SparkJob \"../sparkjob\" class Spark { <<abstract>> } link Spark \"../spark\" Spark <|-- SparkJob : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Spark :", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "|-- SparkJob : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Spark : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from SparkJob 's supertypes (shown a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "roperties \u00b6 Inherited properties These attributes are inherited from SparkJob 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and v", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "formation, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. delete", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "nings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "\u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of anno", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "uncement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. appli", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "plicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing stat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "esent in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ssetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "lliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "sh in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "rom the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "r of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "his asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "rtedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable tot", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "b that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "conds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "nHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "t. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "Names \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "e Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ciated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique M", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "s. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": ". assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide furt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "'s certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is acce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ation of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. de", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "nt name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "y purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEdit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "\u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ist of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecord", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "st \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecord", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source sy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "m, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "rred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) sparkRunEndTime \u00b6 End time of the Spark Job eg. 1695673598218 sparkRunOpenLineageState \u00b6 OpenLineage s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "arkRunEndTime \u00b6 End time of the Spark Job eg. 1695673598218 sparkRunOpenLineageState \u00b6 OpenLineage state of the Spark Job run eg. COMPLETE sparkRunOpenLineageVersion \u00b6 OpenLineage Version of the Spark Job run eg. 1.1.0 sparkRunStartTime \u00b6 Start time of the Spark Job eg. 1695673598218 sparkRunVersion \u00b6 Spark Version for the Spark Job run eg. 3.4.1 These attributes are specific to instances of Spark", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "\u00b6 Spark Version for the Spark Job run eg. 3.4.1 These attributes are specific to instances of SparkJob (and all of its subtypes). sparkAppName \u00b6 Name of the Spark app containing this Spark Job For eg. extract_raw_data sparkMaster \u00b6 The Spark master URL eg. local, local[4], or spark://master:7077 Relationships \u00b6 Inherited relationships These relationships are inherited from SparkJob 's supertypes:", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "lationships \u00b6 Inherited relationships These relationships are inherited from SparkJob 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ontaining this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataPro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "itor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "\u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of SparkJob (and all of its subtypes). inputs ( Catalog ) \u00b6 Assets that are inputs to this task. outputs ( Catalog ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "ll of its subtypes). inputs ( Catalog ) \u00b6 Assets that are inputs to this task. outputs ( Catalog ) \u00b6 Assets that are outputs from this task. process ( Process ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sparkjob/", "title": "SparkJob - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "On this page Overview: Catalog MicroStrategy reports, documents, and dossiers in Atlan. Gain visibility into lineage, usage, and governance for your MicroStrategy analytics assets. Get started \u200b Follow these steps to connect and catalog MicroStrategy assets in Atlan: Set up the connector Crawl assets References \u200b What does Atlan crawl from MicroStrategy? : Detailed list of MicroStrategy asset type", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy", "title": "MicroStrategy | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s References \u200b What does Atlan crawl from MicroStrategy? : Detailed list of MicroStrategy asset types and metadata fields that Atlan can extract and catalog. Preflight checks for MicroStrategy : Technical checks and requirements needed for a successful MicroStrategy integration. Troubleshooting \u200b Troubleshooting connectivity : Solutions for common issues encountered when connecting Atlan to MicroS", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy", "title": "MicroStrategy | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "oubleshooting connectivity : Solutions for common issues encountered when connecting Atlan to MicroStrategy, including permissions and network problems. Get started References Troubleshooting", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy", "title": "MicroStrategy | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "CosmosMongoDBDatabase \u00b6 Instance of a Cosmos MongoDB database in Atlan. Complete reference This is a complete reference for the CosmosMongoDBDatabase object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common mu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "th: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. CosmosMongoDBDatabase inherits its attributes and relationships from these other types: classDiagram direction RL class CosmosMongoDBDatabase link CosmosMongoDBDatabase \"../cosmosmongodbdatabase\" class CosmosMongoDB { <<abstract>> } link CosmosMongoDB \"../cosmosmong", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "se \"../cosmosmongodbdatabase\" class CosmosMongoDB { <<abstract>> } link CosmosMongoDB \"../cosmosmongodb\" CosmosMongoDB <|-- CosmosMongoDBDatabase : extends class NoSQL { <<abstract>> } link NoSQL \"../nosql\" NoSQL <|-- CosmosMongoDB : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog :", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "atalog <|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class MongoDBDatabase link MongoDBDatabase \"../mongodbdatabase\" MongoDBDatabase <|-- CosmosMongoDBDatabase : extends class Database link Database \"../database\" Database <|-- MongoDBD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "-- CosmosMongoDBDatabase : extends class Database link Database \"../database\" Database <|-- MongoDBDatabase : extends class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- Database : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Ref", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class MongoDB { <<abstract>> } link MongoDB \"../mongodb\" MongoDB <|-- MongoDBDatabase : extends class NoSQL { <<abstract>> } link NoSQL \"../nosql\" NoSQL <|-- MongoDB : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Ca", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "\"../nosql\" NoSQL <|-- MongoDB : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from CosmosMongoDB", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from CosmosMongoDBDatabase 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "tlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "hich the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. calculationViewName \u00b6 Simple name of the calculation view in which this SQL asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "te on this asset. calculationViewName \u00b6 Simple name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. calculationViewQualifiedName \u00b6 Unique name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. databaseName \u00b6 Simple name of the database in which this SQL asset exists, or e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "a calculation view. databaseName \u00b6 Simple name of the database in which this SQL asset exists, or empty if it does not exist within a database. databaseQualifiedName \u00b6 Unique name of the database in which this SQL asset exists, or empty if it does not exist within a database. isProfiled \u00b6 Whether this asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch) at which this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "his asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch) at which this asset was last profiled, in milliseconds. queryCount \u00b6 Number of times this asset has been queried. queryCountUpdatedAt \u00b6 Time (epoch) at which the query count was last updated, in milliseconds. queryUserCount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map of unique users who ha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map of unique users who have queried this asset to the number of times they have queried it. schemaName \u00b6 Simple name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. schemaQualifiedName \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it does not exist withi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "Name \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. tableName \u00b6 Simple name of the table in which this SQL asset exists, or empty if it does not exist within a table. tableQualifiedName \u00b6 Unique name of the table in which this SQL asset exists, or empty if it does not exist within a table. viewName \u00b6 Simple name of the view in which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "sts, or empty if it does not exist within a table. viewName \u00b6 Simple name of the view in which this SQL asset exists, or empty if it does not exist within a view. viewQualifiedName \u00b6 Unique name of the view in which this SQL asset exists, or empty if it does not exist within a view. schemaCount \u00b6 Number of schemas in this database. qualifiedName \u00b6 Unique name for this asset. This is typically a co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "mber of schemas in this database. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for C", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementTyp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "t. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckSta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "etAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "r of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "me \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "erialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materializ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "t in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "cesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "JobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materiali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "alized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLas", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "tion \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "is asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materia", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "e of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "hed to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attach", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "o glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "tMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "s \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "d from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Mont", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Sod", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQuali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ch this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "man-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverab", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "ographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 U", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "st of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "eCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ce system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read opera", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "s sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ve_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a di", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "\u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecord", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "or the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "dUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs star", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ith extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "esent, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) noSQLSchemaDefinition \u00b6 Represents attributes for descr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "(This is only used for certain asset types.) noSQLSchemaDefinition \u00b6 Represents attributes for describing the key schema for the table and indexes. mongoDBDatabaseCollectionCount \u00b6 Number of collections in the database. These attributes are specific to instances of CosmosMongoDBDatabase (and all of its subtypes). cosmosMongoDBAccountQualifiedName \u00b6 Unique name of the account in which this database", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "its subtypes). cosmosMongoDBAccountQualifiedName \u00b6 Unique name of the account in which this database exists. Relationships \u00b6 Inherited relationships These relationships are inherited from CosmosMongoDBDatabase 's supertypes: dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 TBC dbtTests ( DbtTest ) \u00b6 TBC sqlDBTSources ( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC schemas ( Schema ) \u00b6 S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "est ) \u00b6 TBC sqlDBTSources ( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC schemas ( Schema ) \u00b6 Schemas that exist within this database. anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "ationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contrac", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "s asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "bject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "ship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowT", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "ntedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC mongoDBCollections ( MongoDBCollection ) \u00b6 Collections that exist within this database. These relationships are specific to i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21900}}, {"content": "oDBCollection ) \u00b6 Collections that exist within this database. These relationships are specific to instances of CosmosMongoDBDatabase (and all of its subtypes). cosmosMongoDBAccount ( CosmosMongoDBAccount ) \u00b6 Account in which the database exists. cosmosMongoDBCollections ( CosmosMongoDBCollection ) \u00b6 Collections that exist within this database. Was this page helpful? Thanks for your feedback! Than", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22200}}, {"content": "\u00b6 Collections that exist within this database. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbdatabase/", "title": "CosmosMongoDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22500}}, {"content": "Enrich Atlan through dbt Beyond the default mapped [dbt Cloud](/apps/connectors/etl-tools/dbt/references/what-does-atlan-crawl-from-dbt-cloud) or [dbt Core](/apps/connectors/etl-tools/dbt/references/what-does-atlan-crawl-from-dbt-core) properties, you can update any of Atlan's metadata attributes (except for `name`, `tenantId`, and `qualifiedName`) through your dbt model's `meta` property.", "metadata": {"source_url": "https://docs.atlan.com/tags/enrichment", "title": "One doc tagged with \"enrichment\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Apache Airflow OpenLineage Integrate, catalog, and visualize Apache Airflow lineage in Atlan. Apache Kafka Integrate, catalog, and govern Apache Kafka assets in Atlan. Apache Spark OpenLineage Integrate, catalog, and visualize Apache Spark lineage in Atlan.", "metadata": {"source_url": "https://docs.atlan.com/tags/apache", "title": "3 docs tagged with \"apache\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Purpose \u00b6 Atlan Type representing a Purpose model Complete reference This is a complete reference for the Purpose object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Pu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Purpose inherits its attributes and relationships from these other types: classDiagram direction RL class Purpose link Purpose \"../purpose\" class AccessControl { <<abstract>> } link AccessControl \"../accesscontrol\" AccessControl <|-- Purpose : extends class Asset { <<abstract>> } link Asset \"../asset\"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "cesscontrol\" AccessControl <|-- Purpose : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- AccessControl : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from Purpose 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "inherited from Purpose 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "utes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or acco", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "set. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "sset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use cla", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "catenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "nnection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Applicatio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "plicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "uses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Ano", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ailed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "t. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ead ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "d this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were se", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "et in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "set in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "nRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "ed this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materializ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "RunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "anticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "nique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "d to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcInci", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "IncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "ssetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": ". assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "dable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "he connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "iedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (fals", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (tru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "e through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "t last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of poli", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "L for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "reate an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "(1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accesse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ions at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "is asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUser", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ferent name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "est queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to cre", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "edDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used fo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": ". viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) channelLink \u00b6 TBC defaultNavigation \u00b6 TBC denyAssetFilters \u00b6 TBC denyAssetTabs \u00b6 TBC denyAssetTypes \u00b6 TBC denyCustomMetadataGuids \u00b6 TBC denyNavigationPages", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "rs \u00b6 TBC denyAssetTabs \u00b6 TBC denyAssetTypes \u00b6 TBC denyCustomMetadataGuids \u00b6 TBC denyNavigationPages \u00b6 TBC displayPreferences \u00b6 TBC isAccessControlEnabled \u00b6 TBC These attributes are specific to instances of Purpose (and all of its subtypes). purposeClassifications \u00b6 TBC (1) Uses a different name in SDKs purposeAtlanTags purpose_atlan_tags Relationships \u00b6 Inherited relationships These relationships", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "DKs purposeAtlanTags purpose_atlan_tags Relationships \u00b6 Inherited relationships These relationships are inherited from Purpose 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "icationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "his asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "s ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) U", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "Subject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos policies ( AuthPolicy ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "onship_tos policies ( AuthPolicy ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/purpose/", "title": "Purpose - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "MongoDBDatabase \u00b6 Instance of a MongoDB database in Atlan. Complete reference This is a complete reference for the MongoDBDatabase object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "l, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. MongoDBDatabase inherits its attributes and relationships from these other types: classDiagram direction RL class MongoDBDatabase link MongoDBDatabase \"../mongodbdatabase\" class Database link Database \"../database\" Database <|-- MongoDBDatabase : extends class SQL { <<abstract>> } lin", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "e link Database \"../database\" Database <|-- MongoDBDatabase : extends class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- Database : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|--", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "xtends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class MongoDB { <<abstract>> } link MongoDB \"../mongodb\" MongoDB <|-- MongoDBDatabase : extends class NoSQL { <<abstract>> } link NoSQL \"../nosql\" NoSQL <|-- MongoDB : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- NoSQL : extends class Asset { <<abstr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "atalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from MongoDBDatabase 's supertypes (shown above): typeName \u00b6 Type", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "es These attributes are inherited from MongoDBDatabase 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "e \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanT", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "hed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be incon", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. noSQLSchemaDefinition \u00b6 Represents attributes for describing the key schema for the table and indexes. qualifiedName \u00b6 Unique name for t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ttributes for describing the key schema for the table and indexes. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "is asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualif", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": ". announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "sociated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedChe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "aloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "overImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materializ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "his asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "nArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "(epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the la", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "e job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "t (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "d \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "e last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "t which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "n of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "zed \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "he package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of uniq", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "e for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident nam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "his asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "t which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTyp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "onitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "hecks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. ce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "al RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "liseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs conn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "iption is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "alse). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "st synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "o own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ce system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensiv", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCoun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "(1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the mos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "eQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": ". sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlow", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "set. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different nam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "f usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "s source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "pdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) U", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "DetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. vie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "set, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) calculationViewName \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ssets contained in a collection. (This is only used for certain asset types.) calculationViewName \u00b6 Simple name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. calculationViewQualifiedName \u00b6 Unique name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. databaseName \u00b6 Simp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "this SQL asset exists, or empty if it does not exist within a calculation view. databaseName \u00b6 Simple name of the database in which this SQL asset exists, or empty if it does not exist within a database. databaseQualifiedName \u00b6 Unique name of the database in which this SQL asset exists, or empty if it does not exist within a database. isProfiled \u00b6 Whether this asset has been profiled (true) or no", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "it does not exist within a database. isProfiled \u00b6 Whether this asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch) at which this asset was last profiled, in milliseconds. queryCount \u00b6 Number of times this asset has been queried. queryCountUpdatedAt \u00b6 Time (epoch) at which the query count was last updated, in milliseconds. queryUserCount \u00b6 Number of unique users who have q", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "he query count was last updated, in milliseconds. queryUserCount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map of unique users who have queried this asset to the number of times they have queried it. schemaName \u00b6 Simple name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. schemaQualifiedName \u00b6 Unique name of the schema in whic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "empty if it does not exist within a schema. schemaQualifiedName \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. tableName \u00b6 Simple name of the table in which this SQL asset exists, or empty if it does not exist within a table. tableQualifiedName \u00b6 Unique name of the table in which this SQL asset exists, or empty if it does not exist withi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "dName \u00b6 Unique name of the table in which this SQL asset exists, or empty if it does not exist within a table. viewName \u00b6 Simple name of the view in which this SQL asset exists, or empty if it does not exist within a view. viewQualifiedName \u00b6 Unique name of the view in which this SQL asset exists, or empty if it does not exist within a view. schemaCount \u00b6 Number of schemas in this database. These", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "r empty if it does not exist within a view. schemaCount \u00b6 Number of schemas in this database. These attributes are specific to instances of MongoDBDatabase (and all of its subtypes). mongoDBDatabaseCollectionCount \u00b6 Number of collections in the database. Relationships \u00b6 Inherited relationships These relationships are inherited from MongoDBDatabase 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Ch", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "relationships are inherited from MongoDBDatabase 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "asGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "rsion of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "renceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "ovides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Proces", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "omAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 TBC dbtTests ( DbtTest ) \u00b6 TBC sqlDBTSources ( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC schemas ( Schema ) \u00b6 Schemas that exist within", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC schemas ( Schema ) \u00b6 Schemas that exist within this database. These relationships are specific to instances of MongoDBDatabase (and all of its subtypes). mongoDBCollections ( MongoDBCollection ) \u00b6 Collections that exist within this database. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "his page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mongodbdatabase/", "title": "MongDBDatabase - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "AnaplanModel \u00b6 Instances of an AnaplanModel in Atlan. Complete reference This is a complete reference for the AnaplanModel object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation pat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "c examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. AnaplanModel inherits its attributes and relationships from these other types: classDiagram direction RL class AnaplanModel link AnaplanModel \"../anaplanmodel\" class Anaplan { <<abstract>> } link Anaplan \"../anaplan\" Anaplan <|-- AnaplanModel : extends class BI { <<abstract>> } link BI \"../bi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "nk Anaplan \"../anaplan\" Anaplan <|-- AnaplanModel : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Anaplan : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "erenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from AnaplanModel 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "fications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ta For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was create", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ould not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "Incomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "\u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "f groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "etailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announceme", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "t updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of che", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "AppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ty from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at whi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the jo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "JobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "m which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were gener", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "set in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "erialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that material", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "tRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLast", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "eadable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "UpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJob", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "e (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "etDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "DbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestSta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "rce of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQua", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "n \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of uniqu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-type", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "t states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "SyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "l associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check st", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "daCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "eHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the ce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "n was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "cessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "lay purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenera", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "s lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in millise", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "owChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "ame of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "Groups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "et was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordLi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "n. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "TopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "ource application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who ha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "tarred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the descript", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "n \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset type", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "st of users who can view assets contained in a collection. (This is only used for certain asset types.) anaplanModelName \u00b6 Simple name of the AnaplanModel asset that contains this asset(AnaplanModule and everthing under it's hierarchy). anaplanModelQualifiedName \u00b6 Unique name of the AnaplanModel asset that contains this asset(AnaplanModule and everthing under it's hierarchy). anaplanModuleName \u00b6 S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "et that contains this asset(AnaplanModule and everthing under it's hierarchy). anaplanModuleName \u00b6 Simple name of the AnaplanModule asset that contains this asset(AnaplanLineItem, AnaplanList, AnaplanView and everthing under their hierarchy). anaplanModuleQualifiedName \u00b6 Unique name of the AnaplanModule asset that contains this asset(AnaplanLineItem, AnaplanList, AnaplanView and everthing under th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "dule asset that contains this asset(AnaplanLineItem, AnaplanList, AnaplanView and everthing under their hierarchy). anaplanSourceId \u00b6 Id/Guid of the Anaplan asset in the source system. anaplanWorkspaceName \u00b6 Simple name of the AnaplanWorkspace asset that contains this asset(AnaplanModel and everthing under it's hierarchy). anaplanWorkspaceQualifiedName \u00b6 Unique name of the AnaplanWorkspace asset t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "g under it's hierarchy). anaplanWorkspaceQualifiedName \u00b6 Unique name of the AnaplanWorkspace asset that contains this asset(AnaplanModel and everthing under it's hierarchy). Relationships \u00b6 Inherited relationships These relationships are inherited from AnaplanModel 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset contain", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "maloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "t name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "s ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ts for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "f_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attribute", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "ocesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of AnaplanModel (and all of its subtypes). anaplanDimensions ( AnaplanDimension ) \u00b6 AnaplanDimension assets contained within this AnaplanModel. anaplanLists ( AnaplanList ) \u00b6 AnaplanList assets contained within this AnaplanModel. anaplanM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "odel. anaplanLists ( AnaplanList ) \u00b6 AnaplanList assets contained within this AnaplanModel. anaplanModules ( AnaplanModule ) \u00b6 AnaplanModule assets contained within this AnaplanModel. anaplanPages ( AnaplanPage ) \u00b6 AnaplanPage assets containing this AnaplanModel. anaplanWorkspace ( AnaplanWorkspace ) \u00b6 AnaplanWorkspace asset containing this AnaplanModel. Was this page helpful? Thanks for your feed", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": ") \u00b6 AnaplanWorkspace asset containing this AnaplanModel. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanmodel/", "title": "AnaplanModel - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "App model \u00b6 Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand how to manage App assets in Atlan. For that, we would suggest starting with the manage App assets pattern . Base class for App assets. classDiagram direction RL class App { <<abstract>> } link App \"../app\" class Catalog { <<abstract>> } li", "metadata": {"source_url": "https://developer.atlan.com/models/app/", "title": "App - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "sDiagram direction RL class App { <<abstract>> } link App \"../app\" class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Catalog <|-- App : extends class Asset { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Referenceable <|-- Asset : extends class Application link Applicati", "metadata": {"source_url": "https://developer.atlan.com/models/app/", "title": "App - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "able \"../entities/referenceable\" Referenceable <|-- Asset : extends class Application link Application \"../entities/application\" App <|-- Application : extends class ApplicationField link ApplicationField \"../entities/applicationfield\" App <|-- ApplicationField : extends Properties \u00b6 These attributes are specific to instances of App (and all of its subtypes). appId \u00b6 Unique identifier for the App", "metadata": {"source_url": "https://developer.atlan.com/models/app/", "title": "App - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "s are specific to instances of App (and all of its subtypes). appId \u00b6 Unique identifier for the App asset from the source system. Relationships \u00b6 The following illustrates how the various App assets inter-relate with each other: erDiagram Connection ||..o{ Application : \"\" Application ||..o{ ApplicationField : \"applicationChildFields\" Was this page helpful? Thanks for your feedback! Thanks for you", "metadata": {"source_url": "https://developer.atlan.com/models/app/", "title": "App - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "tionField : \"applicationChildFields\" Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/app/", "title": "App - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "On this page Who can do this? You will probably need your Sigma administrator to complete these steps - you may not have access yourself. Identify your organization's cloud \u200b You will need your organization's cloud information to determine the endpoint while authenticating in Atlan. To identify your organization's cloud: Open your Sigma account. In the top right of the screen, click your profile a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/how-tos/set-up-sigma", "title": "Set up Sigma | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "organization's cloud: Open your Sigma account. In the top right of the screen, click your profile avatar and then click Administration to open your Account page. On the Account page, under Site in General Settings , view the cloud information. Create an API token and client ID \u200b To create an API token and client ID: Open your Sigma account. In the top right of the screen, click your profile avata", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/how-tos/set-up-sigma", "title": "Set up Sigma | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ken and client ID: Open your Sigma account. In the top right of the screen, click your profile avatar and then click Administration . From the left menu of the Administration page, click Developer Access . In the top right of the Developer Access page, click the Create New button. In the Create client credentials dialog, for Select privileges , click the Rest API checkbox, and then enter the follo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/how-tos/set-up-sigma", "title": "Set up Sigma | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "nt credentials dialog, for Select privileges , click the Rest API checkbox, and then enter the following details: For Name , enter a meaningful name. For Owner , select the user you would like to associate with the token. Click Create to finish creating the API token. Once prompted, click Copy to copy and paste your API key secret in a secure location. danger The secret cannot be retrieved once th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/how-tos/set-up-sigma", "title": "Set up Sigma | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "py and paste your API key secret in a secure location. danger The secret cannot be retrieved once this popover is closed. Your newly created API token will be listed in the Developer Access page. Hover over the token\u2019s Client ID and click Copy . Both the API token and the client ID are required for authentication in Atlan. Verify necessary permissions \u200b Ensure that the owner associated with the AP", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/how-tos/set-up-sigma", "title": "Set up Sigma | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "authentication in Atlan. Verify necessary permissions \u200b Ensure that the owner associated with the API token has the following permissions: Can View permission for all the Sigma workbooks and datasets you want to crawl. Can Use permission for all the Sigma connections used in the workbooks and datasets. Grant permissions \u200b To grant permissions, follow the instructions in these links: Workbooks and", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/how-tos/set-up-sigma", "title": "Set up Sigma | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ts. Grant permissions \u200b To grant permissions, follow the instructions in these links: Workbooks and datasets Connections Identify your organization's cloud Create an API token and client ID Verify necessary permissions Grant permissions", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/how-tos/set-up-sigma", "title": "Set up Sigma | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "RELATIONSHIP_CREATE event type \u00b6 RELATIONSHIP_CREATE events are emitted whenever a relationship between assets is created in Atlan. One RELATIONSHIP_CREATE event is emitted for each relationship that is created So, for example, if the Snowflake crawler runs and creates: 1 connection 3 databases 10 schemas 500 tables 15,000 columns Atlan will emit 15,510 RELATIONSHIP_CREATE events \u2014 one for each re", "metadata": {"source_url": "https://developer.atlan.com/events/types/relationship_create/", "title": "RELATIONSHIP_CREATE event type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "chemas 500 tables 15,000 columns Atlan will emit 15,510 RELATIONSHIP_CREATE events \u2014 one for each relationship between these assets (columns to tables, tables to schemas, schemas to databases). The details of the created relationship will be in the message.relationship portion of the event payload. The event includes minimal information about each entity in the relationship Note that the event onl", "metadata": {"source_url": "https://developer.atlan.com/events/types/relationship_create/", "title": "RELATIONSHIP_CREATE event type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "The event includes minimal information about each entity in the relationship Note that the event only includes the minimal information needed to obtain further details about each entity in the relationship. If you need further details about the entities in the relationship, you will need to look these up from the entity details provided. Example RELATIONSHIP_CREATE event 1 2 3 4 5 6 7 8 9 10 11 12", "metadata": {"source_url": "https://developer.atlan.com/events/types/relationship_create/", "title": "RELATIONSHIP_CREATE event type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "se up from the entity details provided. Example RELATIONSHIP_CREATE event 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 { \"source\" : {}, \"version\" : { \"version\" : \"1.0.0\" , \"versionParts\" : [ 1 ] }, \"msgCompressionKind\" : \"NONE\" , \"msgSplitIdx\" : 1 , \"msgSplitCount\" : 1 , \"msgSourceIP\" : \"10.110.57.7\" , \"msgCreatedBy\" : \"\" , \"m", "metadata": {"source_url": "https://developer.atlan.com/events/types/relationship_create/", "title": "RELATIONSHIP_CREATE event type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ", \"msgSplitIdx\" : 1 , \"msgSplitCount\" : 1 , \"msgSourceIP\" : \"10.110.57.7\" , \"msgCreatedBy\" : \"\" , \"msgCreationTime\" : 1654335433548 , \"spooled\" : false , \"message\" : { \"type\" : \"ENTITY_NOTIFICATION_V2\" , \"relationship\" : { \"typeName\" : \"table_columns\" , \"guid\" : \"d13e89b6-23ac-46fc-9edb-9fb720a63468\" , \"status\" : \"ACTIVE\" , \"propagateTags\" : \"ONE_TO_TWO\" , \"label\" : \"__Table.columns\" , \"end1\" : {", "metadata": {"source_url": "https://developer.atlan.com/events/types/relationship_create/", "title": "RELATIONSHIP_CREATE event type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "\" , \"status\" : \"ACTIVE\" , \"propagateTags\" : \"ONE_TO_TWO\" , \"label\" : \"__Table.columns\" , \"end1\" : { \"guid\" : \"1f333d39-f8a3-42ad-8b60-4274bb262c38\" , \"typeName\" : \"Table\" , \"uniqueAttributes\" : { \"qualifiedName\" : \"default/postgres/1653533778/demo_db/demo/tableA\" } }, \"end2\" : { \"guid\" : \"a08ae595-f997-4188-94d9-9d3beec69c63\" , \"typeName\" : \"Column\" , \"uniqueAttributes\" : { \"qualifiedName\" : \"defa", "metadata": {"source_url": "https://developer.atlan.com/events/types/relationship_create/", "title": "RELATIONSHIP_CREATE event type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "997-4188-94d9-9d3beec69c63\" , \"typeName\" : \"Column\" , \"uniqueAttributes\" : { \"qualifiedName\" : \"default/postgres/1653533778/demo_db/demo/tableA/columnA\" } } }, \"operationType\" : \"RELATIONSHIP_CREATE\" , \"eventTime\" : 1654335432959 } } Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. B", "metadata": {"source_url": "https://developer.atlan.com/events/types/relationship_create/", "title": "RELATIONSHIP_CREATE event type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "eedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/events/types/relationship_create/", "title": "RELATIONSHIP_CREATE event type - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "Lineage model \u00b6 Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand how to manage lineage in Atlan. For that, we would suggest starting with the lineage snippets . These are the model elements in Atlan related to lineage. classDiagram direction RL class Asset { <<abstract>> } link Asset \"../entities/as", "metadata": {"source_url": "https://developer.atlan.com/models/lineage/", "title": "Lineage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "elated to lineage. classDiagram direction RL class Asset { <<abstract>> } link Asset \"../entities/asset\" class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Referenceable <|-- Asset : extends class Process link Process \"../lineage\" Asset <|-- Process : extends class BIProcess link BIProcess \"../entities/biprocess\" Process <|-- BIProcess : extends class DbtProcess li", "metadata": {"source_url": "https://developer.atlan.com/models/lineage/", "title": "Lineage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "IProcess link BIProcess \"../entities/biprocess\" Process <|-- BIProcess : extends class DbtProcess link DbtProcess \"../entities/dbtprocess\" Process <|-- DbtProcess : extends class ColumnProcess link ColumnProcess \"../entities/columnprocess\" Process <|-- ColumnProcess : extends class DbtColumnProcess link DbtColumnProcess \"../entities/dbtcolumnprocess\" ColumnProcess <|-- DbtColumnProcess : extends c", "metadata": {"source_url": "https://developer.atlan.com/models/lineage/", "title": "Lineage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "link DbtColumnProcess \"../entities/dbtcolumnprocess\" ColumnProcess <|-- DbtColumnProcess : extends class SparkJob link SparkJob \"../entities/sparkjob\" Spark <|-- SparkJob : extends link Spark \"../spark\" class Spark { <<abstract>> } Catalog <|-- Spark : extends class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Asset <|-- Catalog : extends Properties \u00b6 These attributes are specific t", "metadata": {"source_url": "https://developer.atlan.com/models/lineage/", "title": "Lineage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "alog \"../entities/catalog\" Asset <|-- Catalog : extends Properties \u00b6 These attributes are specific to instances of Process (and all of its subtypes). additionalEtlContext \u00b6 TBC ast \u00b6 TBC code \u00b6 TBC sql \u00b6 TBC Relationships \u00b6 The following illustrates how the various pieces of lineage inter-relate with each other: erDiagram Process ||--o{ ColumnProcess : columnProcesses Process }o--|{ Asset : inputs", "metadata": {"source_url": "https://developer.atlan.com/models/lineage/", "title": "Lineage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "h each other: erDiagram Process ||--o{ ColumnProcess : columnProcesses Process }o--|{ Asset : inputs Process }o--|{ Asset : outputs Process }o--o{ MatillionComponent: matillionComponent Process ||--o{ SparkJob : sparkJobs ColumnProcess }o--|{ Asset : inputs ColumnProcess }o--|{ Asset : outputs Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by u", "metadata": {"source_url": "https://developer.atlan.com/models/lineage/", "title": "Lineage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "his page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/lineage/", "title": "Lineage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "AuthService \u00b6 Model to store auth service in Atlas Complete reference This is a complete reference for the AuthService object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation pattern", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "amples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. AuthService inherits its attributes and relationships from these other types: classDiagram direction RL class AuthService link AuthService \"../authservice\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- AuthService : extends class Referenceable { <<abstract>> } link Referenceable \"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "../asset\" Asset <|-- AuthService : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from AuthService 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "\u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom me", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "erent name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. crea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ser or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. In", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "eletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readabl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "mes Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "e the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "s all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "d for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "At \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materializ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "rialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Wheth", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "he last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the jo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "bt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLast", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "m the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ons were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable tota", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "his asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "t. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "e \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that ma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that mater", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "thing under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "eFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "flow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "is asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "er this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "sset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "\u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to repre", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "gs \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateU", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "eUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "me of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a diffe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "r not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. owner", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "ray of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseco", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "t. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "LastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "hat accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a differe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "dRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "is asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "orkspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "nly used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of AuthService (and all of its subtypes). authServiceConfig \u00b6 TBC authServiceIsEnabled \u00b6 TBC authServicePolicyLastSync \u00b6 TBC authServiceType \u00b6 TBC tagService \u00b6 TBC Relationships \u00b6 Inherited relationship", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "cePolicyLastSync \u00b6 TBC authServiceType \u00b6 TBC tagService \u00b6 TBC Relationships \u00b6 Inherited relationships These relationships are inherited from AuthService 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "t. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( R", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "ySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos Was this page helpful? Thanks for your feedback! Thanks for you", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "ionshipTos user_def_relationship_tos Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/authservice/", "title": "AuthService - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "Events when an asset is deleted \u00b6 When an asset is deleted in Atlan, the following event is emitted. ENTITY_DELETE \u00b6 Atlan always emits an ENTITY_DELETE event when an asset is deleted. The details in the event are for the asset that was deleted. No entity update or relationship deletion events Note that there are no ENTITY_UPDATE events for any related assets, nor any events about any relationship", "metadata": {"source_url": "https://developer.atlan.com/events/scenarios/asset-delete/", "title": "Asset is deleted - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "that there are no ENTITY_UPDATE events for any related assets, nor any events about any relationships being deleted. In the case of a soft-delete, the relationship actually still exists (just in a soft-deleted state). Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/events/scenarios/asset-delete/", "title": "Asset is deleted - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Cross-workspace extraction Frequently asked questions about Databricks cross-workspace extraction setup and configuration. Cross-workspace extraction issues Troubleshoot common issues in Databricks cross-workspace extraction with error, cause, and solution guidance. Databricks Integrate, catalog, and govern Databricks assets in Atlan. Databricks Data Quality Studio Set up and configure Databricks", "metadata": {"source_url": "https://docs.atlan.com/tags/databricks", "title": "8 docs tagged with \"databricks\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "d govern Databricks assets in Atlan. Databricks Data Quality Studio Set up and configure Databricks for data quality monitoring through Atlan. Enable data quality on connection Enable and configure data quality for your Databricks connection in Atlan. Set up cross-workspace extraction Configure a single service principal to crawl metadata from all workspaces within a Databricks metastore using sys", "metadata": {"source_url": "https://docs.atlan.com/tags/databricks", "title": "8 docs tagged with \"databricks\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ngle service principal to crawl metadata from all workspaces within a Databricks metastore using system tables Set up Databricks Configure Databricks to enable data quality monitoring through Atlan. Setup and configuration Common questions about Databricks data quality setup and configuration.", "metadata": {"source_url": "https://docs.atlan.com/tags/databricks", "title": "8 docs tagged with \"databricks\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "SisenseFolder \u00b6 Instance of a Sisense folder in Atlan. Complete reference This is a complete reference for the SisenseFolder object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "mic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. SisenseFolder inherits its attributes and relationships from these other types: classDiagram direction RL class SisenseFolder link SisenseFolder \"../sisensefolder\" class Sisense { <<abstract>> } link Sisense \"../sisense\" Sisense <|-- SisenseFolder : extends class BI { <<abstract>> } link BI", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "> } link Sisense \"../sisense\" Sisense <|-- SisenseFolder : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Sisense : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset :", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ass Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from SisenseFolder 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_ta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ". classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "m_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset wa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "tedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on delet", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "y You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ngTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "\u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief titl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "sage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total numbe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "tAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ta quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "L of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "is asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunG", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources we", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "btJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ob that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "bLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "un \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "t. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonito", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "etMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "es of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ssetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last update", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "et is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "BC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom orde", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "Name \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "et ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCost", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopula", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "nt name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "tal cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "urceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of uniq", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ent name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the user", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "o have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "scription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of SisenseFolder (and all of its subtypes). sisenseFolderParentFolderQualifiedName \u00b6 Unique name of the parent folder in which this folder exists. Relationships \u00b6 Inherited relationships These relationships are inherited from SisenseFolder 's su", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": ". Relationships \u00b6 Inherited relationships These relationships are inherited from SisenseFolder 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "d asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "tified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "s ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "aCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of SisenseFolder (and all of its subtypes). sisenseChildFolders ( SisenseFolder ) \u00b6 Sub-folders that exist wi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "eFolder (and all of its subtypes). sisenseChildFolders ( SisenseFolder ) \u00b6 Sub-folders that exist within this folder. sisenseDashboards ( SisenseDashboard ) \u00b6 Dashboards that exist within this folder. sisenseParentFolder ( SisenseFolder ) \u00b6 Folder in which this sub-folder exists. sisenseWidgets ( SisenseWidget ) \u00b6 Widgets that exist within this folder. Was this page helpful? Thanks for your feedba", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "senseWidget ) \u00b6 Widgets that exist within this folder. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sisensefolder/", "title": "SisenseFolder - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "On this page Before running the Salesforce crawler , you can run preflight checks to perform the necessary technical validations. The following preflight checks will be completed: Organization count check \u200b \u2705 Organization Count check passed. Organization ID:<organization ID> Organization Name: <organization name> \u274c Check failed or sObject type 'Organization' is not supported Folder count check \u200b \u2705", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/references/preflight-checks-for-salesforce", "title": "Preflight checks for Salesforce | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "nization name> \u274c Check failed or sObject type 'Organization' is not supported Folder count check \u200b \u2705 Folder Count check passed. Total folders: <count> \u274c Check failed Report count check \u200b \u2705 Report Count check passed. Total reports: <count> \u274c Check failed or MALFORMED_QUERY: Invalid SOQL query. Please check the syntax and try again. or INVALID_TYPE : sObject type 'Report\u2019 is not supported Dashboard", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/references/preflight-checks-for-salesforce", "title": "Preflight checks for Salesforce | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "check the syntax and try again. or INVALID_TYPE : sObject type 'Report\u2019 is not supported Dashboard count check \u200b \u2705 Dashboard Count check passed. Total dashboards: <count> \u274c Check failed or INVALID_TYPE : sObject type 'Dashboard\u2019 is not supported Salesforce object count check \u200b \u2705 Salesforce Object Count check passed. Total SObjects: <count> \u274c Check failed Field count check \u200b \u2705 Field Count check pa", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/references/preflight-checks-for-salesforce", "title": "Preflight checks for Salesforce | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ount check passed. Total SObjects: <count> \u274c Check failed Field count check \u200b \u2705 Field Count check passed. Total organization fields: <count> \u274c Check failed or MALFORMED_QUERY: Invalid SOQL query. Please check the syntax and try again. or INVALID_TYPE : sObject type 'EntityDefinition\u2019 is not supported Organization count check Folder count check Report count check Dashboard count check Salesforce ob", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/references/preflight-checks-for-salesforce", "title": "Preflight checks for Salesforce | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "d Organization count check Folder count check Report count check Dashboard count check Salesforce object count check Field count check", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/references/preflight-checks-for-salesforce", "title": "Preflight checks for Salesforce | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "On this page Note that object tagging in Snowflake currently requires Enterprise Edition or higher . Atlan enables you to import your Snowflake tags , update your Snowflake assets with the imported tags, and push the tag updates back to Snowflake: Import tags - crawl Snowflake tags from Snowflake to Atlan Reverse sync - sync Snowflake tag updates from Atlan to Snowflake Once you've imported your S", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "Atlan Reverse sync - sync Snowflake tag updates from Atlan to Snowflake Once you've imported your Snowflake tags to Atlan: Your Snowflake assets in Atlan are automatically enriched with their Snowflake tags. Imported Snowflake tags are mapped to corresponding Atlan tags through case-insensitive name match - multiple Snowflake tags can be matched to a single tag in Atlan. You can also attach Snowf", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "e match - multiple Snowflake tags can be matched to a single tag in Atlan. You can also attach Snowflake tags , including tag values, to your Snowflake assets in Atlan - allowing you to categorize your assets at a more granular level. Atlan supports: Allowed values : attach an allowed value from a predefined list of values imported from Snowflake. Tag values: enter any value in Atlan while attachi", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "redefined list of values imported from Snowflake. Tag values: enter any value in Atlan while attaching or editing imported Snowflake tags on an asset. You can enable reverse sync to push any tag updates for your Snowflake assets back to Snowflake - including allowed and tag values added to assets in Atlan. You can filter your assets by Snowflake tags and tag and allowed values. Did you know? Enabl", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Atlan. You can filter your assets by Snowflake tags and tag and allowed values. Did you know? Enabling reverse sync only updates existing tags in Snowflake. It neither creates nor deletes any tags in Snowflake. Prerequisites \u200b Did you know? Additional privileges are only required when using the information schema method for fetching metadata. This is because Snowflake stores all tag objects in th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ormation schema method for fetching metadata. This is because Snowflake stores all tag objects in the ACCOUNT_USAGE schema. If you're using the account usage method to crawl metadata in Atlan or you have configured the Snowflake miner , any permissions required are already set. Account usage method \u200b Before you can import tags from Snowflake, you need to do the following: Create tags or have exist", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "\u200b Before you can import tags from Snowflake, you need to do the following: Create tags or have existing tags in Snowflake. Grant the same permissions as required for crawling Snowflake assets to import tags and push updated tags to Snowflake. Information schema method \u200b Before you can import tags from Snowflake, you need to do the following: Create tags or have existing tags in Snowflake. Grant ad", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "om Snowflake, you need to do the following: Create tags or have existing tags in Snowflake. Grant additional permissions to import tags from Snowflake. Grant additional permissions to push updated tags to Snowflake. Import Snowflake tags to Atlan \u200b Who can do this? You need to be an admin user in Atlan to import Snowflake tags to Atlan. You also need to work with your Snowflake administrator to gr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "lan to import Snowflake tags to Atlan. You also need to work with your Snowflake administrator to grant additional permissions to import tags from Snowflake - you may not have access yourself. You can import your Snowflake tags to Atlan through one-way tag sync. The synced Snowflake tags are matched to corresponding tags in Atlan through case-insensitive name match and your Snowflake assets are en", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "to corresponding tags in Atlan through case-insensitive name match and your Snowflake assets are enriched with their synced tags from Snowflake. To import Snowflake tags to Atlan, you can either: Create a new Snowflake workflow and configure the crawler to import tags. Modify the crawler's configuration for an existing Snowflake workflow to change Import Tags to Yes . If you subsequently modify t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ation for an existing Snowflake workflow to change Import Tags to Yes . If you subsequently modify the workflow to disable tag import, for any tags already imported, Atlan preserves those tags. Once the crawler has completed running, tags imported from Snowflake are available to use for tagging assets! \ud83c\udf89 View Snowflake tags in Atlan \u200b Once you've imported your Snowflake tags, you can view and mana", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ts! \ud83c\udf89 View Snowflake tags in Atlan \u200b Once you've imported your Snowflake tags, you can view and manage your Snowflake tags in Atlan. To view Snowflake tags: From the left menu of any screen, click Governance . Under the Governance heading of the _Governance cente_r, click Tags . (Optional) Under Tags , click the funnel icon to filter tags by source type. Click Snowflake to filter for tags imported", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "s , click the funnel icon to filter tags by source type. Click Snowflake to filter for tags imported from Snowflake. From the left menu under Tags , select a synced tag - synced tags display the Snowflake \u2744\ufe0f icon next to the tag name. In the Overview section, you can view a total count of synced Snowflake tags. To the right of Overview , click Synced tags to view additional details - including tag", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "wflake tags. To the right of Overview , click Synced tags to view additional details - including tag name, description, tag values, total count of linked assets, connection, database, and schema names, and timestamp for last synced. (Optional) Click the Linked assets tab to view linked assets for your Snowflake tag. (Optional) In the top right, click the pencil icon to add a description and change", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ur Snowflake tag. (Optional) In the top right, click the pencil icon to add a description and change the tag icon . You can't rename tags synced from Snowflake. Push tag updates to Snowflake \u200b Who can do this? Any admin or member user in Atlan can configure reverse sync for tag updates to Snowflake. You also need to work with your Snowflake administrator to grant additional permissions to push upd", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "You also need to work with your Snowflake administrator to grant additional permissions to push updates - you may not have access yourself. Did you know? Reverse sync is currently only available for imported Snowflake tags in Atlan. The imported tags display a Snowflake \u2744\ufe0f icon next to the tag name. If using the account usage method , expect a data latency of up to 3 hours for reverse tag sync to", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": ". If using the account usage method , expect a data latency of up to 3 hours for reverse tag sync to be successful. You can enable reverse sync for your imported Snowflake tags in Atlan and push all tag updates for your Snowflake assets back to source. Once you have enabled reverse sync, any Snowflake assets with tags updated in Atlan are also updated in Snowflake. To enable reverse sync for impor", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ke assets with tags updated in Atlan are also updated in Snowflake. To enable reverse sync for imported Snowflake tags: From the left menu of any screen, click Governance . Under the Governance heading of the _Governance cente_r, click Tags . (Optional) Under Tags , click the funnel icon to filter tags by source type. Click Snowflake to filter for tags imported from Snowflake. In the left menu und", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ags by source type. Click Snowflake to filter for tags imported from Snowflake. In the left menu under Tags , select a synced Snowflake tag - synced tags display the Snowflake \u2744\ufe0f icon next to the tag name. On your selected tag page, to the right of Overview , click Synced tags . Under Synced tags , in the upper right, turn on Enable reverse sync to synchronize tag updates from Atlan to Snowflake.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "in the upper right, turn on Enable reverse sync to synchronize tag updates from Atlan to Snowflake. In the advanced settings, you can also enable concatenation to support multiple tag values for a single column. For detailed information about multiple tag values and concatenation, see Multiple tag values and concatenation . In the corresponding confirmation dialog, click Yes, enable it to enable r", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "alues and concatenation . In the corresponding confirmation dialog, click Yes, enable it to enable reverse tag sync or click Cancel . Now when you attach Snowflake tags to your Snowflake assets in Atlan, these tag updates are also pushed to Snowflake! \ud83c\udf89 Did you know? Enabling reverse sync won't trigger any updates in Snowflake until synced tags are attached to Snowflake assets in Atlan. For any qu", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ger any updates in Snowflake until synced tags are attached to Snowflake assets in Atlan. For any questions about managing Snowflake tags, head over here . Prerequisites Import Snowflake tags to Atlan View Snowflake tags in Atlan Push tag updates to Snowflake", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/how-tos/manage-snowflake-tags", "title": "Manage Snowflake tags | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "Cloudera Impala Integrate, catalog, and govern Cloudera Impala assets in Atlan. CrateDB Integrate, catalog, and govern CrateDB assets in Atlan. PrestoSQL Integrate, catalog, and govern PrestoSQL assets in Atlan. Trino Integrate, catalog, and govern Trino assets in Atlan.", "metadata": {"source_url": "https://docs.atlan.com/tags/sql", "title": "4 docs tagged with \"sql\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "CogniteAsset \u00b6 Instance of a Cognite asset in Atlan. Complete reference This is a complete reference for the CogniteAsset object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. CogniteAsset inherits its attributes and relationships from these other types: classDiagram direction RL class CogniteAsset link CogniteAsset \"../cogniteasset\" class Cognite { <<abstract>> } link Cognite \"../cognite\" Cognite <|-- CogniteAsset : extends class SaaS { <<abstract>> } link SaaS \"..", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "k Cognite \"../cognite\" Cognite <|-- CogniteAsset : extends class SaaS { <<abstract>> } link SaaS \"../saas\" SaaS <|-- Cognite : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SaaS : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from CogniteAsset 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "t. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "om_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "atedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on dele", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ly You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "\u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief tit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ssage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "t was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total numb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "etAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo fo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ata quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in whic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "RL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "his asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "n git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "d this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "DbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "\u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the las", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last upda", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "obLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "Run \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "ct. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "o incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "setMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Mont", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "les of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "t assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Statu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "tification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "set is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom ord", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "wName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "set ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopul", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ent name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "otal cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers sour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of uni", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "rent name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "ho have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "escription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "sers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) Relationships \u00b6 Inherited relationships These relationships are inherited from CogniteAsset 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 Appli", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "plication ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContrac", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "t ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaCh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "\u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirf", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "\u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( Model", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "tributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "uced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of CogniteAsset (and all of its subtypes). cognite3dmodels ( Cognite3DModel ) \u00b6 3D models that exist within this asset. cogniteEvents ( CogniteEvent ) \u00b6 Events that exist within this asset. cogniteFiles ( CogniteFile ) \u00b6 Files that exist within this asset. cogniteSequences ( CogniteSequence ) \u00b6 Seq", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "les ( CogniteFile ) \u00b6 Files that exist within this asset. cogniteSequences ( CogniteSequence ) \u00b6 Sequences that exist within this asset. cogniteTimeseries ( CogniteTimeSeries ) \u00b6 Time series that exist within this asset. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cogniteasset/", "title": "CogniteAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "MCRuleComparison \u00b6 Detailed information about the comparison logic of a Monte Carlo rule. Complete reference This is a complete reference for the MCRuleComparison struct in Atlan, showing all of its embedded properties. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patter", "metadata": {"source_url": "https://developer.atlan.com/models/structs/mcrulecomparison/", "title": "MCRuleComparison - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "xamples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Embedded properties \u00b6 These are the attributes embedded within each instance of the MCRuleComparison struct in an asset: mcRuleComparisonType \u00b6 Type of comparison, for example threshold. mcRuleComparisonField \u00b6 Field being compared. mcRuleComparisonMetric \u00b6 Metric being compared. mcRuleCompariso", "metadata": {"source_url": "https://developer.atlan.com/models/structs/mcrulecomparison/", "title": "MCRuleComparison - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "parisonField \u00b6 Field being compared. mcRuleComparisonMetric \u00b6 Metric being compared. mcRuleComparisonOperator \u00b6 Operator used for the comparison, for example greater than (GT). mcRuleComparisonThreshold \u00b6 Threshold being compared. mcRuleComparisonIsThresholdRelative \u00b6 Whether the threshold comparison is relative (true) or absolute (false). Was this page helpful? Thanks for your feedback! Thanks fo", "metadata": {"source_url": "https://developer.atlan.com/models/structs/mcrulecomparison/", "title": "MCRuleComparison - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "n is relative (true) or absolute (false). Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/structs/mcrulecomparison/", "title": "MCRuleComparison - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "AzureServiceBusNamespace \u00b6 Instances of AzureServiceBusNamespace in Atlan. Complete reference This is a complete reference for the AzureServiceBusNamespace object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of com", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "art with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. AzureServiceBusNamespace inherits its attributes and relationships from these other types: classDiagram direction RL class AzureServiceBusNamespace link AzureServiceBusNamespace \"../azureservicebusnamespace\" class AzureServiceBus { <<abstract>> } link AzureSer", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "rviceBusNamespace \"../azureservicebusnamespace\" class AzureServiceBus { <<abstract>> } link AzureServiceBus \"../azureservicebus\" AzureServiceBus <|-- AzureServiceBusNamespace : extends class EventStore { <<abstract>> } link EventStore \"../eventstore\" EventStore <|-- AzureServiceBus : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- EventStore : extends class Asset { <<", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "atalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- EventStore : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from AzureServiceBusNamespace 's supertypes (shown above): ty", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "perties These attributes are inherited from AzureServiceBusNamespace 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values def", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": ", see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "nly You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "nds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ionNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "etails of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualif", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who admini", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "inister this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQua", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "FieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "loFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the envir", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "bt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "s. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNoti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ast run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total du", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in millisecon", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total durati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "terialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "setDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is schedule", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "d \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "btJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy fo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "n which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflow", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "iated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte C", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "ist of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident sever", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ncident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "th this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "cMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TB", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "daDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detai", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ication. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "n SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whethe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "s (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "coverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "Run \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "rity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "st expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 Li", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "rceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadP", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "rceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 L", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "fferent name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. sta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "liseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "sset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets con", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "erface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) azureServiceBusNamespaceName \u00b6 Simple name of the AzureServiceBus Namespace in which this asset exists. azureSe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "eBusNamespaceName \u00b6 Simple name of the AzureServiceBus Namespace in which this asset exists. azureServiceBusNamespaceQualifiedName \u00b6 Unique name of the AzureServiceBus Namespace in which this asset exists. azureServiceBusSchemaQualifiedName \u00b6 Unique name of the AzureServiceBus Schema in which this asset exists. Relationships \u00b6 Inherited relationships These relationships are inherited from AzureSer", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "sset exists. Relationships \u00b6 Inherited relationships These relationships are inherited from AzureServiceBusNamespace 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ld ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "dent ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a diff", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "\u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ties ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of AzureServiceBusNamespace (and all of its subtypes). azureServiceBusTopics ( AzureSer", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "to instances of AzureServiceBusNamespace (and all of its subtypes). azureServiceBusTopics ( AzureServiceBusTopic ) \u00b6 AzureServiceBusTopic assets contained within this AzureServiceBusNamespace. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebusnamespace/", "title": "AzureServiceBusNamespace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "DataContract \u00b6 Data contract for an asset. Complete reference This is a complete reference for the DataContract object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Data", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DataContract inherits its attributes and relationships from these other types: classDiagram direction RL class DataContract link DataContract \"../datacontract\" class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- DataContract : extends class Asset { <<abstract>> } link Asset \"../asset\"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "\"../catalog\" Catalog <|-- DataContract : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DataContract 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-un", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ted from DataContract 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "es \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or accoun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "t. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "et was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use class", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "s that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link te", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "sset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "tenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (ep", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "s specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "icationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "es \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anoma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "led check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "lliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was l", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ssetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "d ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last ru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "t in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "unDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status me", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "nTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "e job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "e job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ed this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCri", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "ticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "que identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncide", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "cidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "onte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "etMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "arlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ble descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the con", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as cr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "dName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "omain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "llback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCrea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "ate an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": ") Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ns at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserLi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "rent name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "t queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ource_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to creat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "l operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. sta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "ho last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "Details starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of DataContract (and all of its subtypes). dataContractAssetGuid \u00b6 Unique identifier of the asset associated with t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "(and all of its subtypes). dataContractAssetGuid \u00b6 Unique identifier of the asset associated with this data contract. dataContractJson \u00b6 (Deprecated) Replaced by dataContractSpec attribute. dataContractSpec \u00b6 Actual content of the contract in YAML string format. Any changes to this string should create a new instance (with new sequential version number). dataContractVersion \u00b6 Version of the contr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "eate a new instance (with new sequential version number). dataContractVersion \u00b6 Version of the contract. Relationships \u00b6 Inherited relationships These relationships are inherited from DataContract 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationFi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "n ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "Contract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "rt. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": ") Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of Data", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of DataContract (and all of its subtypes). dataContractAssetCertified ( Asset ) \u00b6 Asset this contract controls. dataContractAssetLatest ( Asset ) \u00b6 Asset this contract controls or will control. dataContractNextVersion ( DataContract ) \u00b6 Data contract instance that holds the next version of this contract. d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "extVersion ( DataContract ) \u00b6 Data contract instance that holds the next version of this contract. dataContractPreviousVersion ( DataContract ) \u00b6 Data contract instance that holds the previous version of this contract. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datacontract/", "title": "DataContract - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "PowerBIDataflow \u00b6 Instance of a Power BI dataflow in Atlan. Dataflows are reusable transformation logic that can be shared by many datasets and reports inside Power BI. Complete reference This is a complete reference for the PowerBIDataflow object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snipp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "onship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. PowerBIDataflow inherits its attributes and relationships from these other types: classDiagram direction RL class PowerBIDataflow link PowerBIDataflow \"../powerbidataflow\" cla", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "types: classDiagram direction RL class PowerBIDataflow link PowerBIDataflow \"../powerbidataflow\" class PowerBI { <<abstract>> } link PowerBI \"../powerbi\" PowerBI <|-- PowerBIDataflow : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- PowerBI : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "alog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from PowerBIDataflow 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-uniq", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "rom PowerBIDataflow 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "\u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classif", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link term", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "et. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "nation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "tion assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "\u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "d check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ssetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "iseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was las", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "etDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJob", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "is asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "n dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in db", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobL", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "Duration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status mess", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "his asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "otalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCrite", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "cLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "e identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncident", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "dentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "te Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "McMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of pol", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "lo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of ta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "setSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Ti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "e descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the conne", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "onnection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as craw", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "ame \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false).", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "rough the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in mi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "st synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "back for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "r sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Ti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "e an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_reco", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "sset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "nt name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "rce_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in whi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "tails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for ce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) powerBIEndorsement \u00b6 Endorsement status of this asset, in Power BI. powerBIFormatString \u00b6 Format of this asset, as specified in the FORMAT_STRING of the MDX cel", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "wer BI. powerBIFormatString \u00b6 Format of this asset, as specified in the FORMAT_STRING of the MDX cell property. powerBIIsHidden \u00b6 Whether this asset is hidden in Power BI (true) or not (false). powerBITableQualifiedName \u00b6 Unique name of the Power BI table in which this asset exists. These attributes are specific to instances of PowerBIDataflow (and all of its subtypes). powerBIDataflowRefreshSched", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "are specific to instances of PowerBIDataflow (and all of its subtypes). powerBIDataflowRefreshScheduleFrequency \u00b6 Refresh Schedule frequency for a PowerBI Dataflow. powerBIDataflowRefreshScheduleTimeZone \u00b6 Time zone for the refresh schedule set for a PowerBI Dataflow. powerBIDataflowRefreshScheduleTimes \u00b6 Time for the refresh schedule set for a PowerBI Dataflow. webUrl \u00b6 Deprecated. See 'sourceUr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "Times \u00b6 Time for the refresh schedule set for a PowerBI Dataflow. webUrl \u00b6 Deprecated. See 'sourceUrl' instead. workspaceQualifiedName \u00b6 Unique name of the workspace in which this dataflow exists. Relationships \u00b6 Inherited relationships These relationships are inherited from PowerBIDataflow 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "types: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. l", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "\u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "fRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( Mo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as outpu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "et is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of PowerBIDataflow (and all of its subtypes). datasets ( PowerBIDataset ) \u00b6 Datasets used by this dataflow. powerBIDataflowChildren ( PowerBIDataflow ) \u00b6 Child Dataflows to this PowerBI Dataflow. powerBIDataflowE", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "rBIDataflowChildren ( PowerBIDataflow ) \u00b6 Child Dataflows to this PowerBI Dataflow. powerBIDataflowEntityColumns ( PowerBIDataflowEntityColumn ) \u00b6 PowerBI Dataflow Entity Columns that exist within this Dataflow. powerBIDataflowParents ( PowerBIDataflow ) \u00b6 Parent Dataflows to this PowerBI Dataflow. powerBIDatasources ( PowerBIDatasource ) \u00b6 PowerBI Datasources that are associated with this Dataflo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "powerBIDatasources ( PowerBIDatasource ) \u00b6 PowerBI Datasources that are associated with this Dataflow. powerBIProcesses ( Process ) \u00b6 Lineage process that associates this PowerBI Dataflow. tables ( PowerBITable ) \u00b6 PowerBI Tables that are associated with this Dataflow. workspace ( PowerBIWorkspace ) \u00b6 Workspace in which this dataflow exists. Was this page helpful? Thanks for your feedback! Thanks", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "\u00b6 Workspace in which this dataflow exists. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/powerbidataflow/", "title": "PowerBIDataflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "QuickSight model \u00b6 Base class for QuickSight assets. Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand how to manage QuickSight assets in Atlan. For that, we would suggest starting with either: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step im", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. classDiagram direction RL class QuickSight { <<abstract>> } link QuickSight \"../quicksight\" class BI { <<abstract>> } link BI \"../entities/bi\" BI <|-- QuickSight : extends class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Catalog <|-- BI : extends class Asset {", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Referenceable <|-- Asset : extends class QuickSightFolder link QuickSightFolder \"../entities/quicksightfolder\" QuickSight <|-- QuickSightFol", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "QuickSightFolder link QuickSightFolder \"../entities/quicksightfolder\" QuickSight <|-- QuickSightFolder : extends class QuickSightDashboardVisual link QuickSightDashboardVisual \"../entities/quicksightdashboardvisual\" QuickSight <|-- QuickSightDashboardVisual : extends class QuickSightAnalysisVisual link QuickSightAnalysisVisual \"../entities/quicksightanalysisvisual\" QuickSight <|-- QuickSightAnaly", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "link QuickSightAnalysisVisual \"../entities/quicksightanalysisvisual\" QuickSight <|-- QuickSightAnalysisVisual : extends class QuickSightDatasetField link QuickSightDatasetField \"../entities/quicksightdatasetfield\" QuickSight <|-- QuickSightDatasetField : extends class QuickSightAnalysis link QuickSightAnalysis \"../entities/quicksightanalysis\" QuickSight <|-- QuickSightAnalysis : extends class Quic", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ghtAnalysis \"../entities/quicksightanalysis\" QuickSight <|-- QuickSightAnalysis : extends class QuickSightDashboard link QuickSightDashboard \"../entities/quicksightdashboard\" QuickSight <|-- QuickSightDashboard : extends class QuickSightDataset link QuickSightDataset \"../entities/quicksightdataset\" QuickSight <|-- QuickSightDataset : extends Properties \u00b6 These attributes are specific to instances", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "QuickSight <|-- QuickSightDataset : extends Properties \u00b6 These attributes are specific to instances of QuickSight (and all of its subtypes). quickSightId \u00b6 TBC quickSightSheetId \u00b6 TBC quickSightSheetName \u00b6 TBC Relationships \u00b6 The following illustrates how the various QuickSight objects inter-relate with each other: erDiagram Connection ||..o{ QuickSightAnalysis : \"\" Connection ||..o{ QuickSightDas", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "with each other: erDiagram Connection ||..o{ QuickSightAnalysis : \"\" Connection ||..o{ QuickSightDashboard : \"\" Connection ||..o{ QuickSightDataset : \"\" Connection ||..o{ QuickSightFolder : \"\" QuickSightFolder }o--o{ QuickSightAnalysis : quickSightAnalyses QuickSightFolder }o--o{ QuickSightDashboard : quickSightDashboards QuickSightFolder }o--o{ QuickSightDataset : quickSightDatasets QuickSightAna", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": ": quickSightDashboards QuickSightFolder }o--o{ QuickSightDataset : quickSightDatasets QuickSightAnalysis |o--o{ QuickSightAnalysisVisual : quickSigntAnalysisVisuals QuickSightDashboard |o--o{ QuickSightDashboardVisual : quickSightDashboardVisuals QuickSightDataset |o--o{ QuickSightDatasetField : quickSightDatasetFields Was this page helpful? Thanks for your feedback! Thanks for your feedback! Hel", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ickSightDatasetFields Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/quicksight/", "title": "QuickSight - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "Alteryx Integrate, catalog, and govern Alteryx assets in Atlan using OpenLineage. Data Pipelines Learn how to connect your data pipelines to Atlan. Explore ETL tools, workflow orchestration, and lineage tracking to build a comprehensive view of your data movement. Playbooks Create and manage automated workflows for metadata management and data governance. Send alerts for workflow events Learn how", "metadata": {"source_url": "https://docs.atlan.com/tags/workflows", "title": "6 docs tagged with \"workflows\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ed workflows for metadata management and data governance. Send alerts for workflow events Learn how to configure alerts for workflow events in Atlan via email or Google Chat. Source owner manager Reference for source owner management capabilities and configuration in stewardship workflows Stewardship Learn how to implement data stewardship in Atlan through automated workflows, policies, and task m", "metadata": {"source_url": "https://docs.atlan.com/tags/workflows", "title": "6 docs tagged with \"workflows\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "p Learn how to implement data stewardship in Atlan through automated workflows, policies, and task management.", "metadata": {"source_url": "https://docs.atlan.com/tags/workflows", "title": "6 docs tagged with \"workflows\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Connection issues Resolve common connection and authentication issues when setting up CrateDB connector Cross-workspace extraction issues Troubleshoot common issues in Databricks cross-workspace extraction with error, cause, and solution guidance. Deployment and security Frequently asked questions about Secure Agent 2.0 deployment and security Frequently Asked Questions Find answers to common ques", "metadata": {"source_url": "https://docs.atlan.com/tags/troubleshooting", "title": "9 docs tagged with \"troubleshooting\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "bout Secure Agent 2.0 deployment and security Frequently Asked Questions Find answers to common questions about using Atlan, organized by topic area for quick resolution. Lineage [Data lineage](/product/capabilities/lineage/how-tos/view-lineage) captures how data moves across your data landscape. This information is useful to:. Setup and configuration Common questions about Databricks data quality", "metadata": {"source_url": "https://docs.atlan.com/tags/troubleshooting", "title": "9 docs tagged with \"troubleshooting\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "is information is useful to:. Setup and configuration Common questions about Databricks data quality setup and configuration. Supported sources Learn about supported sources. Troubleshooting Anomalo connectivity Learn about troubleshooting anomalo connectivity. Troubleshooting Slack What do the colors in Slack notifications for modified assets mean?", "metadata": {"source_url": "https://docs.atlan.com/tags/troubleshooting", "title": "9 docs tagged with \"troubleshooting\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "On this page Once you have set up the looker-extractor tool , you can extract metadata from your on-premises Looker instances using the following steps. Run looker-extractor \u200b Crawl all Looker connections \u200b To crawl all Looker connections using the looker-extractor tool: Log into the server with Docker Compose installed. Change to the directory containing the compose file. Run Docker Compose: sudo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/crawl-on-premises-looker", "title": "Crawl on-premises Looker | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ker Compose installed. Change to the directory containing the compose file. Run Docker Compose: sudo docker-compose up Crawl a specific connection \u200b To crawl a specific Looker connection using the looker-extractor tool: Log into the server with Docker Compose installed. Change to the directory containing the compose file. Run Docker Compose: sudo docker-compose up <CONNECTION-NAME> (Replace <CONNE", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/crawl-on-premises-looker", "title": "Crawl on-premises Looker | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ining the compose file. Run Docker Compose: sudo docker-compose up <CONNECTION-NAME> (Replace <CONNECTION-NAME> with the name of the connection from the services section of the compose file.) (Optional) Review generated files \u200b The looker-extractor tool will generate many JSON files for each service . For example: projects.json dashboards.json dashboard_tiles.json looks.json and many others You ca", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/crawl-on-premises-looker", "title": "Crawl on-premises Looker | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": ". For example: projects.json dashboards.json dashboard_tiles.json looks.json and many others You can inspect the metadata and make sure it is acceptable to provide the metadata to Atlan. Upload generated files to S3 \u200b To provide Atlan access to the extracted metadata you will need to upload the metadata to an S3 bucket. Did you know? We recommend uploading to the same S3 bucket as Atlan uses to a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/crawl-on-premises-looker", "title": "Crawl on-premises Looker | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "adata to an S3 bucket. Did you know? We recommend uploading to the same S3 bucket as Atlan uses to avoid access issues. Reach out to your Data Success Manager to get the details of your Atlan bucket. To create your own bucket, refer to the Create your own S3 bucket section of the dbt documentation. (The steps will be exactly the same.) To upload the metadata to S3: Ensure all files for a particula", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/crawl-on-premises-looker", "title": "Crawl on-premises Looker | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "(The steps will be exactly the same.) To upload the metadata to S3: Ensure all files for a particular database have the same prefix. For example, metadata/looker/projects.json , metadata/looker/dashboards.json , etc. Upload the files to the S3 bucket using your preferred method. For example, to upload all files using the AWS CLI : aws s3 cp output/looker-example s3://my-bucket/metadata/looker-exam", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/crawl-on-premises-looker", "title": "Crawl on-premises Looker | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ad all files using the AWS CLI : aws s3 cp output/looker-example s3://my-bucket/metadata/looker-example --recursive Crawl metadata in Atlan \u200b Once you have extracted metadata on-premises and uploaded the results to S3, you can crawl the metadata into Atlan: How to crawl Looker Be sure you select Offline for the Extraction method . Run looker-extractor (Optional) Review generated files Upload gener", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/crawl-on-premises-looker", "title": "Crawl on-premises Looker | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "line for the Extraction method . Run looker-extractor (Optional) Review generated files Upload generated files to S3 Crawl metadata in Atlan", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/crawl-on-premises-looker", "title": "Crawl on-premises Looker | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "On this page Atlan crawls and maps the following assets and properties from Databricks. info The following properties aren't crawled by the System tables extraction method: Table properties : partitionList , partitionCount Column properties : maxLength , precision Databases \u200b Atlan maps databases from Databricks to its Database asset type. Source property Atlan property Where in Atlan TABLE_CATALO", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "om Databricks to its Database asset type. Source property Atlan property Where in Atlan TABLE_CATALOG name Asset profile and overview sidebar SCHEMA_COUNT schemaCount API only Schemas \u200b Atlan maps schemas from Databricks to its Schema asset type. Source property Atlan property Where in Atlan TABLE_SCHEMA name Asset profile and overview sidebar TABLE_COUNT tableCount Asset preview and profile VIEW_", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "CHEMA name Asset profile and overview sidebar TABLE_COUNT tableCount Asset preview and profile VIEW_COUNT viewsCount Asset preview and profile TABLE_CATALOG databaseName Asset preview and profile Tables \u200b Atlan maps tables from Databricks to its Table asset type. Source property Atlan property Where in Atlan TABLE_NAME name Asset profile and overview sidebar REMARKS, DESCRIPTION description Asset", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "in Atlan TABLE_NAME name Asset profile and overview sidebar REMARKS, DESCRIPTION description Asset profile and overview sidebar COLUMN_COUNT columnCount Asset profile and overview sidebar LOCATION externalLocation Overview sidebar FORMAT externalLocationFormat Overview sidebar OWNER Created (in Databricks) Properties sidebar CREATEDAT sourceCreatedAt Properties sidebar UPDATED_BY Last updated Pro", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "abricks) Properties sidebar CREATEDAT sourceCreatedAt Properties sidebar UPDATED_BY Last updated Properties sidebar LASTMODIFIED sourceUpdatedAt Properties sidebar PARTITIONS isPartitioned , partitionCount , partitionList API only Views \u200b Atlan maps views from Databricks to its View asset type. Source property Atlan property Where in Atlan TABLE_NAME name Asset profile and overview sidebar REMARKS", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ce property Atlan property Where in Atlan TABLE_NAME name Asset profile and overview sidebar REMARKS description Asset profile and overview sidebar COLUMN_COUNT columnCount Asset profile and overview sidebar CREATETAB_STMT definition Asset profile and overview sidebar OWNER Created (in Databricks) Properties sidebar CREATEDAT sourceCreatedAt Properties sidebar UPDATED_BY Last updated Properties si", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "roperties sidebar CREATEDAT sourceCreatedAt Properties sidebar UPDATED_BY Last updated Properties sidebar LASTMODIFIED sourceUpdatedAt Properties sidebar Materialized views \u200b Atlan maps materialized views from Databricks to its MaterialisedView asset type. Source property Atlan property Where in Atlan TABLE_NAME name Asset profile and overview sidebar REMARKS description Asset profile and overview", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "an TABLE_NAME name Asset profile and overview sidebar REMARKS description Asset profile and overview sidebar COLUMN_COUNT columnCount Asset profile and overview sidebar CREATETAB_STMT definition Asset profile and overview sidebar OWNER Created (in Databricks) Properties sidebar CREATEDAT sourceCreatedAt Properties sidebar UPDATED_BY Last updated Properties sidebar LASTMODIFIED sourceUpdatedAt Prop", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "edAt Properties sidebar UPDATED_BY Last updated Properties sidebar LASTMODIFIED sourceUpdatedAt Properties sidebar Columns \u200b Did you know? To help you work seamlessly with STRUCT data types, Atlan supports nested columns up to level 30 in Databricks. You can view these columns in the Tree view or the asset sidebar of your table assets, and also explore child columns of STRUCTs nested within MAPs o", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "e asset sidebar of your table assets, and also explore child columns of STRUCTs nested within MAPs or ARRAYs. However, lineage for nested columns isn't supported. Atlan maps columns from Databricks to its Column asset type. Source property Atlan property Where in Atlan PRIMARY KEY isPrimary Asset preview and filter, overview sidebar FOREIGN KEY isForeign Asset preview and filter, overview sidebar", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "eview and filter, overview sidebar FOREIGN KEY isForeign Asset preview and filter, overview sidebar COLUMN_NAME name Asset profile and overview sidebar REMARKS description Asset profile and overview sidebar ORDINAL_POSITION order Asset profile TYPE_NAME dataType Asset profile and overview sidebar PARTITION_INDEX isPartition Asset preview and profile NULLABLE isNullable API only CHAR_OCTET_LENGTH m", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "RTITION_INDEX isPartition Asset preview and profile NULLABLE isNullable API only CHAR_OCTET_LENGTH maxLength API only DECIMAL_DIGITS precision API only Databases Schemas Tables Views Materialized views Columns", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/references/what-does-atlan-crawl-from-databricks", "title": "What does Atlan crawl from Databricks? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "Remote MCP Learn about Atlan's Remote MCP server, a hosted solution that enables AI agents to access Atlan metadata without local infrastructure setup. Set up Claude with Remote MCP Learn how to configure Claude (Connector and Desktop) to use Atlan's Remote MCP server for seamless AI-powered metadata access. Set up Cursor with Remote MCP Learn how to configure Cursor to use Atlan's Remote MCP serv", "metadata": {"source_url": "https://docs.atlan.com/tags/remote", "title": "6 docs tagged with \"remote\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "a access. Set up Cursor with Remote MCP Learn how to configure Cursor to use Atlan's Remote MCP server for seamless AI-powered metadata access. Set up Microsoft Copilot Studio with Remote MCP Learn how to configure Microsoft Copilot Studio to use Atlan's Remote MCP server with API Key authentication. Set up n8n with Remote MCP Learn how to configure n8n to use Atlan's Remote MCP server with API Ke", "metadata": {"source_url": "https://docs.atlan.com/tags/remote", "title": "6 docs tagged with \"remote\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": ". Set up n8n with Remote MCP Learn how to configure n8n to use Atlan's Remote MCP server with API Key authentication for automated workflows. Set up Windsurf with Remote MCP Learn how to configure Windsurf to use Atlan's Remote MCP server with API Key authentication.", "metadata": {"source_url": "https://docs.atlan.com/tags/remote", "title": "6 docs tagged with \"remote\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "GCSBucket \u00b6 Instance of a Google Cloud Storage bucket in Atlan. Complete reference This is a complete reference for the GCSBucket object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": ", atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. GCSBucket inherits its attributes and relationships from these other types: classDiagram direction RL class GCSBucket link GCSBucket \"../gcsbucket\" class GCS { <<abstract>> } link GCS \"../gcs\" GCS <|-- GCSBucket : extends class Google { <<abstract>> } link Google \"../google\" Google <|-", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "./gcs\" GCS <|-- GCSBucket : extends class Google { <<abstract>> } link Google \"../google\" Google <|-- GCS : extends class Cloud { <<abstract>> } link Cloud \"../cloud\" Cloud <|-- Google : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Cloud : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class ObjectStore", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "tract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class ObjectStore { <<abstract>> } link ObjectStore \"../objectstore\" ObjectStore <|-- GCS : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- ObjectStore : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Ref", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from GCSBucket 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "set. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "atedBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Hum", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "lan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any ba", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "nstead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (Th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the annou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "s only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcemen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "entUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anom", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ame of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedChec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ed to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "et is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSav", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that ma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "erated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-rea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "rialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "sset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "atusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the j", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "e job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "ally everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "etDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "e DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ched to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "is asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "acks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done vi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "olicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "BC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. ce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is emp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "sset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "t (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchroniz", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "t was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "GUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "an. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "mpute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "e_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "eadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Ti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "lication, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "he Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contain", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "(This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) googleLabels \u00b6 List of labels that have been applied to the asset in Google. googleLocation \u00b6 Location of this asset in Google. googleLocationType \u00b6 Type of location of this asset in Google. googleProjectId \u00b6 ID of the project in which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ocationType \u00b6 Type of location of this asset in Google. googleProjectId \u00b6 ID of the project in which the asset exists. googleProjectName \u00b6 Name of the project in which the asset exists. googleProjectNumber \u00b6 Number of the project in which the asset exists. googleService \u00b6 Service in Google in which the asset exists. googleTags \u00b6 List of tags that have been applied to the asset in Google. gcsAccess", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "the asset exists. googleTags \u00b6 List of tags that have been applied to the asset in Google. gcsAccessControl \u00b6 Access control list for this asset. gcsETag \u00b6 Entity tag for the asset. An entity tag is a hash of the object and represents changes to the contents of an object only, not its metadata. gcsEncryptionType \u00b6 Encryption algorithm used to encrypt this asset. gcsMetaGenerationId \u00b6 Version of me", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "ncryptionType \u00b6 Encryption algorithm used to encrypt this asset. gcsMetaGenerationId \u00b6 Version of metadata for this asset at this generation. Used for preconditions and detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular asset. gcsRequesterPays \u00b6 Whether the requester pays header was sent when this asset was created (t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "asset. gcsRequesterPays \u00b6 Whether the requester pays header was sent when this asset was created (true) or not (false). gcsStorageClass \u00b6 Storage class of this asset. These attributes are specific to instances of GCSBucket (and all of its subtypes). gcsBucketLifecycleRules \u00b6 Lifecycle rules for this bucket. gcsBucketRetentionEffectiveTime \u00b6 Effective time for retention of objects in this bucket.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "s bucket. gcsBucketRetentionEffectiveTime \u00b6 Effective time for retention of objects in this bucket. gcsBucketRetentionLocked \u00b6 Whether retention is locked for this bucket (true) or not (false). gcsBucketRetentionPeriod \u00b6 Retention period for objects in this bucket. gcsBucketRetentionPolicy \u00b6 Retention policy for this bucket. gcsBucketVersioningEnabled \u00b6 Whether versioning is enabled on the bucket", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "on policy for this bucket. gcsBucketVersioningEnabled \u00b6 Whether versioning is enabled on the bucket (true) or not (false). gcsObjectCount \u00b6 Number of objects within the bucket. Relationships \u00b6 Inherited relationships These relationships are inherited from GCSBucket 's supertypes: inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "\u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "his asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "ned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcInc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaReg", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "ut port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "onshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos These relationships are specific to instances of GCSBucket (and all of its subtypes). gcsObjects ( GCSObject ) \u00b6 GCS objects within this bucket. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/gcsbucket/", "title": "GCSBucket - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "On this page Once you have crawled Google BigQuery , you can use connector-specific filters for quick asset discovery. The following filters are currently supported for these assets: Tables - BigQuery labels and Is sharded filters Atlan doesn't run any table scans. Atlan leverages the table preview options from Google BigQuery that enable you to view data for free and without affecting any quotas", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "options from Google BigQuery that enable you to view data for free and without affecting any quotas using the tabledata.list API. Hence, table asset previews in Atlan are already cost-optimized. However, this doesn't apply to views and materialized views . For Google BigQuery views and materialized views , Atlan sends you a cost nudge before viewing a sample data preview. This informs you about th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "views , Atlan sends you a cost nudge before viewing a sample data preview. This informs you about the precise bytes that are spent during the execution of the query, helping you decide if you still want to run the preview. Did you know? You also receive a cost nudge before querying your Google BigQuery assets . Atlan crawls and maps the following assets and properties from Google BigQuery. Databas", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ery assets . Atlan crawls and maps the following assets and properties from Google BigQuery. Databases \u200b Atlan maps projects from Google BigQuery to its Database asset type. Source property Atlan property Where in Atlan Project ID name asset preview, profile, and filter, overview sidebar Schemas \u200b Atlan maps datasets from Google BigQuery to its Schema asset type. Source property Atlan property Whe", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "tlan maps datasets from Google BigQuery to its Schema asset type. Source property Atlan property Where in Atlan TABLE_SCHEMA name asset preview and profile, overview sidebar TABLE_COUNT tableCount asset preview and profile VIEW_COUNT viewsCount asset preview and profile, overview sidebar TABLE_CATALOG databaseName asset preview REMARKS description asset preview and profile, overview sidebar CREATE", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "OG databaseName asset preview REMARKS description asset preview and profile, overview sidebar CREATED sourceCreatedAt asset profile and properties sidebar MODIFIED sourceUpdatedAt asset profile and properties sidebar Tables \u200b Did you know? Table asset previews are already cost-optimized. Google BigQuery enables you to use the table preview options to view data for free and without affecting any qu", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "uery enables you to use the table preview options to view data for free and without affecting any quotas. Note that this isn't currently supported for Google BigQuery views and materialized views in Atlan. Atlan maps tables from Google BigQuery to its Table asset type. Source property Atlan property Where in Atlan TABLE_NAME name asset preview and profile, overview sidebar REMARKS description asse", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Where in Atlan TABLE_NAME name asset preview and profile, overview sidebar REMARKS description asset preview and profile, overview sidebar COLUMN_COUNT columnCount asset preview and profile, overview sidebar ROW_COUNT rowCount asset preview, profile, and filter, overview sidebar SIZE_BYTES sizeBytes asset filter and overview sidebar TABLE_TYPE subType asset preview and profile LABELS assetTags ov", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "s asset filter and overview sidebar TABLE_TYPE subType asset preview and profile LABELS assetTags overview sidebar CREATED sourceCreatedAt asset profile and properties sidebar MODIFIED sourceUpdatedAt asset profile and properties sidebar OPTION_NAMES (require_partition_filter) isPartitioned API only Views \u200b Atlan maps views from Google BigQuery to its View asset type. Source property Atlan propert", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Views \u200b Atlan maps views from Google BigQuery to its View asset type. Source property Atlan property Where in Atlan TABLE_NAME name asset preview and profile, overview sidebar REMARKS description asset preview and profile, overview sidebar COLUMN_COUNT columnCount asset preview and profile, overview sidebar TABLE_TYPE subType asset preview and profile CREATED sourceCreatedAt asset profile and pro", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "w sidebar TABLE_TYPE subType asset preview and profile CREATED sourceCreatedAt asset profile and properties sidebar MODIFIED sourceUpdatedAt asset profile and properties sidebar OPTION_NAMES (require_partition_filter) isPartitioned API only DDL definition asset profile and overview sidebar Materialized views \u200b Atlan maps materialized views from Google BigQuery to its MaterialisedView asset type. S", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "zed views \u200b Atlan maps materialized views from Google BigQuery to its MaterialisedView asset type. Source property Atlan property Where in Atlan TABLE_NAME name asset preview and profile, overview sidebar REMARKS description asset preview and profile, overview sidebar COLUMN_COUNT columnCount asset preview and profile, overview sidebar ROW_COUNT rowCount asset preview, profile, and filter, overvie", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "preview and profile, overview sidebar ROW_COUNT rowCount asset preview, profile, and filter, overview sidebar SIZE_BYTES sizeBytes asset filter and overview sidebar TABLE_TYPE subType asset preview and profile CREATED sourceCreatedAt asset profile and properties sidebar MODIFIED sourceUpdatedAt asset profile and properties sidebar OPTION_NAMES (require_partition_filter) isPartitioned API only DDL", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "t profile and properties sidebar OPTION_NAMES (require_partition_filter) isPartitioned API only DDL definition asset profile and overview sidebar Columns \u200b Atlan supports nested columns up to level 1 for Google BigQuery to help you enrich your semi-structured data types. You can view nested columns in the asset sidebar for your table assets. Atlan maps columns from Google BigQuery to its Column as", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "in the asset sidebar for your table assets. Atlan maps columns from Google BigQuery to its Column asset type. Important Atlan doesn't crawl primary key (PK) and foreign key (FK) information from Google BigQuery. Source property Atlan property Where in Atlan COLUMN_NAME name asset preview and profile, overview sidebar REMARKS, DESCRIPTION description asset preview and profile, overview sidebar ORDI", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": ", overview sidebar REMARKS, DESCRIPTION description asset preview and profile, overview sidebar ORDINAL_POSITION order asset profile TYPE_NAME dataType asset preview, profile, and filter, overview sidebar IS_NULLABLE isNullable API only IS_PARTITIONING_COLUMN isPartition asset preview, profile, and filter CLUSTERING_COLUMN_LIST isClustered asset preview, profile, and filter Stored procedures \u200b Atl", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "filter CLUSTERING_COLUMN_LIST isClustered asset preview, profile, and filter Stored procedures \u200b Atlan maps stored procedures from Google BigQuery to its Procedure asset type. Source property Atlan property Where in Atlan PROCEDURE_NAME name API only REMARKS description API only PROCEDURE_TYPE subType API only ROUTINE_DEFINITION definition API only CREATED sourceCreatedAt API only MODIFIED sourceU", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "pe API only ROUTINE_DEFINITION definition API only CREATED sourceCreatedAt API only MODIFIED sourceUpdatedAt API only Databases Schemas Tables Views Materialized views Columns Stored procedures", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery/references/what-does-atlan-crawl-from-google-bigquery", "title": "What does Atlan crawl from Google BigQuery? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "On this page Who can do this? You will probably need your Metabase administrator to follow the below steps - you may not have access yourself. Create a user \u200b To create a user for Atlan to use when integrating with Metabase: From the upper right corner of your Metabase instance, click the gear icon and then Admin Settings . At the top of the page, change to the People tab. To the upper right of th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "and then Admin Settings . At the top of the page, change to the People tab. To the upper right of the table, click the Invite someone button and enter their details: For First name enter the user's first name, for example Atlan . For Last name enter the user's last name, for example User . For Email enter the user's email address, for example a service account email address. At the bottom of the d", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "enter the user's email address, for example a service account email address. At the bottom of the dialog, click the Create button. When prompted, click Done . Create a group \u200b You can only attach Metabase permissions to groups . To create a group for Atlan to use when integrating with Metabase: From the upper right corner of your Metabase instance, click the gear icon and then Admin Settings . Fr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "m the upper right corner of your Metabase instance, click the gear icon and then Admin Settings . From the top menu bar, change to the People tab. From the left of the page, open the Groups tab. At the top right, click the Create a group button. For Group name enter Atlan . On the right of the row click the Add button. To add the user to the group: Click the Atlan group you created. To the upper r", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "lick the Add button. To add the user to the group: Click the Atlan group you created. To the upper right of the table, click the Add members button. Under Members start typing the name used above (for example, Atlan User ) and select it. On the right of the row, click the Add button. Set permissions \u200b Did you know? We do not make any API requests or queries that will update the dashboards , collec", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "\u200b Did you know? We do not make any API requests or queries that will update the dashboards , collections or questions in your Metabase instance. Minimum permissions \u200b To set the minimum permissions required to crawl Metabase : From the upper right corner of your Metabase instance, click the gear icon and then Admin Settings . From the top menu bar, change to the Permissions tab. From the top of t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "on and then Admin Settings . From the top menu bar, change to the Permissions tab. From the top of the page, change to the Collection permissions tab. For each collection you want to crawl in Atlan: Under the Collections heading on the left, click the collection. Under Permissions for <collection name> , for the Atlan group, under Collection access click the No access drop-down. (Optional) To craw", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "me> , for the Atlan group, under Collection access click the No access drop-down. (Optional) To crawl sub-collections, toggle the Also change sub-collections option. Select the View permission. In the upper-right of the page, click the Save changes button. When prompted with Save permissions? click the Yes button to confirm. Partial lineage permissions \u200b danger When a Metabase question uses native", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "the Yes button to confirm. Partial lineage permissions \u200b danger When a Metabase question uses native queries, these permissions cannot capture lineage to source tables and columns. To set the minimal permissions for extracting lineage from Metabase: From the upper right corner of your Metabase instance, click the gear icon and then Admin Settings . From the top menu bar, change to the Permissions", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "nce, click the gear icon and then Admin Settings . From the top menu bar, change to the Permissions tab. From the top of the page, change to the Data permissions tab. Below the tab, click the Groups pill. Below the pill, select the Atlan group. Under Permissions for the Atlan group , for each database: Under Data access change the drop-down value to Unrestricted . Although Atlan does not query dat", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "se: Under Data access change the drop-down value to Unrestricted . Although Atlan does not query data, this permission is necessary to enable the next option. Under Native query editing change the drop-down value to Yes . This permission is necessary for Atlan to parse the queries that power your Metabase questions, to generate lineage. In the upper-right of the page, click the Save changes button", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "tabase questions, to generate lineage. In the upper-right of the page, click the Save changes button. When prompted with Save permissions? click the Yes button to confirm. Complete lineage permissions \u200b To set permissions for extracting lineage from all your Metabase questions: From the upper right corner of your Metabase instance, click the gear icon and then Admin Settings . From the top menu ba", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "corner of your Metabase instance, click the gear icon and then Admin Settings . From the top menu bar, change to the People tab. On the row for the Atlan user you created above, under Groups change the drop-down value to Administrators . Did you know? Administrative access is necessary to get the default source database name used for queries. This is only available to Administrators. The unrestric", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "fault source database name used for queries. This is only available to Administrators. The unrestricted data access and native query editing permissions above are insufficient. (Optional) Allowlist the Atlan IP \u200b If you are using the IP allowlist in your Metabase instance, you must add your Atlan IP to the allowlist. Please raise a support ticket to learn your Atlan IP. Create a user Create a grou", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "to the allowlist. Please raise a support ticket to learn your Atlan IP. Create a user Create a group Set permissions (Optional) Allowlist the Atlan IP", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/how-tos/set-up-metabase", "title": "Set up Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "On this page What are the known limitations of the Tableau connector? \u200b Atlan currently does not support the following: Crawling Tableau flows when using the JWT bearer authentication method , due to limitations at source. Crawling tags from Tableau. Cataloging Tableau Pulse, stories, and views. Parsing custom SQL queries, where all tables referenced (whether in the main query or subqueries) are c", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "sing custom SQL queries, where all tables referenced (whether in the main query or subqueries) are considered as upstream lineage for the asset. Why does Atlan require the Site Administrator Explorer role in Tableau? \u200b Atlan requires the Site Administrator Explorer role in Tableau to extract data source fields and calculated fields. It is not possible to fetch data source fields and calculated fie", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "urce fields and calculated fields. It is not possible to fetch data source fields and calculated fields with the Viewer role in the current version of the Tableau Metadata API. Atlan uses this data to generate granular column-level lineage across data sources and SQL assets. To extract lineage for assets in Tableau, the user must have the Site Administrator Explorer role. Is lineage available for", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ssets in Tableau, the user must have the Site Administrator Explorer role. Is lineage available for Tableau custom SQL data sources? \u200b Yes, Atlan can parse custom SQL queries in Tableau to generate lineage between the data source and tables. Lineage is available for tables from all SQL sources. However, column-level lineage is currently not supported. Why is upstream lineage missing for Tableau da", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ver, column-level lineage is currently not supported. Why is upstream lineage missing for Tableau data sources? \u200b If your Tableau data source is in a paused state , the Tableau Metadata API may fail to provide the requisite metadata on source databases and tables for Atlan to generate upstream lineage. Restart your Tableau data source and ensure that it remains active while crawling Tableau . This", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ge. Restart your Tableau data source and ensure that it remains active while crawling Tableau . This will allow Atlan to fetch the requisite metadata to generate upstream lineage for data sources. Why is there a discrepancy in asset count between Tableau and Atlan? \u200b Dashboards - the Tableau UI does not display a unique count of dashboards. Dashboards in Tableau are represented in collections of o", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "not display a unique count of dashboards. Dashboards in Tableau are represented in collections of one or more views. These may have same names as the views but are independent objects. Hence, the total count of these views in Tableau does not match the dashboard count in Atlan. Atlan sources the dashboard count from the Tableau API, which is the only reliable way to fetch the dashboard count. Dat", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "shboard count from the Tableau API, which is the only reliable way to fetch the dashboard count. Data sources - embedded data sources are not reported on the Tableau UI. However, in Atlan, data sources can be filtered to show only published data sources, which should match the count of data sources on the Tableau UI. Can users who do not have access to a dashboard still see the preview? \u200b Users ca", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "on the Tableau UI. Can users who do not have access to a dashboard still see the preview? \u200b Users can only see asset previews if the following conditions are met: They have the necessary permissions in both Tableau and Atlan. They are logged into Atlan and Tableau on the same browser. Therefore, if a user lacks the permission to view a dashboard in Tableau, they will not be able to view the dashbo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "a user lacks the permission to view a dashboard in Tableau, they will not be able to view the dashboard preview in Atlan. Even if they do have the necessary permissions, they will need to be logged into Tableau on the same browser as their Atlan instance for asset previews to work. Why can I not see previews for my Tableau assets? \u200b Your Tableau assets will be updated with previews during the next", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "previews for my Tableau assets? \u200b Your Tableau assets will be updated with previews during the next run of your Tableau workflow. If you have run the workflow and still do not see the previews, we suggest you rerun the workflow. Once you've rerun the workflow, the previews should be visible to all eligible users. If you're using Tableau Server with clickjack protection enabled and your Tableau in", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "eligible users. If you're using Tableau Server with clickjack protection enabled and your Tableau instance URL is of a different origin than the Atlan instance URL, the asset previews will not load due to a same-origin error from the browser. You will need to disable clickjack protection to allow the Tableau asset previews to load. Is the certified status in Tableau mapped to the certificates fiel", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "e Tableau asset previews to load. Is the certified status in Tableau mapped to the certificates field in Atlan? \u200b Yes, the isCertified status for published data sources in Tableau is mapped to the certificates field in Atlan. Is the owner field in Tableau mapped to the owners field in Atlan? \u200b No, the asset owner in Tableau is displayed as the source owner in the Overview section of the asset side", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "he asset owner in Tableau is displayed as the source owner in the Overview section of the asset sidebar in Atlan. This is also only available for Tableau projects , flows , workbooks , and published data sources . Tableau has retired metrics methods in API 3.22 , hence source owner attribute for metrics is not supported in Atlan. Why am I getting a \"still creating the Metadata API store\" error? \u200b", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "rics is not supported in Atlan. Why am I getting a \"still creating the Metadata API store\" error? \u200b Error message: Still creating the Metadata API Store. Results from the query might be incomplete at this time. BACKFILL-RUNNING If your Tableau workflow is failing with the above error message, this is because the Tableau Metadata API is being re-indexed after a quarterly release. The re-indexing of", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "s because the Tableau Metadata API is being re-indexed after a quarterly release. The re-indexing of the Metadata API after quarterly releases can take up to a week, depending on the size of your instance. Since Atlan uses the Tableau Metadata API to fetch metadata, your Tableau workflows in Atlan may fail if the re-indexing has not been completed. You can check the backfill status of the Tableau", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ay fail if the re-indexing has not been completed. You can check the backfill status of the Tableau Metadata API Store following this guide . Learn more about common errors in your Metadata API query. How to debug test authentication and preflight check errors? \u200b Incorrect hostname Unable to connect to the specified host. Please verify that the host details are correct and retry. Ensure that you h", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "to the specified host. Please verify that the host details are correct and retry. Ensure that you have entered the hostname for your Tableau Online or Tableau Server instance correctly. If you're using a domain name, verify that the DNS name correctly resolves to the corresponding IP address. Connection timed out Unable to connect to Tableau instance. Please verify server port or check if your se", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ction timed out Unable to connect to Tableau instance. Please verify server port or check if your server is up and running. Ensure that you're using the correct port number, especially if using a custom port for Tableau Server. Verify network connectivity and DNS resolution - you can also test from a different network or device. SSL error Unable to connect. Please check your SSL setting. Ensure th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "a different network or device. SSL error Unable to connect. Please check your SSL setting. Ensure that the server URL uses https if SSL is enabled . If the connection does not require an SSL, use http instead. The ssl details provided are incorrect. Please provide correct ssl certs. If your Tableau Server instance uses a self-signed or an internal CA SSL certificate, enter the SSL certificate corr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "Server instance uses a self-signed or an internal CA SSL certificate, enter the SSL certificate correctly in the recommended format . Incorrect port number Unable to connect to Tableau instance. Please verify server port and retry. Ensure that you're using the correct port number, especially if using a custom port for Tableau Server. Invalid personal access token The personal access token you prov", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "g a custom port for Tableau Server. Invalid personal access token The personal access token you provided is invalid. Please check your PAT name and token value. Ensure that you have entered the token name correctly and it matches the token generated in Tableau: Token name is case-sensitive. Ensure that there are no extra spaces or characters. If the token you provided is invalid, you can create a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "hat there are no extra spaces or characters. If the token you provided is invalid, you can create a new token . Incorrect site details The site details provided are incorrect. Please provide correct site details. Confirm that the site name in the URL matches the exact case and spelling of the site you are trying to access. Site names in Tableau are case-sensitive. Incorrect username Provided usern", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "ou are trying to access. Site names in Tableau are case-sensitive. Incorrect username Provided username is incorrect. Please check. Confirm that the username is present in Tableau. Otherwise, you can add a new user for basic authentication . Incorrect client ID The client id provided is incorrect or site is empty or connected app in tableau is deleted. Please check and try again. Ensure that you h", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "site is empty or connected app in tableau is deleted. Please check and try again. Ensure that you have specified the site name if using JWT bearer authentication. Ensure that the connected app is present in Tableau and verify the client ID. Incorrect secret ID or value The secret id provided is incorrect or the secret value is deleted. Please check and try again. or The secret value provided is i", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "orrect or the secret value is deleted. Please check and try again. or The secret value provided is incorrect. Please check your secret value and try again. Verify the secret ID of the connected app . Ensure that the secret value of the connected app has not been deleted.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/tableau/troubleshooting/troubleshooting-tableau-connectivity", "title": "Troubleshooting Tableau connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "Events when an asset is tagged \u00b6 When an asset is tagged in Atlan, the following event is emitted. CLASSIFICATION_ADD \u00b6 Atlan always emits a CLASSIFICATION_ADD event when an asset is tagged. For both direct tags and propagations Remember that these events will be emitted for both the asset that was directly tagged as well as all assets to which the tag is propagated. Was this page helpful? Thanks", "metadata": {"source_url": "https://developer.atlan.com/events/scenarios/asset-classify/", "title": "Asset is tagged - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "directly tagged as well as all assets to which the tag is propagated. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/events/scenarios/asset-classify/", "title": "Asset is tagged - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Weekly update \u00b6 This week we: Revamped developer.atlan.com navigation Added support for SSO group mapping to Python SDK Python \u00b6 We've added: Support for SSO group mapping. AtlanSSO to enumerate the options for supported SSO providers in Atlan. Website \u00b6 We also revamped the navigation here in the developer portal: Moved away from snippets and patterns to: Common tasks that can be done across all", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/26/update--apr-26/", "title": "Update \u2014 Apr 26 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eveloper portal: Moved away from snippets and patterns to: Common tasks that can be done across all assets Asset-specific tasks that can be done against specific kinds of assets Governance structures for operations on objects other than assets Added color icons for the various integration options we provide, to break up some of the monotone nature of the site URLs remain unchanged Any link you may", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/26/update--apr-26/", "title": "Update \u2014 Apr 26 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "provide, to break up some of the monotone nature of the site URLs remain unchanged Any link you may have bookmarked should remain exactly as it was, despite the navigation revamp. Learn more \u00b6 Python SDK release notes Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/news/2024/04/26/update--apr-26/", "title": "Update \u2014 Apr 26 - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Manage Google Data Studio assets \u00b6 Operations on Google Data Studio assets (connections, data sources, reports). In general, these should be: Created in top-down order (connection, then data sources and reports) Deleted in bottom-up order (data sources and reports, then connections) 1 erDiagram Connection ||--o{ DataStudioAsset : contains Asset structure \u00b6 Connection \u00b6 7.0.0 4.0.0 A Google Data St", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ection ||--o{ DataStudioAsset : contains Asset structure \u00b6 Connection \u00b6 7.0.0 4.0.0 A Google Data Studio connection requires a name and qualifiedName . For creation, specific settings are also required to distinguish it as a Google Data Studio connection rather than another type of connection. In addition, at least one of adminRoles , adminGroups , or adminUsers must be provided. Java Python Kotli", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "dition, at least one of adminRoles , adminGroups , or adminUsers must be provided. Java Python Kotlin Raw REST API Create a Google Data Studio connection 1 2 3 4 5 6 7 8 9 10 String adminRoleGuid = client . getRoleCache (). getIdForName ( \"$admin\" ); // (1) Connection connection = Connection . creator ( // (2) \"gds-connection\" , // (3) AtlanConnectorType . DATASTUDIO , // (4) List . of ( adminRole", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "or ( // (2) \"gds-connection\" , // (3) AtlanConnectorType . DATASTUDIO , // (4) List . of ( adminRoleGuid ), // (5) List . of ( \"group2\" ), // (6) List . of ( \"jsmith\" )) // (7) . build (); AssetMutationResponse response = connection . save ( client ); // (8) String connectionQualifiedName = response . getCreatedAssets (). get ( 0 ). getQualifiedName (); // (9) Retrieve the GUID for the admin role,", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ". getCreatedAssets (). get ( 0 ). getQualifiedName (); // (9) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. Provide a human-readable name for your connection, such as production or development . Set the type of connection to Google Data Studio. List the workspace roles that should", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "evelopment . Set the type of connection to Google Data Studio. List the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provid", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provi", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this operation will persist t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ust be provided. Actually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a GDS connection 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from pyatlan.client.a", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "king first.) Create a GDS connection 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import Connection , DataStudioAsset from pyatlan.model.enums import AtlanConnectorType client = AtlanClient () admin_role_guid = client . role_cache . get_id_for_name ( \"$admin\" ) # (1) connection = Connection . creator ( # (2) client = client , # (3", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "get_id_for_name ( \"$admin\" ) # (1) connection = Connection . creator ( # (2) client = client , # (3) name = \"gds-connection\" , # (4) connector_type = AtlanConnectorType . DATASTUDIO , # (5) admin_roles = [ admin_role_guid ], # (6) admin_groups = [ \"group2\" ], # (7) admin_users = [ \"jsmith\" ] # (8) ) response = client . asset . save ( connection ) # (9) connection_qualified_name = response . asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": ") response = client . asset . save ( connection ) # (9) connection_qualified_name = response . assets_created ( asset_type = Connection )[ 0 ] . qualified_name # (10) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. You must provide a client instance. Provide a human-readable name for", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "quest to create a connection. You must provide a client instance. Provide a human-readable name for your connection, such as production or development . Set the type of connection to Google Data Studio. List the workspace roles that should be able to administer the connection (or None if none) . All users with that workspace role (current and future) will be administrators of the connection. Note", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. It's important to note that the provided admin roles, groups, or users pertain to Atlan and not Google Data Studio. They define who has administrative cont", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "roups, or users pertain to Atlan and not Google Data Studio. They define who has administrative control over this connection within Atlan. List the group names that can administer this connection (or None if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminG", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tion. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. It's important to note that the provided admin roles, groups, or users pertain to Atlan and not Google Data Studio. They define who has administrative control over this connection within Atlan. List the user names that can administer this connection (or None i", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ver this connection within Atlan. List the user names that can administer this connection (or None if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. It's important to note that the provided admin roles, groups, or users pertain to Atlan and not Google Data Studio. They define who has administrative con", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "groups, or users pertain to Atlan and not Google Data Studio. They define who has administrative control over this connection within Atlan. Actually call Atlan to create the connection. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a Google Data Studio connection 1 2 3 4 5 6 7 8 9 10 val adminRoleGuid = client . roleCa", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "st.) Create a Google Data Studio connection 1 2 3 4 5 6 7 8 9 10 val adminRoleGuid = client . roleCache . getIdForName ( \"\\ $ admin \" ) // (1) val connection = Connection . creator ( // (2) \"gds-connection\" , // (3) AtlanConnectorType . DATASTUDIO , // (4) listOf ( adminRoleGuid ), // (5) listOf ( \"group2\" ), // (6) listOf ( \"jsmith\" )) // (7) . build () val response = connection . save ( client )", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "group2\" ), // (6) listOf ( \"jsmith\" )) // (7) . build () val response = connection . save ( client ) // (8) val connectionQualifiedName = response . createdAssets [ 0 ] . qualifiedName // (9) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. Provide a human-readable name for your connec", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": ". Build up the minimum request to create a connection. Provide a human-readable name for your connection, such as production or development . Set the type of connection to Google Data Studio. List the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the val", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection.", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "f none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles ,", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "f none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd proba", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \"entities\" : [ { \"typeName\" : \"Connection\" , // (1) \"attributes\" : { \"name\" : \"gds-connection\" , // (2) \"connectorName\" : \"datastudio\" , // (3) \"qualifiedName\" : \"default/d", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "me\" : \"gds-connection\" , // (2) \"connectorName\" : \"datastudio\" , // (3) \"qualifiedName\" : \"default/datastudio/123456789\" , // (4) \"category\" : \"bi\" , // (5) \"adminRoles\" : [ // (6) \"e7ae0295-c60a-469a-bd2c-fb903943aa02\" ], \"adminGroups\" : [ // (7) \"group2\" ], \"adminUsers\" : [ // (8) \"jsmith\" ] } } ] } The typeName must be exactly Connection . Human-readable name for your connection, such as produc", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "} The typeName must be exactly Connection . Human-readable name for your connection, such as production or development . The connectorName must be exactly datastudio . The qualifiedName should follow the pattern: default/datastudio/<epoch> , where <epoch> is the time in milliseconds at which the connection is being created. The category must be bi . List any workspace roles that can administer th", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "nnection is being created. The category must be bi . List any workspace roles that can administer this connection. All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any groups that can administer t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "of adminRoles , adminGroups , or adminUsers must be provided. List any groups that can administer this connection. All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any users that can administer this connection. Note th", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "Groups , or adminUsers must be provided. List any users that can administer this connection. Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Access policies Atlan creates the policies that grant access to a connection, including the ability to retrieve the connection and to create assets within it, asynchronou", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ection, including the ability to retrieve the connection and to create assets within it, asynchronously. It can take several seconds (even up to approximately 30 seconds) before these are in place after creating the connection. You may therefore need to wait before you'll be able to create the assets below within the connection. To confirm access, retrieve the connection after it has been created.", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "s below within the connection. To confirm access, retrieve the connection after it has been created. The SDKs' retry loops will automatically retry until the connection can be successfully retrieved. At that point, your API token has permission to create the other assets. Note: if you are reusing an existing connection rather than creating one via your API token, you must give your API token a per", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "existing connection rather than creating one via your API token, you must give your API token a persona that has access to that connection. Otherwise all attempts to create, read, update, or delete assets within that connection will fail due to a lack of permissions. DataStudioAsset (report) \u00b6 2.0.0 4.0.0 A Google Data Studio report asset requires a name and a qualifiedName . For creation, you al", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "0 4.0.0 A Google Data Studio report asset requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the workspace and set the dataStudioAssetType to REPORT . Java Python Kotlin Raw REST API Create a Google Data Studio report 11 12 13 14 15 16 17 DataStudioAsset report = DataStudioAsset . creator ( // (1) \"gds-report\" , // (2) con", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "13 14 15 16 17 DataStudioAsset report = DataStudioAsset . creator ( // (1) \"gds-report\" , // (2) connectionQualifiedName , // (3) GoogleDataStudioAssetType . REPORT , // (4) \"identifier-from-gds\" ) // (5) . build (); AssetMutationResponse response = report . save ( client ); // (6) Build up the minimum request to create a report asset. Provide a human-readable name for your report asset. Provide t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "mum request to create a report asset. Provide a human-readable name for your report asset. Provide the qualifiedName of the connection for this report asset. Specify the type of the asset, to ensure we are creating a report asset. (Recommended) Provide the unique identifier of this asset, from Google Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "e Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later want to update this same asset. Alternatively, you can leave out this final parameter and a random UUID will be generated for you; however, you will not have a way to reconstruct this later for more efficient updates. Actually call Atlan to create the report asset. Because this operation will persi", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "efficient updates. Actually call Atlan to create the report asset. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create a Google Data Studio report 17 18 19 20 21 22 report = DataStudioAsset . creator ( # (1) name = \"gds-report\" , # (2) connection_qualified_name = connection_qualified_name # (3) data_studio_asset_", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "\"gds-report\" , # (2) connection_qualified_name = connection_qualified_name # (3) data_studio_asset_type = GoogleDataStudioAssetType . REPORT # (4) ) response = client . asset . save ( report ) # (5) Build up the minimum request to create a report asset. Provide a human-readable name for your report asset. Provide the qualified_name of the connection for this report asset. Specify the type of the", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "asset. Provide the qualified_name of the connection for this report asset. Specify the type of the asset, to ensure we are creating a report asset. Actually call Atlan to create the report asset. Create a Google Data Studio report 11 12 13 14 15 16 17 val report = DataStudioAsset . creator ( // (1) \"gds-report\" , // (2) connectionQualifiedName , // (3) GoogleDataStudioAssetType . REPORT , // (4)", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "\"gds-report\" , // (2) connectionQualifiedName , // (3) GoogleDataStudioAssetType . REPORT , // (4) \"identifier-from-gds\" ) // (5) . build () val response = report . save ( client ) // (6) Build up the minimum request to create a report asset. Provide a human-readable name for your report asset. Provide the qualifiedName of the connection for this report asset. Specify the type of the asset, to en", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "vide the qualifiedName of the connection for this report asset. Specify the type of the asset, to ensure we are creating a report asset. (Recommended) Provide the unique identifier of this asset, from Google Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later want to update this same asset. Alternatively, you can leave out this final parameter and a r", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "later want to update this same asset. Alternatively, you can leave out this final parameter and a random UUID will be generated for you; however, you will not have a way to reconstruct this later for more efficient updates. Actually call Atlan to create the report asset. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tena", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"entities\" : [ { \"typeName\" : \"DataStudioAsset\" , // (1) \"attributes\" : { \"name\" : \"gds-report\" , // (2) \"qualifiedName\" : \"default/datastudio/123456789/gds-report\" , // (3) \"connectionQualifiedName\" : \"default/datastudio/123456789\" ,", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "tastudio/123456789/gds-report\" , // (3) \"connectionQualifiedName\" : \"default/datastudio/123456789\" , // (4) \"connectorName\" : \"datastudio\" , // (5) \"dataStudioAssetType\" : \"REPORT\" // (6) } } ] } The typeName must be exactly DataStudioAsset . Human-readable name for your asset. The qualifiedName should follow the pattern: default/datastudio/<epoch>/<asset_name> , where default/datastudio/<epoch> i", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "uld follow the pattern: default/datastudio/<epoch>/<asset_name> , where default/datastudio/<epoch> is the qualifiedName of the connection for this asset and <asset_name> is the name of the asset. The connectionQualifiedName must be the exact qualifiedName of the connection for this asset. The connectorName must be exactly datastudio . The dataStudioAssetType must be exactly REPORT . DataStudioAsse", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "torName must be exactly datastudio . The dataStudioAssetType must be exactly REPORT . DataStudioAsset (source) \u00b6 2.0.0 4.0.0 A Google Data Studio data source asset requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the workspace and set the dataStudioAssetType to DATA_SOURCE . Java Python Kotlin Raw REST API Create a Googl", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "pace and set the dataStudioAssetType to DATA_SOURCE . Java Python Kotlin Raw REST API Create a Google Data Studio data source 11 12 13 14 15 16 17 DataStudioAsset source = DataStudioAsset . creator ( // (1) \"gds-source\" , // (2) connectionQualifiedName , // (3) GoogleDataStudioAssetType . DATA_SOURCE , // (4) \"identifier-from-gds\" ) // (5) . build (); AssetMutationResponse response = source . save", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "E , // (4) \"identifier-from-gds\" ) // (5) . build (); AssetMutationResponse response = source . save ( client ); // (6) Build up the minimum request to create a data source asset. Provide a human-readable name for your data source asset. Provide the qualifiedName of the connection for this data source asset. Specify the type of the asset, to ensure we are creating a data source asset. (Recommended", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ce asset. Specify the type of the asset, to ensure we are creating a data source asset. (Recommended) Provide the unique identifier of this asset, from Google Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later want to update this same asset. Alternatively, you can leave out this final parameter and a random UUID will be generated for you; however, yo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ely, you can leave out this final parameter and a random UUID will be generated for you; however, you will not have a way to reconstruct this later for more efficient updates. Actually call Atlan to create the data source asset. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create a Google Data Studio data source", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "e it an AtlanClient through which to connect to the tenant. Create a Google Data Studio data source 17 18 19 20 21 22 source = DataStudioAsset . creator ( # (1) name = \"gds-source\" , # (2) connection_qualified_name = connection_qualified_name # (3) data_studio_asset_type = GoogleDataStudioAssetType . DATA_SOURCE # (4) ) response = client . asset . save ( source ) # (5) Build up the minimum request", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": ". DATA_SOURCE # (4) ) response = client . asset . save ( source ) # (5) Build up the minimum request to create a data source asset. Provide a human-readable name for your data source asset. Provide the qualified_name of the connection for this data source asset. Specify the type of the asset, to ensure we are creating a data source asset. Actually call Atlan to create the data source asset. Create", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "ure we are creating a data source asset. Actually call Atlan to create the data source asset. Create a Google Data Studio data source 11 12 13 14 15 16 17 val source = DataStudioAsset . creator ( // (1) \"gds-source\" , // (2) connectionQualifiedName , // (3) GoogleDataStudioAssetType . DATA_SOURCE , // (4) \"identifier-from-gds\" ) // (5) . build () val response = source . save ( client ) // (6) Buil", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "// (4) \"identifier-from-gds\" ) // (5) . build () val response = source . save ( client ) // (6) Build up the minimum request to create a data source asset. Provide a human-readable name for your data source asset. Provide the qualifiedName of the connection for this data source asset. Specify the type of the asset, to ensure we are creating a data source asset. (Recommended) Provide the unique ide", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "pe of the asset, to ensure we are creating a data source asset. (Recommended) Provide the unique identifier of this asset, from Google Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later want to update this same asset. Alternatively, you can leave out this final parameter and a random UUID will be generated for you; however, you will not have a way to", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "his final parameter and a random UUID will be generated for you; however, you will not have a way to reconstruct this later for more efficient updates. Actually call Atlan to create the data source asset. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"e", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ugh which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"entities\" : [ { \"typeName\" : \"DataStudioAsset\" , // (1) \"attributes\" : { \"name\" : \"gds-source\" , // (2) \"qualifiedName\" : \"default/datastudio/123456789/gds-source\" , // (3) \"connectionQualifiedName\" : \"default/datastudio/123456789\" , // (4) \"connectorName\" : \"datastudio\" , // (5) \"dataStudioAssetType", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "\"default/datastudio/123456789\" , // (4) \"connectorName\" : \"datastudio\" , // (5) \"dataStudioAssetType\" : \"DATA_SOURCE\" // (6) } } ] } The typeName must be exactly DataStudioAsset . Human-readable name for your asset. The qualifiedName should follow the pattern: default/datastudio/<epoch>/<asset_name> , where default/datastudio/<epoch> is the qualifiedName of the connection for this asset and <asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": ", where default/datastudio/<epoch> is the qualifiedName of the connection for this asset and <asset_name> is the name of the asset. The connectionQualifiedName must be the exact qualifiedName of the connection for this asset. The connectorName must be exactly datastudio . The dataStudioAssetType must be exactly DATA_SOURCE . Available relationships \u00b6 Every level of the business intelligence struc", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "st be exactly DATA_SOURCE . Available relationships \u00b6 Every level of the business intelligence structure is an Asset , and can therefore be related to the following other assets. erDiagram Asset }o--o{ AtlasGlossaryTerm : meanings Asset ||--o{ Link : links Asset ||--o| Readme : readme Asset }o--o{ Process : inputToProcesses Asset }o--o{ Process : outputFromProcesses AtlasGlossaryTerm \u00b6 A glossary", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "rocess : inputToProcesses Asset }o--o{ Process : outputFromProcesses AtlasGlossaryTerm \u00b6 A glossary term provides meaning to an asset. The link terms to assets snippet provides more detail on setting this relationship. Link \u00b6 A link provides additional context to an asset, by providing a URL to additional information. Readme \u00b6 A README provides rich documentation for an asset. The add asset README", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "tional information. Readme \u00b6 A README provides rich documentation for an asset. The add asset READMEs snippet provides more detail on setting this relationship. Process \u00b6 A process provides lineage information for an asset. An asset can be both an input and an output for one or more processes. The lineage snippets provide more detail on creating and working with lineage. Although if you want to de", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ineage snippets provide more detail on creating and working with lineage. Although if you want to delete everything in a connection, your better avenue is the packaged connection delete utility in the UI. \u21a9 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/gds/", "title": "Manage Google Data Studio assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "On this page Atlan crawls and maps the following assets and properties from Amazon Redshift. Databases \u200b Atlan maps databases from Amazon Redshift to its Database asset type. Source property Atlan property DATABASE_NAME name SCHEMA_COUNT schemaCount Schemas \u200b Atlan maps schemas from Amazon Redshift to its Schema asset type. Source property Atlan property TABLE_SCHEMA name TABLE_COUNT tableCount VI", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/references/what-does-atlan-crawl-from-amazon-redshift", "title": "What does Atlan crawl from Amazon Redshift? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "to its Schema asset type. Source property Atlan property TABLE_SCHEMA name TABLE_COUNT tableCount VIEW_COUNT viewsCount DATABASE_NAME databaseName OWNER sourceCreatedBy SCHEMA_TYPE subType Tables \u200b Atlan maps tables from Amazon Redshift to its Table asset type. Source property Atlan property TABLE_NAME name REMARKS description COLUMN_COUNT columnCount ROW_COUNT rowCount BYTES sizeBytes TABLE_TYPE", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/references/what-does-atlan-crawl-from-amazon-redshift", "title": "What does Atlan crawl from Amazon Redshift? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "AME name REMARKS description COLUMN_COUNT columnCount ROW_COUNT rowCount BYTES sizeBytes TABLE_TYPE (EXTERNAL TABLE) subType LOCATION externalLocation INPUT_FORMAT externalLocationFormat TABLE_OWNER sourceCreatedBy CREATED sourceCreatedAt Views \u200b Atlan maps views from Amazon Redshift to its View and MaterialisedView asset types. Source property Atlan property TABLE_NAME name REMARKS description CO", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/references/what-does-atlan-crawl-from-amazon-redshift", "title": "What does Atlan crawl from Amazon Redshift? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "MaterialisedView asset types. Source property Atlan property TABLE_NAME name REMARKS description COLUMN_COUNT columnCount VIEW_DEFINITION definition TABLE_OWNER sourceCreatedBy Columns \u200b Atlan maps columns from Amazon Redshift to its Column asset type. Source property Atlan property COLUMN_NAME name REMARKS description ORDINAL_POSITION order TYPE_NAME dataType NOTNULL isNullable CHARACTER_MAXIMUM", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/references/what-does-atlan-crawl-from-amazon-redshift", "title": "What does Atlan crawl from Amazon Redshift? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "e REMARKS description ORDINAL_POSITION order TYPE_NAME dataType NOTNULL isNullable CHARACTER_MAXIMUM_LENGTH maxLength DECIMAL_DIGITS precision CONSTRAINT_TYPE (PRIMARY KEY) isPrimary CONSTRAINT_TYPE (FOREIGN KEY) isForeign SORTKEY isSort DISKEY isDist Databases Schemas Tables Views Columns", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/references/what-does-atlan-crawl-from-amazon-redshift", "title": "What does Atlan crawl from Amazon Redshift? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "FivetranConnector \u00b6 Instance of a Fivetran connector asset in Atlan. Complete reference This is a complete reference for the FivetranConnector object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-ste", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ppets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. FivetranConnector inherits its attributes and relationships from these other types: classDiagram direction RL class FivetranConnector link FivetranConnector \"../fivetranconnector\" class Fivetran { <<abstract>> } link Fivetran \"../fivetran\" Fivetran <|-- FivetranConnector :", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ector\" class Fivetran { <<abstract>> } link Fivetran \"../fivetran\" Fivetran <|-- FivetranConnector : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Fivetran : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "<<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from FivetranConnector 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more info", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "s \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ore information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in mi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. clas", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meani", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "te \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. appl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "d, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks pres", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "heckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the j", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ronment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in mill", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "unDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated fro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "bt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "d this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "edDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStart", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseco", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "t \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunH", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": ") when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the pr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "geName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 Al", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "his asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "ncident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "t \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "ated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "olor (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certificat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "st updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": ". connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "oses, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TB", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "e (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. l", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "dAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting pu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "he crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "reated in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 Lis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "eOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "e warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "s who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "plication. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "his asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ription of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) five", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ers who can view assets contained in a collection. (This is only used for certain asset types.) fivetranLastSyncRecordsUpdated \u00b6 Number of records updated in the latest sync on Fivetran fivetranLastSyncStatus \u00b6 Status of the latest sync on Fivetran. fivetranWorkflowName \u00b6 Name of the atlan fivetran workflow that updated this asset These attributes are specific to instances of FivetranConnector (an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "workflow that updated this asset These attributes are specific to instances of FivetranConnector (and all of its subtypes). fivetranConnectorCreditsUsed \u00b6 Total credits used by this destination fivetranConnectorDestinationName \u00b6 Destination name added by the user on Fivetran fivetranConnectorDestinationType \u00b6 Type of destination on Fivetran. Eg: redshift, bigquery etc. fivetranConnectorDestination", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "tionType \u00b6 Type of destination on Fivetran. Eg: redshift, bigquery etc. fivetranConnectorDestinationURL \u00b6 URL to open the destination details on Fivetran fivetranConnectorLastSyncExtractTimeSeconds \u00b6 Extract time in seconds in the latest sync on fivetran fivetranConnectorLastSyncExtractVolumeMegabytes \u00b6 Extracted data volume in metabytes in the latest sync on Fivetran fivetranConnectorLastSyncFini", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "es \u00b6 Extracted data volume in metabytes in the latest sync on Fivetran fivetranConnectorLastSyncFinishedAt \u00b6 Timestamp (epoch) when the latest sync finished on Fivetran, in milliseconds fivetranConnectorLastSyncId \u00b6 ID of the latest sync fivetranConnectorLastSyncLoadTimeSeconds \u00b6 Load time in seconds in the latest sync on Fivetran fivetranConnectorLastSyncLoadVolumeMegabytes \u00b6 Loaded data volume i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "s in the latest sync on Fivetran fivetranConnectorLastSyncLoadVolumeMegabytes \u00b6 Loaded data volume in metabytes in the latest sync on Fivetran fivetranConnectorLastSyncProcessTimeSeconds \u00b6 Process time in seconds in the latest sync on Fivetran fivetranConnectorLastSyncProcessVolumeMegabytes \u00b6 Process volume in metabytes in the latest sync on Fivetran fivetranConnectorLastSyncReason \u00b6 Failure reaso", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "s volume in metabytes in the latest sync on Fivetran fivetranConnectorLastSyncReason \u00b6 Failure reason for the latest sync on Fivetran. If status is FAILURE, this is the description of the reason why the sync failed. If status is FAILURE_WITH_TASK, this is the description of the Error. If status is RESCHEDULED, this is the description of the reason why the sync is rescheduled. fivetranConnectorLast", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "ESCHEDULED, this is the description of the reason why the sync is rescheduled. fivetranConnectorLastSyncRescheduledAt \u00b6 Timestamp (epoch) at which the latest sync is rescheduled at on Fivetran fivetranConnectorLastSyncStartedAt \u00b6 Timestamp (epoch) when the latest sync started on Fivetran, in milliseconds fivetranConnectorLastSyncTablesSynced \u00b6 Number of tables synced in the latest sync on Fivetran", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "conds fivetranConnectorLastSyncTablesSynced \u00b6 Number of tables synced in the latest sync on Fivetran fivetranConnectorLastSyncTaskType \u00b6 Failure task type for the latest sync on Fivetran. If status is FAILURE_WITH_TASK or RESCHEDULED, this field displays the type of the Error that caused the failure or rescheduling, respectively, e.g., reconnect, update_service_account, etc. fivetranConnectorLastS", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "or rescheduling, respectively, e.g., reconnect, update_service_account, etc. fivetranConnectorLastSyncTotalTimeSeconds \u00b6 Total sync time in seconds in the latest sync on Fivetran fivetranConnectorMonthlyActiveRowsChangePercentageFree \u00b6 Increase in the percentage of free MAR compared to the previous month fivetranConnectorMonthlyActiveRowsChangePercentagePaid \u00b6 Increase in the percentage of paid M", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "month fivetranConnectorMonthlyActiveRowsChangePercentagePaid \u00b6 Increase in the percentage of paid MAR compared to the previous month fivetranConnectorMonthlyActiveRowsChangePercentageTotal \u00b6 Increase in the percentage of total MAR compared to the previous month fivetranConnectorMonthlyActiveRowsFree \u00b6 Free Monthly Active Rows used by the connector in the past month fivetranConnectorMonthlyActiveR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "e \u00b6 Free Monthly Active Rows used by the connector in the past month fivetranConnectorMonthlyActiveRowsFreePercentageOfAccount \u00b6 Percentage of the account's total free MAR used by this connector fivetranConnectorMonthlyActiveRowsPaid \u00b6 Paid Monthly Active Rows used by the connector in the past month fivetranConnectorMonthlyActiveRowsPaidPercentageOfAccount \u00b6 Percentage of the account's total paid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "fivetranConnectorMonthlyActiveRowsPaidPercentageOfAccount \u00b6 Percentage of the account's total paid MAR used by this connector fivetranConnectorMonthlyActiveRowsTotal \u00b6 Total Monthly Active Rows used by the connector in the past month fivetranConnectorMonthlyActiveRowsTotalPercentageOfAccount \u00b6 Percentage of the account's total MAR used by this connector fivetranConnectorName \u00b6 Connector name adde", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "entage of the account's total MAR used by this connector fivetranConnectorName \u00b6 Connector name added by the user on Fivetran fivetranConnectorSyncFrequency \u00b6 Sync frequency for the connector in number of hours. Eg: Every 6 hours fivetranConnectorSyncPaused \u00b6 Boolean to indicate whether the sync for this connector is paused or not fivetranConnectorSyncSetupOn \u00b6 Timestamp (epoch) on which the conne", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "this connector is paused or not fivetranConnectorSyncSetupOn \u00b6 Timestamp (epoch) on which the connector was setup on Fivetran, in milliseconds fivetranConnectorSyncSetupUserEmail \u00b6 Email ID of the user who setpu the connector on Fivetran fivetranConnectorSyncSetupUserFullName \u00b6 Full name of the user who setup the connector on Fivetran fivetranConnectorTopTablesByMAR \u00b6 Total five tables sorted by", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "r who setup the connector on Fivetran fivetranConnectorTopTablesByMAR \u00b6 Total five tables sorted by MAR synced by this connector fivetranConnectorTotalTablesSynced \u00b6 Total number of tables synced by this connector fivetranConnectorType \u00b6 Type of connector on Fivetran. Eg: snowflake, google_analytics, notion etc. fivetranConnectorURL \u00b6 URL to open the connector details on Fivetran fivetranConnector", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": ", notion etc. fivetranConnectorURL \u00b6 URL to open the connector details on Fivetran fivetranConnectorUsageCost \u00b6 Total usage cost by this destination Relationships \u00b6 Inherited relationships These relationships are inherited from FivetranConnector 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. appl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "nedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21900}}, {"content": "set is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationship", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22200}}, {"content": "userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22500}}, {"content": "obs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC Thes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22800}}, {"content": "\u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of FivetranConnector (and all of its subtypes). processes ( Process ) \u00b6 Processes related to this Fivetran connector Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23100}}, {"content": "edback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/fivetranconnector/", "title": "FivetranConnector - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23400}}, {"content": "On this page Important Atlan currently supports Salesforce Sales Cloud and Financial Services Cloud (FSC). Atlan supports the Salesforce OAuth 2.0 client credentials flow for server-to-server integration. This flow enables Atlan to authenticate using a dedicated integration user and an external client app in Salesforce, providing secure, non-interactive access to Salesforce metadata and data for c", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "nt app in Salesforce, providing secure, non-interactive access to Salesforce metadata and data for crawling. Prerequisites \u200b Before you begin, make sure you have: Salesforce administrator access Network connectivity between Atlan and your Salesforce instance Create custom profile \u200b A custom profile defines the specific permissions and access levels for your integration user. You'll create this pro", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "defines the specific permissions and access levels for your integration user. You'll create this profile with the minimum necessary permissions for Atlan to crawl your Salesforce data securely. Create a custom profile to manage permissions for the integration user: From Setup , enter profiles in the Quick Find box and select Profiles . Click New Profile . Select Standard User from the Existing Pro", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Quick Find box and select Profiles . Click New Profile . Select Standard User from the Existing Profile dropdown to clone. Enter a name, for example AtlanIntegrationProfile . Click Save . On the new profile page, click Edit . Under Connected App Access , check the External Client App you create. Under Administrative Permissions , uncheck all except: API Enabled View All Data Run Reports Under Sta", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "der Administrative Permissions , uncheck all except: API Enabled View All Data Run Reports Under Standard Object Permissions and Custom Object Permissions , select Read and View All for all items. Click Save . Create integration user \u200b The integration user acts as the identity that Atlan uses to connect to Salesforce. This dedicated user ensures secure, auditable access separate from individual us", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "nect to Salesforce. This dedicated user ensures secure, auditable access separate from individual user accounts. Create a dedicated Salesforce user for the external client app: From Setup , expand Administration \u2192 Users and click Users . Click New User . Enter required details: First Name , Last Name , Username , Email , Nickname . Select Salesforce for User License . Assign the custom profile cre", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "e , Username , Email , Nickname . Select Salesforce for User License . Assign the custom profile created in the previous step. Click Save . Create external client app \u200b The external client app provides the OAuth infrastructure for secure server-to-server authentication. This app generates the credentials that Atlan uses to authenticate without requiring user interaction. Set up the external client", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "tials that Atlan uses to authenticate without requiring user interaction. Set up the external client app for client credentials flow: From Setup , enter external client app manager in Quick Find and select External Client App Manager . Click New External Client App . Enter: External Client App Name : for example, AtlanIntegration Contact Email : your email Distribution State : Local Expand API (En", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": ": for example, AtlanIntegration Contact Email : your email Distribution State : Local Expand API (Enable OAuth Settings) : Check Enable OAuth Set Callback URL : https://localhost (placeholder, unused) Move the following scopes to Selected OAuth Scopes : Manage user data via APIs (api) Perform requests at any time (refresh_token, offline_access) Access Lightning applications (lightning) Under Flow", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ts at any time (refresh_token, offline_access) Access Lightning applications (lightning) Under Flow Enablement , check Enable Client Credentials Flow . Enable: Require Secret for Web Server Flow Require Secret for Refresh Token Flow Optional hardening: Require Proof Key for Code Exchange (PKCE) Enable Refresh Token Rotation Issue JSON Web Token (JWT)-based access tokens Click Create . On the app d", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "le Refresh Token Rotation Issue JSON Web Token (JWT)-based access tokens Click Create . On the app details page, copy the Consumer Key (Client ID) and Consumer Secret from OAuth Settings . Store these credentials securely\u2014they're required to configure the Atlan connection. Configure policies \u200b After creating the external client app, you need to configure its security policies. These policies contr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "creating the external client app, you need to configure its security policies. These policies control which users and profiles can access the app and define the authentication flow settings. From External Client App Manager , locate your app and click Edit . Open the Policies tab. Set Start Page to None . Move the integration custom profile to Selected Profiles . If using permission sets, move re", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "None . Move the integration custom profile to Selected Profiles . If using permission sets, move relevant sets to Selected Permission Sets . In OAuth Policies , set: Permitted Users : Admin approved users are pre-authorized OAuth Start URL : leave blank unless required In OAuth Flows and External Client App Enhancements : Check Enable Client Credentials Flow Run As (Username) : enter the integrat", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "lient App Enhancements : Check Enable Client Credentials Flow Run As (Username) : enter the integration user username Set additional policies as required (IP Relaxation, Session Timeout, Refresh Token Policy) Click Save . Troubleshooting \u200b If you encounter issues with Client Credentials authentication, see Troubleshooting Salesforce Connectivity . Next steps \u200b Crawl Salesforce to configure the con", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "on, see Troubleshooting Salesforce Connectivity . Next steps \u200b Crawl Salesforce to configure the connection in Atlan. Prerequisites Create custom profile Create integration user Create external client app Troubleshooting Next steps", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/crm/salesforce/how-tos/oauth-client-credentials-setup", "title": "Set up client credentials flow | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ByocSsoConfig \u00b6 Atlas Type representing byoc sso oauth config Complete reference This is a complete reference for the ByocSsoConfig struct in Atlan, showing all of its embedded properties. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Embedded properties \u00b6 These", "metadata": {"source_url": "https://developer.atlan.com/models/structs/byocssoconfig/", "title": "ByocSsoConfig - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Embedded properties \u00b6 These are the attributes embedded within each instance of the ByocSsoConfig struct in an asset: ssoMetadataUri \u00b6 TBC ssoClientId \u00b6 TBC ssoClientSecret \u00b6 TBC ssoScope \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to pr", "metadata": {"source_url": "https://developer.atlan.com/models/structs/byocssoconfig/", "title": "ByocSsoConfig - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/structs/byocssoconfig/", "title": "ByocSsoConfig - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Microsoft SQL Server Integrate, catalog, and govern Microsoft SQL Server assets in Atlan. MySQL Integrate, catalog, and govern MySQL assets in Atlan. Oracle Integrate, catalog, and govern Oracle assets in Atlan. PostgreSQL Integrate, catalog, and govern PostgreSQL assets in Atlan.", "metadata": {"source_url": "https://docs.atlan.com/tags/relational", "title": "4 docs tagged with \"relational\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "On this page Atlan crawls and maps the following assets and properties from MicroStrategy. danger Currently Atlan only represents the assets marked with \ud83d\udd00 in lineage. Once you've crawled MicroStrategy , you can use connector-specific filters for quick asset discovery. The following filters are currently supported for these assets: Projects , attributes , facts , metrics , cubes , reports , documen", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ntly supported for these assets: Projects , attributes , facts , metrics , cubes , reports , documents , dossiers , and visualizations - Is Certified filter Cubes , reports , and visualizations - Type filter Projects \u200b Atlan maps projects from MicroStrategy to its MicroStrategyProject asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "urce property Atlan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created_at createdAt properties sidebar updated_at updatedAt properties sidebar owner owners overview sidebar Attributes \u200b Atlan maps attributes from MicroStrategy to its MicroStrategyAttribute asset type. Source property Atlan property Where in Atlan", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "croStrategy to its MicroStrategyAttribute asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created_at createdAt properties sidebar updated_at updatedAt properties sidebar owner source owner overview sidebar certifiedInfo isCertified asset filter and properties sidebar certifiedInfo cert", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "er overview sidebar certifiedInfo isCertified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar ancestors location properties sidebar forms forms overview sidebar Facts \u200b Atlan maps facts from MicroStrategy to its MicroStrategyFact asset type. Source property Atlan property Where in Atlan name name asset profile and overvi", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "egyFact asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created_at createdAt properties sidebar updated_at updatedAt properties sidebar owner source owner overview sidebar certifiedInfo isCertified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifi", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "isCertified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar ancestors location properties sidebar expressions expressions overview sidebar Metrics \u200b Atlan maps metrics from MicroStrategy to its MicroStrategyMetric asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar descr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "pe. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created_at createdAt properties sidebar updated_at updatedAt properties sidebar owner source owner overview sidebar certifiedInfo isCertified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certified", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "t filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar ancestors location properties sidebar expression expression overview sidebar Cubes \ud83d\udd00 \u200b Atlan maps cubes from MicroStrategy to its MicroStrategyCube asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description description ass", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "lan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created_at createdAt properties sidebar updated_at updatedAt properties sidebar owner source owner overview sidebar certifiedInfo isCertified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar ancestors location properties sidebar subtype type asset filter and properties sidebar sqlStatement query properties sidebar Reports \ud83d\udd00 \u200b Atlan maps reports from MicroStrategy to its MicroStrategyReport asset type. Source property Atlan property Where in Atlan name name asset profile and overview sid", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "t asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created_at createdAt properties sidebar updated_at updatedAt properties sidebar owner source owner overview sidebar certifiedInfo isCertified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar ancestors location properties sidebar subtype type asset filter and properties sidebar Documents \ud83d\udd00 \u200b Atlan maps documents from MicroStrategy to its MicroStrategyDocument asset type. Source property Atlan property Where in Atlan name name asset profile and overview sid", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "t asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created_at createdAt properties sidebar updated_at updatedAt properties sidebar owner source owner overview sidebar certifiedInfo isCertified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar ancestors location properties sidebar Dossiers \ud83d\udd00 \u200b Atlan maps dossiers from MicroStrategy to its MicroStrategyDossier asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar description description asset profile and overv", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "n Atlan name name asset profile and overview sidebar description description asset profile and overview sidebar created_at createdAt properties sidebar updated_at updatedAt properties sidebar owner source owner overview sidebar certifiedInfo isCertified asset filter and properties sidebar certifiedInfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar ancestors location p", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "nfo certifiedBy properties sidebar certifiedInfo certifiedAt properties sidebar ancestors location properties sidebar chapter chapterNames overview sidebar Visualizations \u200b Atlan maps dossier visualizations from MicroStrategy to its MicroStrategyVisualization asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar visualizationType visualizationType a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ty Where in Atlan name name asset profile and overview sidebar visualizationType visualizationType asset filter and properties sidebar Projects Attributes Facts Metrics Cubes \ud83d\udd00 Reports \ud83d\udd00 Documents \ud83d\udd00 Dossiers \ud83d\udd00 Visualizations", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microstrategy/references/what-does-atlan-crawl-from-microstrategy", "title": "What does Atlan crawl from MicroStrategy? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "AzureServiceBusTopic \u00b6 Instances of AzureServiceBusField in Atlan. Complete reference This is a complete reference for the AzureServiceBusTopic object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-st", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. AzureServiceBusTopic inherits its attributes and relationships from these other types: classDiagram direction RL class AzureServiceBusTopic link AzureServiceBusTopic \"../azureservicebustopic\" class AzureServiceBus { <<abstract>> } link AzureServiceBus \"../azureservicebus\"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ureservicebustopic\" class AzureServiceBus { <<abstract>> } link AzureServiceBus \"../azureservicebus\" AzureServiceBus <|-- AzureServiceBusTopic : extends class EventStore { <<abstract>> } link EventStore \"../eventstore\" EventStore <|-- AzureServiceBus : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- EventStore : extends class Asset { <<abstract>> } link Asset \"../asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "alog \"../catalog\" Catalog <|-- EventStore : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from AzureServiceBusTopic 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "erited from AzureServiceBusTopic 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "essAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 Use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for del", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ich the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "e Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "d to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "lly a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ed for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "CheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was ru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "set in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "(false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "dId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "terialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notification", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "d this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "JobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "aterialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "btJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materia", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "t run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "t run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everyth", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceF", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "setDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workfl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "queId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "s attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": ". assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "\u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ted Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateU", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for ex", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "scoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "awler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Arra", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "s asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "aUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "nsights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries tha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ad operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popul", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "cessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQuery", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "erRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan wor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "DKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is onl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "his asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) azureServiceBusNamespaceName \u00b6 Simple name of the AzureServiceBus Namespace in which this asset exists. azureServiceBusNamespaceQualifiedName \u00b6 Uni", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "he AzureServiceBus Namespace in which this asset exists. azureServiceBusNamespaceQualifiedName \u00b6 Unique name of the AzureServiceBus Namespace in which this asset exists. azureServiceBusSchemaQualifiedName \u00b6 Unique name of the AzureServiceBus Schema in which this asset exists. Relationships \u00b6 Inherited relationships These relationships are inherited from AzureServiceBusTopic 's supertypes: anomaloC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ed relationships These relationships are inherited from AzureServiceBusTopic 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPort", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "act ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "rDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "asks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ted by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of AzureServiceBusTopic (and all of its subtypes). azureServiceBusNamespace ( AzureServiceBusNamespace ) \u00b6 AzureServiceBusNames", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "d all of its subtypes). azureServiceBusNamespace ( AzureServiceBusNamespace ) \u00b6 AzureServiceBusNamespace asset containing this AzureServiceBusTopic. azureServiceBusSchemas ( AzureServiceBusSchema ) \u00b6 AzureServiceBusSchema assets contained within this AzureServiceBusTopic. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "ks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/azureservicebustopic/", "title": "AzureServiceBusTopic - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "Manage Preset assets \u00b6 Operations on Preset assets (connections, workspaces, collections, charts, datasets). In general, these should be: Created in top-down order (connection, then workspace, then collection, then charts and datasets) Deleted in bottom-up order (charts and datasets, then collections, then workspaces, then connections) 1 erDiagram Connection ||--o{ PresetWorkspace : contains Prese", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s, then workspaces, then connections) 1 erDiagram Connection ||--o{ PresetWorkspace : contains PresetWorkspace ||--o{ PresetDashboard : contains PresetDashboard ||--o{ PresetChart : contains PresetDashboard ||--o{ PresetDataset : contains Asset structure \u00b6 Connection \u00b6 7.0.0 4.0.0 A Preset connection requires a name and qualifiedName . For creation, specific settings are also required to distingui", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "n requires a name and qualifiedName . For creation, specific settings are also required to distinguish it as a Preset connection rather than another type of connection. In addition, at least one of adminRoles , adminGroups , or adminUsers must be provided. Java Python Kotlin Raw REST API Create a Preset connection 1 2 3 4 5 6 7 8 9 10 String adminRoleGuid = client . getRoleCache (). getIdForName (", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "eset connection 1 2 3 4 5 6 7 8 9 10 String adminRoleGuid = client . getRoleCache (). getIdForName ( \"$admin\" ); // (1) Connection connection = Connection . creator ( // (2) \"preset-connection\" , // (3) AtlanConnectorType . PRESET , // (4) List . of ( adminRoleGuid ), // (5) List . of ( \"group2\" ), // (6) List . of ( \"jsmith\" )) // (7) . build (); AssetMutationResponse response = connection . save", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "// (6) List . of ( \"jsmith\" )) // (7) . build (); AssetMutationResponse response = connection . save ( client ); // (8) String connectionQualifiedName = response . getCreatedAssets (). get ( 0 ). getQualifiedName (); // (9) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. Provide a hum", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "at can administer the connection. Build up the minimum request to create a connection. Provide a human-readable name for your connection, such as production or development . Set the type of connection to Preset. List the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connectio", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ne). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "onnection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s). At least", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "onnection (or null if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "nt through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a Preset connection 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import Connection , PresetWorkspace , PresetDashboard , PresetChart , PresetDataset from pyatlan.m", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s import Connection , PresetWorkspace , PresetDashboard , PresetChart , PresetDataset from pyatlan.model.enums import AtlanConnectorType client = AtlanClient () admin_role_guid = client . role_cache . get_id_for_name ( \"$admin\" ) # (1) connection = Connection . creator ( # (2) client = client , # (3) name = \"preset-connection\" , # (4) connector_type = AtlanConnectorType . PRESET , # (5) admin_role", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": ") name = \"preset-connection\" , # (4) connector_type = AtlanConnectorType . PRESET , # (5) admin_roles = [ admin_role_guid ], # (6) admin_groups = [ \"group2\" ], # (7) admin_users = [ \"jsmith\" ] # (8) ) response = client . asset . save ( connection ) # (9) connection_qualified_name = response . assets_created ( asset_type = Connection )[ 0 ] . qualified_name # (10) Retrieve the GUID for the admin ro", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "_created ( asset_type = Connection )[ 0 ] . qualified_name # (10) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. You must provide a client instance. Provide a human-readable name for your connection, such as production or development . Set the type of connection to Preset. List the w", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "our connection, such as production or development . Set the type of connection to Preset. List the workspace roles that should be able to administer the connection (or None if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of admin_roles , admin_groups ,", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "s here need to be the GUID(s) of the workspace role(s). At least one of admin_roles , admin_groups , or admin_users must be provided. List the group names that can administer this connection (or None if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of admin_roles , admin_grou", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "Note that the values here are the name(s) of the group(s). At least one of admin_roles , admin_groups , or admin_users must be provided. List the user names that can administer this connection (or None if none). Note that the values here are the username(s) of the user(s). At least one of admin_roles , admin_groups , or admin_users must be provided. Actually call Atlan to create the connection. R", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "es , admin_groups , or admin_users must be provided. Actually call Atlan to create the connection. Retrieve the qualified_name for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a Preset connection 1 2 3 4 5 6 7 8 9 10 val adminRoleGuid = client . roleCache . getIdForName ( \"\\ $ admin \" ) // (1) val connection = Connection . creator ( // (2) \"preset-", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "Cache . getIdForName ( \"\\ $ admin \" ) // (1) val connection = Connection . creator ( // (2) \"preset-connection\" , // (3) AtlanConnectorType . PRESET , // (4) listOf ( adminRoleGuid ), // (5) listOf ( \"group2\" ), // (6) listOf ( \"jsmith\" )) // (7) . build () val response = connection . save ( client ) // (8) val connectionQualifiedName = response . createdAssets [ 0 ] . qualifiedName // (9) Retriev", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": ") // (8) val connectionQualifiedName = response . createdAssets [ 0 ] . qualifiedName // (9) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. Provide a human-readable name for your connection, such as production or development . Set the type of connection to Preset. List the workspace", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ction, such as production or development . Set the type of connection to Preset. List the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUs", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ed to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminU", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "he values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this operat", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": ", or adminUsers must be provided. Actually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \"entities\" : [ { \"typeName\" : \"Connection\" , // (1) \"attributes\" : { \"name\" : \"preset-connection\" , // (2) \"connectorName\" : \"preset\" , // (3) \"qualifiedName\" : \"default/preset/123456789\" , // (4) \"category\" : \"bi\" , // (5) \"adminRoles\" : [ // (6) \"e7ae0295-c60a-469a-bd2c-fb903943aa", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "789\" , // (4) \"category\" : \"bi\" , // (5) \"adminRoles\" : [ // (6) \"e7ae0295-c60a-469a-bd2c-fb903943aa02\" ], \"adminGroups\" : [ // (7) \"group2\" ], \"adminUsers\" : [ // (8) \"jsmith\" ] } } ] } The typeName must be exactly Connection . Human-readable name for your connection, such as production or development . The connectorName must be exactly preset . The qualifiedName should follow the pattern: defaul", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ent . The connectorName must be exactly preset . The qualifiedName should follow the pattern: default/preset/<epoch> , where <epoch> is the time in milliseconds at which the connection is being created. The category must be bi . List any workspace roles that can administer this connection. All users with that workspace role (current and future) will be administrators of the connection. Note that t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any groups that can administer this connection. All users within that group (current and future) will be administrators of the connection. Note that the val", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "s within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any users that can administer this connection. Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be prov", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "he username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Access policies Atlan creates the policies that grant access to a connection, including the ability to retrieve the connection and to create assets within it, asynchronously. It can take several seconds (even up to approximately 30 seconds) before these are in place after creating the connecti", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "seconds (even up to approximately 30 seconds) before these are in place after creating the connection. You may therefore need to wait before you'll be able to create the assets below within the connection. To confirm access, retrieve the connection after it has been created. The SDKs' retry loops will automatically retry until the connection can be successfully retrieved. At that point, your API", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "ill automatically retry until the connection can be successfully retrieved. At that point, your API token has permission to create the other assets. Note: if you are reusing an existing connection rather than creating one via your API token, you must give your API token a persona that has access to that connection. Otherwise all attempts to create, read, update, or delete assets within that connec", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "that connection. Otherwise all attempts to create, read, update, or delete assets within that connection will fail due to a lack of permissions. PresetWorkspace \u00b6 2.0.0 4.0.0 A Preset workspace requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the workspace. Java Python Kotlin Raw REST API Create a Preset workspace 11 12", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "f the connection for the workspace. Java Python Kotlin Raw REST API Create a Preset workspace 11 12 13 14 15 16 PresetWorkspace workspace = PresetWorkspace . creator ( // (1) \"ps-workspace\" , // (2) connectionQualifiedName ) // (3) . build (); AssetMutationResponse response = workspace . save ( client ); // (4) workspace = response . getResult ( workspace ); // (5) Build up the minimum request to", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "nt ); // (4) workspace = response . getResult ( workspace ); // (5) Build up the minimum request to create a workspace. Provide a human-readable name for your workspace. Provide the qualifiedName of the connection for this workspace. Actually call Atlan to create the workspace. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to th", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "n will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created workspace for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a Preset workspace 17 18 19 20 21 22 workspace = PresetWorkspace . creator ( # (1) name = \"ps-workspace\" , # (2) connection_qualified_name = connection_qualifie", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "pace . creator ( # (1) name = \"ps-workspace\" , # (2) connection_qualified_name = connection_qualified_name # (3) ) response = client . asset . save ( workspace ) # (4) preset_workspace_qualified_name = response . assets_created ( asset_type = PresetWorkspace )[ 0 ] . qualified_name # (5) Build up the minimum request to create a workspace. Provide a human-readable name for your workspace. Provide t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "e minimum request to create a workspace. Provide a human-readable name for your workspace. Provide the qualified_name of the connection for this workspace. Actually call Atlan to create the workspace. Retrieve the created workspace for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a Preset workspace 11 12 13 14 15 16 var workspace = PresetWorkspace", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "e null checking first.) Create a Preset workspace 11 12 13 14 15 16 var workspace = PresetWorkspace . creator ( // (1) \"ps-workspace\" , // (2) connectionQualifiedName ) // (3) . build () val response = workspace . save ( client ) // (4) workspace = response . getResult ( workspace ) // (5) Build up the minimum request to create a workspace. Provide a human-readable name for your workspace. Provide", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "the minimum request to create a workspace. Provide a human-readable name for your workspace. Provide the qualifiedName of the connection for this workspace. Actually call Atlan to create the workspace. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created workspace for use in subsequent creation calls", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "which to connect to the tenant. Retrieve the created workspace for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 { \"entities\" : [ { \"typeName\" : \"PresetWorkspace\" , // (1) \"attributes\" : { \"name\" : \"ps-workspace\" , // (2) \"qualifiedName\" : \"default/preset/123456789/ps-workspace\" , // (3) \"connection", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "s-workspace\" , // (2) \"qualifiedName\" : \"default/preset/123456789/ps-workspace\" , // (3) \"connectionQualifiedName\" : \"default/preset/123456789\" , // (4) \"connectorName\" : \"preset\" // (5) } } ] } The typeName must be exactly PresetWorkspace . Human-readable name for your workspace. The qualifiedName should follow the pattern: default/preset/<epoch>/<workspace_name> , where default/preset/<epoch> is", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "should follow the pattern: default/preset/<epoch>/<workspace_name> , where default/preset/<epoch> is the qualifiedName of the connection for this workspace and <workspace_name> is the name of the workspace. The connectionQualifiedName must be the exact qualifiedName of the connection for this workspace. The connectorName must be exactly preset . PresetDashboard \u00b6 2.0.0 4.0.0 A Preset collection re", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "ace. The connectorName must be exactly preset . PresetDashboard \u00b6 2.0.0 4.0.0 A Preset collection requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the collection, and the names and qualifiedNames of the collection's ancestors. Java Python Kotlin Raw REST API Create a Preset collection 17 18 19 20 21 22 PresetDashboard co", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ors. Java Python Kotlin Raw REST API Create a Preset collection 17 18 19 20 21 22 PresetDashboard collection = PresetDashboard . creator ( // (1) \"ps-collection\" , // (2) workspace ) // (3) . build (); AssetMutationResponse response = collection . save ( client ); // (4) collection = response . getResult ( collection ); // (5) Build up the minimum request to create a collection. Provide a human-re", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "esult ( collection ); // (5) Build up the minimum request to create a collection. Provide a human-readable name for your collection. Provide the workspace for this collection. If you did not already have the object, you could also use PresetWorkspace.refByGuid() with the GUID of the workspace, or PresetWorkspace.refByQualifiedName() with the qualifiedName of the workspace. Actually call Atlan to c", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "esetWorkspace.refByQualifiedName() with the qualifiedName of the workspace. Actually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created collection for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create an Preset collec", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "equent creation calls. (You'd probably want to do some null checking first.) Create an Preset collection 23 24 25 26 27 28 collection = PresetDashboard . creator ( # (1) name = \"ps-collection\" , # (2) preset_workspace_qualified_name = preset_workspace_qualified_name # (3) ) response = client . asset . save ( collection ) # (4) preset_dashboard_qualified_name = response . assets_created ( asset_typ", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": ". save ( collection ) # (4) preset_dashboard_qualified_name = response . assets_created ( asset_type = PresetDashboard )[ 0 ] . qualified_name # (5) Build up the minimum request to create a collection. Provide a human-readable name for your collection. Provide the qualified_name of the Preset workspace for this collection. Actually call Atlan to create the collection. Retrieve the created collect", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "pace for this collection. Actually call Atlan to create the collection. Retrieve the created collection for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a Preset collection 17 18 19 20 21 22 var collection = PresetDashboard . creator ( // (1) \"ps-collection\" , // (2) workspace ) // (3) . build () val response = collection . save ( client ) // (4) c", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "lection\" , // (2) workspace ) // (3) . build () val response = collection . save ( client ) // (4) collection = response . getResult ( collection ) // (5) Build up the minimum request to create a collection. Provide a human-readable name for your collection. Provide the workspace for this collection. If you did not already have the object, you could also use PresetWorkspace.refByGuid() with the GU", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": ". If you did not already have the object, you could also use PresetWorkspace.refByGuid() with the GUID of the workspace, or PresetWorkspace.refByQualifiedName() with the qualifiedName of the workspace. Actually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "an, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created collection for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { \"entities\" : [ { \"typeName\" : \"PresetDashboard\" , // (1) \"attributes\" : { \"name\" : \"ps-collection\" , // (2) \"qualifie", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "\"typeName\" : \"PresetDashboard\" , // (1) \"attributes\" : { \"name\" : \"ps-collection\" , // (2) \"qualifiedName\" : \"default/preset/123456789/ps-workspace/ps-collection\" , // (3) \"connectionQualifiedName\" : \"default/preset/123456789\" , // (4) \"connectorName\" : \"preset\" , // (5) \"presetWorkspace\" : { // (6) \"typeName\" : \"PresetWorkspace\" , // (7) \"uniqueAttributes\" : { // (8) \"qualifiedName\" : \"default/pr", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "\"typeName\" : \"PresetWorkspace\" , // (7) \"uniqueAttributes\" : { // (8) \"qualifiedName\" : \"default/preset/123456789/ps-workspace\" } }, \"presetWorkspaceQualifiedName\" : \"default/preset/123456789/ps-workspace\" // (9) } } ] } The typeName must be exactly PresetDashboard . Human-readable name for your collection. The qualifiedName should follow the pattern: default/preset/<epoch>/<workspace_name>/<coll", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "llection. The qualifiedName should follow the pattern: default/preset/<epoch>/<workspace_name>/<collection_name> , where default/preset/<epoch>/<workspace_name> is the qualifiedName of the workspace for this collection and <collection_name> is the name for this collection. The connectionQualifiedName must be the exact qualifiedName of the connection for this collection. The connectorName must be e", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "e must be the exact qualifiedName of the connection for this collection. The connectorName must be exactly preset . The workspace in which this collection exists is embedded in the presetWorkspace attribute. The typeName for this embedded reference must be PresetWorkspace . To complete the reference, you must include a uniqueAttributes object with the qualifiedName of the workspace. Note: the work", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": ", you must include a uniqueAttributes object with the qualifiedName of the workspace. Note: the workspace must already exist in Atlan before creating the collection. The presetWorkspaceQualifiedName should be the qualifiedName of the workspace. PresetChart \u00b6 2.0.0 4.0.0 A Preset chart requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the co", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "e and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the chart, and the names and qualifiedNames of the chart's ancestors. Java Python Kotlin Raw REST API Create a Preset chart 23 24 25 26 27 PresetChart chart = PresetChart . creator ( // (1) \"ps-chart\" , // (2) collection ) // (3) . build (); AssetMutationResponse response = chart . save", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "1) \"ps-chart\" , // (2) collection ) // (3) . build (); AssetMutationResponse response = chart . save ( client ); // (4) Build up the minimum request to create a chart. Provide a human-readable name for your chart. Provide the collection for this chart. Actually call Atlan to create the chart. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "e this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create a Preset chart 29 30 31 32 33 chart = PresetChart . creator ( # (1) name = \"ps-chart \" , # (2) preset_dashboard_qualified_name = preset_dashboard_qualified_name # (3) ) response = client . asset . save ( chart ) # (4) Build up the minimum request to create a chart. Pr", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "response = client . asset . save ( chart ) # (4) Build up the minimum request to create a chart. Provide a human-readable name for your chart. Provide the qualified_name of the collection. Actually call Atlan to create the chart. Create a Preset chart 23 24 25 26 27 val chart = PresetChart . creator ( // (1) \"ps-chart\" , // (2) collection ) // (3) . build () val response = chart . save ( client )", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "r ( // (1) \"ps-chart\" , // (2) collection ) // (3) . build () val response = chart . save ( client ) // (4) Build up the minimum request to create a chart. Provide a human-readable name for your chart. Provide the collection for this chart. Actually call Atlan to create the chart. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "tion will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"entities\" : [ { \"typeName\" : \"PresetChart\" , // (1) \"attributes\" : { \"name\" : \"ps-chart\" , // (2) \"qualifiedName\" : \"default/preset/123456789/ps-workspace/ps-collection/ps-chart\" , // (3) \"connectionQual", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ifiedName\" : \"default/preset/123456789/ps-workspace/ps-collection/ps-chart\" , // (3) \"connectionQualifiedName\" : \"default/preset/123456789\" , // (4) \"connectorName\" : \"preset\" , // (5) \"presetDashboard\" : { // (6) \"typeName\" : \"PresetDashboard\" , // (7) \"uniqueAttributes\" : { // (8) \"qualifiedName\" : \"default/preset/123456789/ps-workspace/ps-collection\" } }, \"presetDashboardQualifiedName\" : \"defau", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": ": \"default/preset/123456789/ps-workspace/ps-collection\" } }, \"presetDashboardQualifiedName\" : \"default/preset/123456789/ps-workspace/ps-collection\" , // (9) \"presetWorkspaceQualifiedName\" : \"default/preset/123456789/ps-workspace\" // (10) } } ] } The typeName must be exactly PresetChart . Human-readable name for your chart. The qualifiedName should follow the pattern: default/preset/<epoch>/<worksp", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "ble name for your chart. The qualifiedName should follow the pattern: default/preset/<epoch>/<workspace_name>/<collection_name>/<chart_name> , where default/preset/<epoch>/<workspace_name>/<collection_name> is the qualifiedName of the collection for this chart and <chart_name> is the name for this chart. The connectionQualifiedName must be the exact qualifiedName of the connection for this chart.", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "hart. The connectionQualifiedName must be the exact qualifiedName of the connection for this chart. The connectorName must be exactly preset . The collection in which this chart exists is embedded in the presetDashboard attribute. The typeName for this embedded reference must be PresetDashboard . To complete the reference, you must include a uniqueAttributes object with the qualifiedName of the co", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "complete the reference, you must include a uniqueAttributes object with the qualifiedName of the collection. Note: the collection must already exist in Atlan before creating the chart. The presetDashboardQualifiedName should be the qualifiedName of the collection. The presetWorkspaceQualifiedName should be the qualifiedName of the workspace. PresetDataset \u00b6 2.0.0 4.0.0 A Preset dataset requires a", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "hould be the qualifiedName of the workspace. PresetDataset \u00b6 2.0.0 4.0.0 A Preset dataset requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the dataset, and the names and qualifiedNames of the dataset's ancestors. Java Python Kotlin Raw REST API Create a Preset dataset 23 24 25 26 27 PresetDataset dataset = PresetDataset", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "on Kotlin Raw REST API Create a Preset dataset 23 24 25 26 27 PresetDataset dataset = PresetDataset . creator ( // (1) \"ps-dataset\" , // (2) collection ) // (3) . build (); AssetMutationResponse response = dataset . save ( client ); // (4) Build up the minimum request to create a dataset. Provide a human-readable name for your dataset. Provide the collection for this dataset. Actually call Atlan t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "human-readable name for your dataset. Provide the collection for this dataset. Actually call Atlan to create the dataset. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create a Preset dataset 29 30 31 32 33 dataset = PresetDataset . creator ( # (1) name = \"ps-dataset \" , # (2) preset_dashboard_qualified_name = pre", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "= PresetDataset . creator ( # (1) name = \"ps-dataset \" , # (2) preset_dashboard_qualified_name = preset_dashboard_qualified_name # (3) ) response = client . asset . save ( dataset ) # (4) Build up the minimum request to create a dataset. Provide a human-readable name for your dataset. Provide the qualified_name of the collection. Actually call Atlan to create the dataset. Create a Preset dataset 2", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "alified_name of the collection. Actually call Atlan to create the dataset. Create a Preset dataset 23 24 25 26 27 val dataset = PresetDataset . creator ( // (1) \"ps-dataset\" , // (2) collection ) // (3) . build () val response = dataset . save ( client ) // (4) Build up the minimum request to create a dataset. Provide a human-readable name for your dataset. Provide the collection for this dataset.", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "a dataset. Provide a human-readable name for your dataset. Provide the collection for this dataset. Actually call Atlan to create the dataset. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"entities\" : [ { \"typeName\" : \"PresetDatas", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21900}}, {"content": "k 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"entities\" : [ { \"typeName\" : \"PresetDataset\" , // (1) \"attributes\" : { \"name\" : \"ps-dataset\" , // (2) \"qualifiedName\" : \"default/preset/123456789/ps-workspace/ps-collection/ps-dataset\" , // (3) \"connectionQualifiedName\" : \"default/preset/123456789\" , // (4) \"connectorName\" : \"preset\" , // (5) \"presetDashboard\" : { // (6) \"typeName\" : \"Pres", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22200}}, {"content": "456789\" , // (4) \"connectorName\" : \"preset\" , // (5) \"presetDashboard\" : { // (6) \"typeName\" : \"PresetDashboard\" , // (7) \"uniqueAttributes\" : { // (8) \"qualifiedName\" : \"default/preset/123456789/ps-workspace/ps-collection\" } }, \"presetDashboardQualifiedName\" : \"default/preset/123456789/ps-workspace/ps-collection\" , // (9) \"presetWorkspaceQualifiedName\" : \"default/preset/123456789/ps-workspace\" //", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22500}}, {"content": "/ps-collection\" , // (9) \"presetWorkspaceQualifiedName\" : \"default/preset/123456789/ps-workspace\" // (10) } } ] } The typeName must be exactly PresetDataset . Human-readable name for your dataset. The qualifiedName should follow the pattern: default/preset/<epoch>/<workspace_name>/<collection_name>/<dataset_name> , where default/preset/<epoch>/<workspace_name>/<collection_name> is the qualifiedNam", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22800}}, {"content": "<dataset_name> , where default/preset/<epoch>/<workspace_name>/<collection_name> is the qualifiedName of the collection for this dataset and <dataset_name> is the name for this dataset. The connectionQualifiedName must be the exact qualifiedName of the connection for this dataset. The connectorName must be exactly preset . The collection in which this dataset exists is embedded in the presetDashbo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23100}}, {"content": "must be exactly preset . The collection in which this dataset exists is embedded in the presetDashboard attribute. The typeName for this embedded reference must be PresetDashboard . To complete the reference, you must include a uniqueAttributes object with the qualifiedName of the collection. Note: the collection must already exist in Atlan before creating the dataset. The presetDashboardQualified", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23400}}, {"content": "the collection must already exist in Atlan before creating the dataset. The presetDashboardQualifiedName should be the qualifiedName of the collection. The presetWorkspaceQualifiedName should be the qualifiedName of the workspace. Available relationships \u00b6 Every level of the business intelligence structure is an Asset , and can therefore be related to the following other assets. erDiagram Asset }o", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23700}}, {"content": "ructure is an Asset , and can therefore be related to the following other assets. erDiagram Asset }o--o{ AtlasGlossaryTerm : meanings Asset ||--o{ Link : links Asset ||--o| Readme : readme Asset }o--o{ Process : inputToProcesses Asset }o--o{ Process : outputFromProcesses AtlasGlossaryTerm \u00b6 A glossary term provides meaning to an asset. The link terms to assets snippet provides more detail on setti", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24000}}, {"content": "ry term provides meaning to an asset. The link terms to assets snippet provides more detail on setting this relationship. Link \u00b6 A link provides additional context to an asset, by providing a URL to additional information. Readme \u00b6 A README provides rich documentation for an asset. The add asset READMEs snippet provides more detail on setting this relationship. Process \u00b6 A process provides lineage", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24300}}, {"content": "DMEs snippet provides more detail on setting this relationship. Process \u00b6 A process provides lineage information for an asset. An asset can be both an input and an output for one or more processes. The lineage snippets provide more detail on creating and working with lineage. Although if you want to delete everything in a connection, your better avenue is the packaged connection delete utility in", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24600}}, {"content": "delete everything in a connection, your better avenue is the packaged connection delete utility in the UI. \u21a9 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/preset/", "title": "Manage Preset assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24900}}, {"content": "On this page warning \ud83e\udd13 Who can do this? You will probably need your Amazon QuickSight administrator to run these commands - you may not have access yourself. Atlan currently only supports IAM user authentication for Amazon QuickSight. Create IAM policy \u200b To create an IAM policy with the necessary permissions, follow the steps in the AWS Identity and Access Management User Guide . Create the policy", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/how-tos/set-up-amazon-quicksight", "title": "Set up Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "rmissions, follow the steps in the AWS Identity and Access Management User Guide . Create the policy using the following JSON: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"quicksight:ListAnalyses\" , \"quicksight:ListDataSets\" , \"quicksight:ListDashboards\" , \"quicksight:ListFolders\" , \"quicksight:ListDataSources\" , \"quicksight:DescribeAnalysis\" , \"quicksight:Desc", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/how-tos/set-up-amazon-quicksight", "title": "Set up Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "sight:ListFolders\" , \"quicksight:ListDataSources\" , \"quicksight:DescribeAnalysis\" , \"quicksight:DescribeDashboard\" , \"quicksight:DescribeDataSet\" , \"quicksight:DescribeFolder\" , \"quicksight:ListFolderMembers\" ] , \"Resource\" : [ \"arn:aws:quicksight:<region>:<account_id>:*\" ] } ] } Replace <region> with the AWS region of your Amazon QuickSight instance. Replace <account_id> with your AWS account ID.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/how-tos/set-up-amazon-quicksight", "title": "Set up Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "th the AWS region of your Amazon QuickSight instance. Replace <account_id> with your AWS account ID. Configure user-based authentication \u200b Using the IAM policy created above, configure user-based authentication. To configure user-based authentication: Create an AWS IAM user by following the steps in the AWS Identity and Access Management User Guide . On the Set permissions page, attach the policy", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/how-tos/set-up-amazon-quicksight", "title": "Set up Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "the AWS Identity and Access Management User Guide . On the Set permissions page, attach the policy created in the previous step to this user. Once the user is created, view or download the user's access key ID and secret access key . danger This will be your only opportunity to view or download the access keys. You will not have access to them again after leaving the user creation screen. Create", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/how-tos/set-up-amazon-quicksight", "title": "Set up Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "access keys. You will not have access to them again after leaving the user creation screen. Create IAM policy Configure user-based authentication", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/how-tos/set-up-amazon-quicksight", "title": "Set up Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "On this page Who can do this? You will need access to a machine that can run Docker on-premises. You will also need your Looker access details, including credentials. In some cases you won't be able to expose your Looker instance for Atlan to crawl and ingest metadata. For example, this may happen when security requirements restrict access to sensitive, mission-critical data. In such cases you may", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "hen security requirements restrict access to sensitive, mission-critical data. In such cases you may want to decouple the extraction of metadata from its ingestion in Atlan. This approach gives you full control over your resources and metadata transfer to Atlan. Prerequisites \u200b To extract metadata from your on-premises Looker instance you will need to use Atlan's looker-extractor tool. Did you kno", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "rom your on-premises Looker instance you will need to use Atlan's looker-extractor tool. Did you know? Atlan uses exactly the same looker-extractor behind the scenes when it connects to Looker in the cloud. Install Docker Compose \u200b Docker Compose is a tool for defining and running applications composed of many Docker containers. (Any guesses where the name came from? \ud83d\ude09) To install Docker Compose:", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "sed of many Docker containers. (Any guesses where the name came from? \ud83d\ude09) To install Docker Compose: Install Docker Install Docker Compose Did you know? Instructions provided in this documentation should be enough even if you are completely new to Docker and Docker Compose. But you can also walk through the Get started with Docker Compose tutorial if you want to learn Docker Compose basics first. G", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ugh the Get started with Docker Compose tutorial if you want to learn Docker Compose basics first. Get the looker-extractor tool \u200b To get the looker-extractor tool: Raise a support ticket to get a link to the latest version. Download the image using the link provided by support. Load the image to the server you'll use to crawl Looker: sudo docker load -i /path/to/looker-extractor-master.tar Get th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "e server you'll use to crawl Looker: sudo docker load -i /path/to/looker-extractor-master.tar Get the compose file \u200b Atlan provides you with a configuration file for the looker-extractor tool. This is a Docker compose file . To get the compose file: Download the latest compose file . Save the file to an empty directory on the server you'll use to access your on-premises databases. The file is dock", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "o an empty directory on the server you'll use to access your on-premises databases. The file is docker-compose.yaml . Define Looker connections \u200b The structure of the compose file includes three main sections: x-templates contains configuration fragments. You should ignore this section - do not make any changes to it. services is where you will define your Looker connections. volumes contains moun", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "any changes to it. services is where you will define your Looker connections. volumes contains mount information. You should ignore this section as well - do not make any changes to it. Define services \u200b For each on-premises Looker instance, define an entry under services in the compose file. Each entry will have the following structure: services: CONNECTION-NAME: <<: *extract environment: <<: *l", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "entry will have the following structure: services: CONNECTION-NAME: <<: *extract environment: <<: *looker-defaults INCLUDE_PROJECTS: \"project1,project2\" USE_FIELD_LEVEL_LINEAGE: \"true\" volumes: - ./output/looker-example:/output/process Replace CONNECTION-NAME with the name of your connection. <<: *extract tells the looker-extractor tool to run. environment contains all parameters for the tool. Rep", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "xtract tells the looker-extractor tool to run. environment contains all parameters for the tool. Replaces the values given for INCLUDE_PROJECTS with the names of your own Looker projects you want to extract. Separate each project name by a comma. volumes specifies where to store results. In this example, the extractor will store results in the ./output/looker-example folder on the local file syste", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "mple, the extractor will store results in the ./output/looker-example folder on the local file system. You can add as many Looker connections as you want. Did you know? Docker's documentation describes the services format in more detail. Provide credentials \u200b To define the credentials for your Looker connections you will need to provide: A Looker SDK configuration file A private key to access your", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "r connections you will need to provide: A Looker SDK configuration file A private key to access your git repository via ssh (to extract field-level lineage) A passphrase to decipher the private key (to extract field-level lineage) The Looker metadata includes the git repo locations. The Looker SDK configuration is a .ini file with the following format: [Looker] # Base URL for your looker instance", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "onfiguration is a .ini file with the following format: [Looker] # Base URL for your looker instance API. Do not include /api/* in the URL. base_url=https://<host>:<port> # API 3 client id client_id=YourClientID # API 3 client secret client_secret=YourClientSecret verify_ssl=True Secure credentials \u200b Using local files \u200b danger If you decide to keep Looker credentials in plaintext files, we recommen", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "Using local files \u200b danger If you decide to keep Looker credentials in plaintext files, we recommend you restrict access to the directory and the compose file. For extra security, we recommend you use Docker secrets to store the sensitive passwords. To specify the local files in your compose file: secrets: looker_config: file: ./looker.ini looker_git_private_key: file: ./id_ed25519 looker_git_pri", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "secrets: looker_config: file: ./looker.ini looker_git_private_key: file: ./id_ed25519 looker_git_private_key_passphrase: file: ./passphrase.txt danger This secrets section is at the same top-level as the services section described earlier. It is not a sub-section of the services section. Using Docker secrets \u200b To create and use Docker secrets: Store the Looker SDK configuration file: sudo docker s", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "r secrets \u200b To create and use Docker secrets: Store the Looker SDK configuration file: sudo docker secret create looker_config path/to/looker.ini At the top of your compose file, add a secrets element to access your secret: secrets: looker_config: external: true name: looker_config The name should be the same one you used in the docker secret create command above. Once stored as a Docker secret, y", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "e the same one you used in the docker secret create command above. Once stored as a Docker secret, you can remove the local Looker SDK configuration file. info \ud83d\udcaa Did you know? You can use the same steps to create Docker secrets for your git details, as well. Replace the name ( looker_config ) and path to the file, but otherwise run the same command. Within the service section of the compose file,", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "th to the file, but otherwise run the same command. Within the service section of the compose file, add a new secrets element and specify the name of the secret within your service to use it. Example \u200b Let's explain in detail with an example: secrets: looker_config: external: true name: looker_config looker_git_private_key: file: ./id_ed25519 looker_git_private_key_passphrase: external: true name:", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "g looker_git_private_key: file: ./id_ed25519 looker_git_private_key_passphrase: external: true name: looker_git_private_key_passphrase x-templates: # ... services: my-looker: <<: *extract environment: <<: *looker-defaults INCLUDE_PROJECTS: \"project1,project2\" USE_FIELD_LEVEL_LINEAGE: \"true\" volumes: - ./output/looker-example:/output/process secrets: - looker_config - looker_git_private_key - looke", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "- ./output/looker-example:/output/process secrets: - looker_config - looker_git_private_key - looker_git_private_key_passphrase volumes: jars: In this example we've defined the secrets at the top of the file (you could also define them at the bottom): looker_config refers to an external Docker secret created using the docker secret create command. looker_git_private_key refers to a local file. lo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "et created using the docker secret create command. looker_git_private_key refers to a local file. looker_git_private_key_passphrase refers to an external Docker secret created using the docker secret create command. The name of this service is my-looker . You can use any meaningful name you want. The <<: *looker-defaults sets the connection type to Looker. INCLUDE_PROJECTS tells the extractor to o", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "e <<: *looker-defaults sets the connection type to Looker. INCLUDE_PROJECTS tells the extractor to only extract project1 and project2 from Looker. USE_FIELD_LEVEL_LINEAGE tells the extractor to extract field-level lineage. This means the git private key information is also required. The ./output/looker-example:/output/process line tells the extractor where to store results. In this example, the ex", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ker-example:/output/process line tells the extractor where to store results. In this example, the extractor will store results in the ./output/looker-example directory on the local file system. We recommend you output metadata for different connections in separate directories. The secrets section within services tells the extractor which secrets to use for this service. Each of these refers to the", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "thin services tells the extractor which secrets to use for this service. Each of these refers to the name of a secret listed at the beginning of the compose file. Prerequisites Get the compose file Define Looker connections Provide credentials Secure credentials Example", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/how-tos/set-up-on-premises-looker-access", "title": "Set up on-premises Looker access | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "DbtColumnProcess \u00b6 Instance of a column-level dbt process in Atlan. Complete reference This is a complete reference for the DbtColumnProcess object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DbtColumnProcess inherits its attributes and relationships from these other types: classDiagram direction RL class DbtColumnProcess link DbtColumnProcess \"../dbtcolumnprocess\" class Dbt { <<abstract>> } link Dbt \"../dbt\" Dbt <|-- DbtColumnProcess : extends class Catalog { <<", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "class Dbt { <<abstract>> } link Dbt \"../dbt\" Dbt <|-- DbtColumnProcess : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Dbt : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class ColumnProcess link ColumnProcess \"../c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "e \"../referenceable\" Referenceable <|-- Asset : extends class ColumnProcess link ColumnProcess \"../columnprocess\" ColumnProcess <|-- DbtColumnProcess : extends class Process link Process \"../process\" Process <|-- ColumnProcess : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Process : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "rocess : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DbtColumnProcess 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ntifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. stat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "stomMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "reated the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "(1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ns to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. additionalEtlContext \u00b6 TBC ast \u00b6 TBC code \u00b6 TBC sql \u00b6 TBC qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "lifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed mess", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "inister this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "nt on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheck", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "QualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anom", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "(epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environm", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "vironment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "h in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ted \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "otificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ob that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "conds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "ation of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "tJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobSche", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "uled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageNa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "lowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "e Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "verities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "et. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "arlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "tail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": ". connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ion \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "ther this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "(epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 Lis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "ty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was creat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "he unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive wa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "CostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read que", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "adPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ce_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ferent name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "\u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source applic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "ource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Descript", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) dbtAccountName \u00b6 TBC dbtAlias \u00b6 TBC dbtConnectionContext \u00b6 TBC dbtEnvironmentDbtVersion \u00b6 TBC dbtEnvironmentName \u00b6 TBC dbtJobLastRun \u00b6 TBC dbtJobName \u00b6 TBC dbtJobNextRun \u00b6 TBC dbtJobNextRunHumanized \u00b6 TBC dbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "Name \u00b6 TBC dbtJobLastRun \u00b6 TBC dbtJobName \u00b6 TBC dbtJobNextRun \u00b6 TBC dbtJobNextRunHumanized \u00b6 TBC dbtJobRuns \u00b6 List of latest DBT job runs across all environments dbtJobSchedule \u00b6 TBC dbtJobScheduleCronHumanized \u00b6 TBC dbtJobStatus \u00b6 TBC dbtMeta \u00b6 TBC dbtPackageName \u00b6 TBC dbtProjectName \u00b6 TBC dbtSemanticLayerProxyUrl \u00b6 TBC dbtTags \u00b6 TBC dbtUniqueId \u00b6 TBC These attributes are specific to instances of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ticLayerProxyUrl \u00b6 TBC dbtTags \u00b6 TBC dbtUniqueId \u00b6 TBC These attributes are specific to instances of DbtColumnProcess (and all of its subtypes). dbtColumnProcessJobStatus \u00b6 TBC Relationships \u00b6 Inherited relationships These relationships are inherited from DbtColumnProcess 's supertypes: adfActivity ( AdfActivity ) \u00b6 TBC airflowTasks ( AirflowTask ) \u00b6 TBC columnProcesses ( ColumnProcess ) \u00b6 TBC fiv", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "( AdfActivity ) \u00b6 TBC airflowTasks ( AirflowTask ) \u00b6 TBC columnProcesses ( ColumnProcess ) \u00b6 TBC fivetranConnector ( FivetranConnector ) \u00b6 TBC inputs ( Catalog ) \u00b6 TBC matillionComponent ( MatillionComponent ) \u00b6 TBC outputs ( Catalog ) \u00b6 TBC powerBIDataflow ( PowerBIDataflow ) \u00b6 TBC sparkJobs ( SparkJob ) \u00b6 TBC anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Applicati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "kJob ) \u00b6 TBC anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( Dat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ile ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 READM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttribute", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "es to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "is asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC process ( Process ) \u00b6 Process in which this task exists. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbtcolumnprocess/", "title": "DbtColumnProcess - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "ModeWorkspace \u00b6 Instance of a Mode workspace in Atlan. Complete reference This is a complete reference for the ModeWorkspace object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "mic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. ModeWorkspace inherits its attributes and relationships from these other types: classDiagram direction RL class ModeWorkspace link ModeWorkspace \"../modeworkspace\" class Mode { <<abstract>> } link Mode \"../mode\" Mode <|-- ModeWorkspace : extends class BI { <<abstract>> } link BI \"../bi\" BI", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "link Mode \"../mode\" Mode <|-- ModeWorkspace : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Mode : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Propert", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "le { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from ModeWorkspace 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more inf", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ns \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. cla", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "t try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. mean", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "e identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the annou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. app", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ed, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks pre", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "CheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ironment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": ". assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in mil", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "RunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA has", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated fr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ed this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "uedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStar", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "lized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in millisec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "At \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "h) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "bScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "ageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedN", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "e of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types assoc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "s associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "At \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "iated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "Count \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset'", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certifica", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ast updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a differen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "e. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "poses, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ge (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "edAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "\u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 Li", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ve warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordLis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "d queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "rs who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) U", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "RecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "s sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "pplication. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have star", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "cription of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) mod", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "sers who can view assets contained in a collection. (This is only used for certain asset types.) modeId \u00b6 TBC modeQueryName \u00b6 TBC modeQueryQualifiedName \u00b6 TBC modeReportName \u00b6 TBC modeReportQualifiedName \u00b6 TBC modeToken \u00b6 TBC modeWorkspaceName \u00b6 TBC modeWorkspaceQualifiedName \u00b6 TBC modeWorkspaceUsername \u00b6 TBC These attributes are specific to instances of ModeWorkspace (and all of its subtypes). mo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "name \u00b6 TBC These attributes are specific to instances of ModeWorkspace (and all of its subtypes). modeCollectionCount \u00b6 Number of collections in this workspace. Relationships \u00b6 Inherited relationships These relationships are inherited from ModeWorkspace 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "\u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data con", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "Ks assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attache", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "uct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegist", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRela", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "ip_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemente", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ocess ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of ModeWorkspace (and all of its subtypes). modeCollections ( ModeCollection ) \u00b6 Collections that exist within this workspace. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/modeworkspace/", "title": "ModeWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "GoogleTag \u00b6 Detailed information about a Google tag. Complete reference This is a complete reference for the GoogleTag struct in Atlan, showing all of its embedded properties. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Embedded properties \u00b6 These are the attr", "metadata": {"source_url": "https://developer.atlan.com/models/structs/googletag/", "title": "GoogleTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "walkthroughs of common multi-step implementation patterns. Embedded properties \u00b6 These are the attributes embedded within each instance of the GoogleTag struct in an asset: googleTagKey \u00b6 Key of the Google tag. googleTagValue \u00b6 Value for the Google tag. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us wit", "metadata": {"source_url": "https://developer.atlan.com/models/structs/googletag/", "title": "GoogleTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ck! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/structs/googletag/", "title": "GoogleTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Crawl GCS assets Configure and run the GCS crawler to catalog your GCP GCS buckets and objects in Atlan. Crawl S3 assets Configure and run the S3 crawler to catalog your Amazon S3 buckets and objects in Atlan. Custom Metadata Learn how to create and manage custom metadata attributes in Atlan to extend your data catalog with organization-specific information. Google Cloud Storage Integrate, catalog", "metadata": {"source_url": "https://docs.atlan.com/tags/data-catalog", "title": "6 docs tagged with \"data-catalog\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "nd your data catalog with organization-specific information. Google Cloud Storage Integrate, catalog, and govern Google Cloud Storage assets in Atlan. What does Atlan crawl from Amazon S3 Complete reference for the S3 assets and properties that Atlan crawls and maps during S3 cataloging. What does Atlan crawl from Google GCS Complete reference for the GCS assets and properties that Atlan crawls an", "metadata": {"source_url": "https://docs.atlan.com/tags/data-catalog", "title": "6 docs tagged with \"data-catalog\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "tlan crawl from Google GCS Complete reference for the GCS assets and properties that Atlan crawls and maps during GCS cataloging.", "metadata": {"source_url": "https://docs.atlan.com/tags/data-catalog", "title": "6 docs tagged with \"data-catalog\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "AtlasGlossaryTermRelationshipStatus \u00b6 How reliable the relationship is between two glossary terms. Complete reference This is a complete reference for the AtlasGlossaryTermRelationshipStatus enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common mul", "metadata": {"source_url": "https://developer.atlan.com/models/enums/atlasglossarytermrelationshipstatus/", "title": "AtlasGlossaryTermRelationshipStatus - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "h: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 DRAFT ACTIVE DEPRECATED OBSOLETE OTHER Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/atlasglossarytermrelationshipstatus/", "title": "AtlasGlossaryTermRelationshipStatus - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "A Glossary A glossary is a list of terms that is organized in a specific way to help users understand their data assets. For example, terms like `cost`, `P&L`, and `revenue` can be used to group and search all financial data assets. Bulk upload terms in the glossary Learn about bulk upload terms in the glossary. Can I add duplicate glossary terms? Each [term](/product/capabilities/governance/gloss", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "the glossary. Can I add duplicate glossary terms? Each [term](/product/capabilities/governance/glossary/concepts/what-is-a-glossary#term) in a glossary should be unique. Duplicate terms in the same glossary may cause confusion rather than provide the context that users need. Enable associated terms To enable associated terms, follow these steps. Glossary update request approval issue Learn about w", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "To enable associated terms, follow these steps. Glossary update request approval issue Learn about why am i unable to approve a glossary update request?. How do I fully delete glossary terms or archived items? Learn about how do i fully delete glossary terms or archived items?. Link terms to assets Once you've [set up a glossary](/product/capabilities/governance/glossary/how-tos/set-up-glossaries)", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Once you've [set up a glossary](/product/capabilities/governance/glossary/how-tos/set-up-glossaries), you can link terms from your glossary to your data assets in Atlan. Report on assets Learn about report on assets. Report on automations You can track asset enrichment through [suggestions from similar assets](/product/integrations/automation/always-on/references/suggestions-from-similar-assets).", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "lar assets](/product/integrations/automation/always-on/references/suggestions-from-similar-assets). You can also view top users who have accepted automated suggestions. Report on glossaries The [glossary](/product/capabilities/governance/glossary/concepts/what-is-a-glossary) dashboard in the reporting center helps you track your glossaries, categories, and terms. You can view a high-level overview", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ng center helps you track your glossaries, categories, and terms. You can view a high-level overview of all your glossaries or use a [variety of filters](/product/capabilities/discovery/how-tos/use-the-filters-menu) to drill down further. Report on governance You can review query access for your personas and purposes from the governance dashboard. This can be especially helpful in managing your da", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "sonas and purposes from the governance dashboard. This can be especially helpful in managing your data governance setup. Report on queries The Insights dashboard in the reporting center helps you track metrics for all your [queries](/product/capabilities/insights/how-tos/query-data) and query runs. Report on usage and cost The usage and cost dashboard in the reporting center can help you better un", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Report on usage and cost The usage and cost dashboard in the reporting center can help you better understand asset usage and optimize your operations accordingly. You can track storage consumption for your assets, sort asset metrics by popularity, and filter assets by context - all in one dashboard. Restrict asset visibility Note that [glossary access works slightly differently](/product/administr", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "Restrict asset visibility Note that [glossary access works slightly differently](/product/administration/labs/how-tos/restrict-glossary-visibility). Restrict glossary visibility Restrict glossary visibility <Badge variant=\"preview\" text=\"Private Preview\" link=\"/get-started/references/product-release-stages#private-preview\" /> Set up glossaries The Atlan [glossary](/product/capabilities/governance", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "e-stages#private-preview\" /> Set up glossaries The Atlan [glossary](/product/capabilities/governance/glossary/concepts/what-is-a-glossary) allows you to add new terms and categories, search for existing glossary definitions, and archive old ones. You can also nest terms under categories and subcategories to create a glossary hierarchy. Summarize metadata The reporting center helps you summarize an", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "ories to create a glossary hierarchy. Summarize metadata The reporting center helps you summarize and report on what's happening to your assets in Atlan. You can track metrics for asset enrichment, view metadata updates over time, review your data governance setup, and so much more.", "metadata": {"source_url": "https://docs.atlan.com/tags/business-terms", "title": "17 docs tagged with \"business-terms\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "Cube model \u00b6 Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand how to manage multidimensional cube assets in Atlan. For that, we would suggest starting with the manage cube assets pattern . These model elements all deal with multidimensional cube constructs. classDiagram direction RL class MultiDimen", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "elements all deal with multidimensional cube constructs. classDiagram direction RL class MultiDimensionalDataset { <<abstract>> } link MultiDimensionalDataset \"../multidimensionaldataset\" class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- MultiDimensionalDataset : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abs", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "sset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class Cube link Cube \"entities/cube\" MultiDimensionalDataset <|-- Cube : extends class CubeHierarchy link CubeHierarchy \"../entities/cubehierarchy\" MultiDimensionalDataset <|-- CubeHierarchy : extends class CubeField", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "hy \"../entities/cubehierarchy\" MultiDimensionalDataset <|-- CubeHierarchy : extends class CubeField link CubeField \"../entities/cubefield\" MultiDimensionalDataset <|-- CubeField : extends class CubeDimension link CubeDimension \"../entities/cubedimension\" MultiDimensionalDataset <|-- CubeDimension : extends Properties \u00b6 These attributes are specific to instances of MultiDimensionalDataset (and all", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "extends Properties \u00b6 These attributes are specific to instances of MultiDimensionalDataset (and all of its subtypes). cubeDimensionName \u00b6 Simple name of the cube dimension in which this asset exists, or empty if it is itself a dimension. cubeDimensionQualifiedName \u00b6 Unique name of the cube dimension in which this asset exists, or empty if it is itself a dimension. cubeHierarchyName \u00b6 Simple name o", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "in which this asset exists, or empty if it is itself a dimension. cubeHierarchyName \u00b6 Simple name of the dimension hierarchy in which this asset exists, or empty if it is itself a hierarchy. cubeHierarchyQualifiedName \u00b6 Unique name of the dimension hierarchy in which this asset exists, or empty if it is itself a hierarchy. cubeName \u00b6 Simple name of the cube in which this asset exists, or empty if", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "it is itself a hierarchy. cubeName \u00b6 Simple name of the cube in which this asset exists, or empty if it is itself a cube. cubeQualifiedName \u00b6 Unique name of the cube in which this asset exists, or empty if it is itself a cube. Relationships \u00b6 The following illustrates how the various pieces of multi-dimensional datasets inter-relate with each other: erDiagram Connection ||..o{ Cube : \"\" Cube ||--o", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "-dimensional datasets inter-relate with each other: erDiagram Connection ||..o{ Cube : \"\" Cube ||--o{ CubeDimension : cubeDimensions CubeDimension ||--o{ CubeHierarchy : cubeHierarchies CubeHierarchy ||--o{ CubeField : cubeFields CubeField |o--o{ CubeField : cubeNestedFields Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback f", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "hanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/multidimensionaldataset/", "title": "Cubes - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "End-to-end bulk update \u00b6 Running example To walk through this using an example, and to compare and contrast the approaches, imagine you want to: Mark all views (including materialized views) in a particular schema as verified, unless they already have some certificate. Change the owner of the same views. Step-by-step \u00b6 The usual end-to-end pattern for updating many assets efficiently involves thre", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "iews. Step-by-step \u00b6 The usual end-to-end pattern for updating many assets efficiently involves three steps: Finding the assets you want to update. Applying your updates to each asset (in-memory). Sending those changes to Atlan (in batches). You can do each of these steps in sequence, for example: 1. Find the assets \u00b6 1.4.0 1.1.0 You start by first finding the assets you want to update. This is us", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": ". Find the assets \u00b6 1.4.0 1.1.0 You start by first finding the assets you want to update. This is usually best done through a search . (For other common examples, have a look at the search snippets .) Java Python Kotlin Raw REST API Example: get all views in a schema 1 2 3 4 5 6 7 8 9 10 11 12 String schemaQN = \"default/snowflake/1662194632/MYDB/MY_SCH\" ; // (1) IndexSearchRequest findViews = clie", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "g schemaQN = \"default/snowflake/1662194632/MYDB/MY_SCH\" ; // (1) IndexSearchRequest findViews = client . assets . select () // (2) . where ( Asset . QUALIFIED_NAME . startsWith ( schemaQN )) // (3) . where ( Asset . TYPE_NAME . in ( List . of ( View . TYPE_NAME , MaterializedView . TYPE_NAME ))) // (4) . whereNot ( Asset . CERTIFICATE_STATUS . hasAnyValue ()) // (5) . pageSize ( 100 ) // (6) . inc", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "(4) . whereNot ( Asset . CERTIFICATE_STATUS . hasAnyValue ()) // (5) . pageSize ( 100 ) // (6) . includeOnResults ( Asset . DESCRIPTION ) // (7) . includeOnResults ( Asset . CERTIFICATE_STATUS ) . includeOnResults ( Asset . OWNER_USERS ) . toRequest (); // (8) IndexSearchResponse response = findViews . search (); // (9) The qualifiedName of every view starts with the qualifiedName of its parent (s", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "s . search (); // (9) The qualifiedName of every view starts with the qualifiedName of its parent (schema), so we can limit the results to a particular schema by using the qualifiedName . To start building up a query with multiple conditions, you can use the select() helper on any client's assets member. You can chain where() methods to define all the conditions the search results must match. You", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "mber. You can chain where() methods to define all the conditions the search results must match. You can use the static constants within any given type to select a particular attribute (like QUALIFIED_NAME in this example), and then limit results to only those assets whose qualifiedName starts with the qualifiedName of the schema (by using the startsWith() predicate). In this example, that means on", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "he qualifiedName of the schema (by using the startsWith() predicate). In this example, that means only assets that are within this particular schema will be returned as results. Since there could be tables, views, materialized views and columns in this schema \u2014 but you only want views and materialized views \u2014 you can use the Asset.TYPE_NAME.in() method to restrict results to only views and materia", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ed views \u2014 you can use the Asset.TYPE_NAME.in() method to restrict results to only views and materialized views. Since you only want to update views that do not already have a certificate, you can further limit the results using the whereNot() method. This will exclude any assets where a certificate already hasAnyValue() . Here you can play around with different page sizes, to further limit API ca", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "already hasAnyValue() . Here you can play around with different page sizes, to further limit API calls by retrieving more results per page. Add as many attributes as needed. Each attribute you add here will ensure that detail is included in each search result. So in this example, every view will include its description, certificate, and individual owners. (Limit these attributes to the minimum yo", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "clude its description, certificate, and individual owners. (Limit these attributes to the minimum you need about each view to do your intended work.) You can translate the object you've built up into various outputs, for example immediately calculating a count of how many results match or streaming them directly for processing. In this case, the toRequest() method will give us the resulting set of", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "them directly for processing. In this case, the toRequest() method will give us the resulting set of criteria back as a complete index search request. You can then execute the search based on the request. Example: get all views in a schema 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 from pyatlan.client.atlan import AtlanClient from pyatlan.client.asset import Batch from pyatlan.errors", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "m pyatlan.client.atlan import AtlanClient from pyatlan.client.asset import Batch from pyatlan.errors import AtlanError from pyatlan.model.enums import CertificateStatus from pyatlan.model.fluent_search import CompoundQuery , FluentSearch from pyatlan.model.assets import Asset , View , MaterialisedView client = AtlanClient () schema_qualified_name = \"default/snowflake/1662194632/MYDB/MY_SCH\" # (1)", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ew client = AtlanClient () schema_qualified_name = \"default/snowflake/1662194632/MYDB/MY_SCH\" # (1) find_views = ( FluentSearch () # (2) . where ( Asset . QUALIFIED_NAME . startswith ( schema_qualified_name )) # (3) . where ( CompoundQuery . asset_types ([ View , MaterialisedView ])) # (4) . where ( CompoundQuery . active_assets ()) . where_not ( Asset . CERTIFICATE_STATUS . has_any_value ()) # (5", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "CompoundQuery . active_assets ()) . where_not ( Asset . CERTIFICATE_STATUS . has_any_value ()) # (5) . page_size ( 100 ) # (6) . include_on_results ( Asset . DESCRIPTION ) # (7) . include_on_results ( Asset . CERTIFICATE_STATUS ) . include_on_results ( Asset . OWNER_USERS ) ) . to_request () # (8) response = client . asset . search ( find_views ) # (9) The qualified_name of every view starts with", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "response = client . asset . search ( find_views ) # (9) The qualified_name of every view starts with the qualified_name of its parent (schema), so we can limit the results to a particular schema by using the qualified_name . To start building up a query with multiple conditions, you can use a FluentSearch() object. You can chain where() methods to define all the conditions the search results must", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "Search() object. You can chain where() methods to define all the conditions the search results must match. You can use the class variables within any given type to select a particular attribute (like QUALIFIED_NAME in this example), and then limit results to only those assets whose qualified_name starts with the qualified_name of the schema (by using the startswith() predicate). In this example, t", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "arts with the qualified_name of the schema (by using the startswith() predicate). In this example, that means only assets that are within this particular schema will be returned as results. Since there could be tables, views, materialized views and columns in this schema \u2014 but you only want views and materialized views \u2014 you can use the CompoundQuery.asset_types() helper method to restrict results", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "d materialized views \u2014 you can use the CompoundQuery.asset_types() helper method to restrict results to only views and materialized views. Since you only want to update views that do not already have a certificate, you can further limit the results using the where_not() method. This will exclude any assets where a certificate already has_any_value() . Here you can play around with different page s", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "assets where a certificate already has_any_value() . Here you can play around with different page sizes, to further limit API calls by retrieving more results per page. Add as many attributes as needed. Each attribute you add here will ensure that detail is included in each search result. So in this example, every view will include its description, certificate, and individual owners. (Limit these", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "s example, every view will include its description, certificate, and individual owners. (Limit these attributes to the minimum you need about each view to do your intended work.) You can translate the object you've built up into various outputs, for example immediately calculating a count of how many results match or executing the query to start processing results directly. In this case, the to_re", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "y results match or executing the query to start processing results directly. In this case, the to_request() method will give us the resulting set of criteria back as a complete index search request. You can then execute the search based on the request. Example: get all views in a schema 1 2 3 4 5 6 7 8 9 10 11 12 val schemaQN = \"default/snowflake/1662194632/MYDB/MY_SCH\" // (1) val findViews = clie", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "7 8 9 10 11 12 val schemaQN = \"default/snowflake/1662194632/MYDB/MY_SCH\" // (1) val findViews = client . assets . select () // (2) . where ( Asset . QUALIFIED_NAME . startsWith ( schemaQN )) // (3) . where ( Asset . TYPE_NAME . `in` ( listOf ( View . TYPE_NAME , MaterializedView . TYPE_NAME ))) // (4) . whereNot ( Asset . CERTIFICATE_STATUS . hasAnyValue ()) // (5) . pageSize ( 100 ) // (6) . incl", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "4) . whereNot ( Asset . CERTIFICATE_STATUS . hasAnyValue ()) // (5) . pageSize ( 100 ) // (6) . includeOnResults ( Asset . DESCRIPTION ) // (7) . includeOnResults ( Asset . CERTIFICATE_STATUS ) . includeOnResults ( Asset . OWNER_USERS ) . toRequest () // (8) val response = findViews . search () // (9) The qualifiedName of every view starts with the qualifiedName of its parent (schema), so we can l", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "9) The qualifiedName of every view starts with the qualifiedName of its parent (schema), so we can limit the results to a particular schema by using the qualifiedName . To start building up a query with multiple conditions, you can use the select() helper on any client's assets member. You can chain where() methods to define all the conditions the search results must match. You can use the static", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "where() methods to define all the conditions the search results must match. You can use the static constants within any given type to select a particular attribute (like QUALIFIED_NAME in this example), and then limit results to only those assets whose qualifiedName starts with the qualifiedName of the schema (by using the startsWith() predicate). In this example, that means only assets that are", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "the schema (by using the startsWith() predicate). In this example, that means only assets that are within this particular schema will be returned as results. Since there could be tables, views, materialized views and columns in this schema \u2014 but you only want views and materialized views \u2014 you can use the Asset.TYPE_NAME.in() helper method to restrict results to only views and materialized views.", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "use the Asset.TYPE_NAME.in() helper method to restrict results to only views and materialized views. Since you only want to update views that do not already have a certificate, you can further limit the results using the whereNot() method. This will exclude any assets where a certificate already hasAnyValue() . Here you can play around with different page sizes, to further limit API calls by retri", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "AnyValue() . Here you can play around with different page sizes, to further limit API calls by retrieving more results per page. Add as many attributes as needed. Each attribute you add here will ensure that detail is included in each search result. So in this example, every view will include its description, certificate, and individual owners. (Limit these attributes to the minimum you need about", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "scription, certificate, and individual owners. (Limit these attributes to the minimum you need about each view to do your intended work.) You can translate the object you've built up into various outputs, for example immediately calculating a count of how many results match or streaming them directly for processing. In this case, the toRequest() method will give us the resulting set of criteria ba", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "y for processing. In this case, the toRequest() method will give us the resulting set of criteria back as a complete index search request. You can then execute the search based on the request. POST /api/meta/search/indexsearch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 { \"dsl\"", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "8 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 { \"dsl\" : { // (1) \"query\" : { \"bool\" : { // (2) \"filter\" : [ // (3) { \"prefix\" : { // (4) \"qualifiedName\" : { \"value\" : \"default/snowflake/1662194632/MYDB/MY_SCH\" } } }, { \"terms\" : { // (5) \"__typeName.keyword\" : [ \"View\" , \"MaterialisedView\" ] } }, { \"term\" : { // (6) \"__state\" : { \"value\" : \"ACTIVE\" } }", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ord\" : [ \"View\" , \"MaterialisedView\" ] } }, { \"term\" : { // (6) \"__state\" : { \"value\" : \"ACTIVE\" } } } ], \"must_not\" : [ // (7) { \"exists\" : { \"field\" : \"certificateStatus\" } } ] } }, \"sort\" : [ // (8) { \"__guid\" : { \"order\" : \"asc\" } } ], \"from\" : 0 , // (9) \"size\" : 100 , \"track_total_hits\" : true }, \"attributes\" : [ // (10) \"description\" , \"certificateStatus\" , \"ownerUsers\" ], \"suppressLogs\" :", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "}, \"attributes\" : [ // (10) \"description\" , \"certificateStatus\" , \"ownerUsers\" ], \"suppressLogs\" : true , \"showSearchScore\" : false , \"excludeMeanings\" : false , \"excludeClassifications\" : false } Run a search to find the views and materialized views. To start building up a query with multiple conditions, you can use a bool query in Elasticsearch. You can use the filter criteria to define all the", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "itions, you can use a bool query in Elasticsearch. You can use the filter criteria to define all the conditions the search results must match in a binary way (either matches or doesn't). This avoids the need to calculate a score for each result. The qualifiedName of every view starts with the qualifiedName of its parent (schema), so we can limit the results to a particular schema by using the qual", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "iedName of its parent (schema), so we can limit the results to a particular schema by using the qualifiedName . Since there could be tables, views, materialized views and columns in this schema \u2014 but you only want views and materialized views \u2014 you can use an exact match on multiple types to restrict results to only views and materialized views. Searches by default will return all assets that are", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "t results to only views and materialized views. Searches by default will return all assets that are found \u2014 whether active or archived (soft-deleted). In most cases, you probably only want the active ones. Since you only want to update views that do not already have a certificate, you can further limit the results using the must_not clause. This will exclude any assets that already have a certific", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "mit the results using the must_not clause. This will exclude any assets that already have a certificate present. When paging through results, you should specify a sort to give a stable set of results across pages. The most reliable sort will be by GUID of the asset, as this is guaranteed to be unique for every asset. Here you can play around with different page sizes, to further limit API calls by", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "e for every asset. Here you can play around with different page sizes, to further limit API calls by retrieving more results per page. Add as many attributes as needed. Each attribute you add here will ensure that detail is included in each search result. So in this example, every view will include its description, certificate, and individual owners. (Limit these attributes to the minimum you need", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "its description, certificate, and individual owners. (Limit these attributes to the minimum you need about each column to do your intended work.) 2. Build-up your changes \u00b6 3.0.0 1.10.5 Next, you iterate through those results and make the changes you want to each one. Use the multiple operations pattern to make multiple changes to each asset. Java Python Kotlin Raw REST API Example: iterate throug", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "tern to make multiple changes to each asset. Java Python Kotlin Raw REST API Example: iterate through results and make changes 13 14 15 16 17 18 19 20 21 AssetBatch batch = new AssetBatch ( client , 20 ); // (1) try { for ( Asset result : response ) { // (2) Asset revised = result . trimToRequired () // (3) . certificateStatus ( CertificateStatus . VERIFIED ) // (4) . ownerUser ( \"jsmith\" ) . buil", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": ") // (3) . certificateStatus ( CertificateStatus . VERIFIED ) // (4) . ownerUser ( \"jsmith\" ) . build (); batch . add ( revised ); // (5) } Create a batch of assets to build-up the changes across multiple assets before applying those changes in Atlan itself. The first parameter defines the Atlan tenant on which the batch will be processed The second specifies the maximum number of assets to build-", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "ant on which the batch will be processed The second specifies the maximum number of assets to build-up before sending them across to Atlan Additional parameters By default (using only the options above) no classifications or custom metadata will be added or changed on the assets in each batch. To also include classifications and custom metadata, you need to use these additional parameters: A third", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "so include classifications and custom metadata, you need to use these additional parameters: A third parameter of true to replace all classifications on the assets in the batch, which would include removing classifications if none are provided for the assets in the batch itself (or false if you still want to ignore classifications) A fourth parameter to control how custom metadata should be handle", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "l want to ignore classifications) A fourth parameter to control how custom metadata should be handled for the assets: IGNORE any custom metadata changes in the batch, OVERWRITE to replace all custom metadata with what's provided in the batch (including removing custom metadata that already exists on an asset), or MERGE to only add or update custom metadata based on what's in the batch (leaving oth", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "an asset), or MERGE to only add or update custom metadata based on what's in the batch (leaving other existing custom metadata unchanged) a fifth parameter to control whether failures should be captured across batches ( true ) or ignored ( false ) a sixth parameter to control whether the batch should only attempt to update assets that already exist ( true ) or also create assets if they do not ye", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "ld only attempt to update assets that already exist ( true ) or also create assets if they do not yet exist ( false ) a seventh parameter to control whether details about each created and updated asset across batches should be tracked ( true ) or ignored ( false ) \u2014 counts will always be kept an eighth parameter to control whether the matching for determining whether an asset already exists should", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "hth parameter to control whether the matching for determining whether an asset already exists should be done in a case-insensitive way ( true ) or case-sensitively ( false ) a ninth parameter to control what kind of assets to create, if not running in updateOnly mode: partial assets (only available in lineage), or full assets a tenth parameter to control whether the matching for determining whethe", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "in lineage), or full assets a tenth parameter to control whether the matching for determining whether an asset already exists should be done strictly according to the data type specified ( false ), or if tables, views and materialized views should be treated interchangeably ( true ) This is the pattern for iterating through all results (across pages) covered in the Searching for assets portion of", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ern for iterating through all results (across pages) covered in the Searching for assets portion of the SDK documentation. Every asset implements the trimToRequired() method, which gives you a builder containing only the bare minimum information needed to update that asset. Limit your asset to only what you intend to update When you send an update to Atlan, it will only attempt to change the infor", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "what you intend to update When you send an update to Atlan, it will only attempt to change the information you send in your request \u2014 leaving any information not in your request as-is (unchanged) on the asset in Atlan. By using trimToRequired() you can remove all information you do not want to update, and then chain on only the details you do want to update. In this running example, you are updati", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "e, and then chain on only the details you do want to update. In this running example, you are updating the certificate to verified and setting a new owner \u2014 so you simply chain those updates onto the trimmed builder. You can then add your (in-memory) modified asset to the batch. Auto-saves as it goes As long as the number of assets built-up is below the maximum batch size specified when creating t", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "s As long as the number of assets built-up is below the maximum batch size specified when creating the batch, this will simply continue to build up the batch. As soon as you hit the size limit for the batch, though, this same method will call the save() operation to batch-update all of those assets in a single API call. Remember to flush Since your loop could finish before you reach another full b", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "in a single API call. Remember to flush Since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up, when the size of the queue did not yet reach the full batch size. Example: iterate through results and make changes 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 batch = Batch ( # (1", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "results and make changes 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 batch = Batch ( # (1) client = client , max_size = 20 , replace_atlan_tags = False , custom_metadata_handling = CustomMetadataHandling . IGNORE , capture_failures = False , update_only = False , track = False , case_insensitive = False , table_view_agnostic = False , creation_handling = AssetCreationHandling . FULL , )", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "nsitive = False , table_view_agnostic = False , creation_handling = AssetCreationHandling . FULL , ) try : for asset in response : # (2) revised = asset . trim_to_required () # (3) revised . certificate_status = CertificateStatus . VERIFIED # (4) revised . owner_users = { \"jsmith\" } batch . add ( asset ) # (5) Create a batch of assets to accumulate changes across multiple assets before applying th", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "set ) # (5) Create a batch of assets to accumulate changes across multiple assets before applying those changes in Atlan itself. The Batch() takes the following parameters: client : an instance of AssetClient . max_size : the maximum size of each batch to be processed (per API call). Additional optional parameters By default (using only the options above) no classifications or custom metadata will", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "onal parameters By default (using only the options above) no classifications or custom metadata will be added or changed on the assets in each batch. To also include classifications and custom metadata, you need to use these additional parameters: replace_atlan_tags ( default: False ): If True replace all classifications (tags) on the assets in the batch, which would include removing classificatio", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "ce all classifications (tags) on the assets in the batch, which would include removing classifications (tags) if none are provided for the assets in the batch itself (or False if you still want to ignore classifications) custom_metadata_handling ( default: CustomMetadataHandling.IGNORE ): control how custom metadata should be handled for the assets: IGNORE any custom metadata changes in the batch,", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "w custom metadata should be handled for the assets: IGNORE any custom metadata changes in the batch, OVERWRITE to replace all custom metadata with what's provided in the batch (including removing custom metadata that already exists on an asset), or MERGE to only add or update custom metadata based on what's in the batch (leaving other existing custom metadata unchanged) capture_failures ( default:", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "n what's in the batch (leaving other existing custom metadata unchanged) capture_failures ( default: False ): control whether failures should be captured across batches ( True ) or ignored ( False ) update_only ( default: False ): control whether the batch should only attempt to update assets that already exist ( True ) or also create assets if they do not yet exist ( False ) track ( default: Fals", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "lready exist ( True ) or also create assets if they do not yet exist ( False ) track ( default: False ): control whether details about each created and updated asset across batches should be tracked ( True ) or ignored ( False ) \u2014 counts will always be kept case_insensitive ( default: False ): control whether the matching for determining whether an asset already exists should be done in a case-ins", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "ol whether the matching for determining whether an asset already exists should be done in a case-insensitive way ( True ) or case-sensitively ( False ) creation_handling ( default: AssetCreationHandling.FULL ): control what kind of assets to create, if not running in update_only mode; PARTIAL assets (only available in lineage), or FULL assets table_view_agnostic ( default: False ): control whether", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "(only available in lineage), or FULL assets table_view_agnostic ( default: False ): control whether the matching for determining whether an asset already exists should be done strictly according to the data type specified ( False ), or if tables, views and materialized views should be treated interchangeably ( True ) This is the pattern for iterating through all results (across pages) covered in", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "changeably ( True ) This is the pattern for iterating through all results (across pages) covered in the Searching for assets portion of the SDK documentation. Every asset implements the trim_to_required() method, which gives you an object containing only the bare minimum information needed to update that asset. Limit your asset to only what you intend to update When you send an update to Atlan, it", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "that asset. Limit your asset to only what you intend to update When you send an update to Atlan, it will only attempt to change the information you send in your request \u2014 leaving any information not in your request as-is (unchanged) on the asset in Atlan. By using trimToRequired() you can remove all information you do not want to update, and then chain on only the details you do want to update. I", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "l information you do not want to update, and then chain on only the details you do want to update. In this running example, you are updating the certificate to verified and setting a new owner \u2014 so you simply add those updates onto the trimmed object. You can then add your (in-memory) modified asset to the batch. Auto-saves as it goes As long as the number of assets built-up is below the maximum b", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "to the batch. Auto-saves as it goes As long as the number of assets built-up is below the maximum batch size specified when creating the batch, this will simply continue to build up the batch. As soon as you hit the size limit for the batch, though, this same method will call the save() operation to batch-update all of those assets in a single API call. Remember to flush Since your loop could fin", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "o batch-update all of those assets in a single API call. Remember to flush Since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up, when the size of the queue did not yet reach the full batch size. Example: iterate through results and make changes 13 14 15 16 17 18 19 20 21 val batch =", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "atch size. Example: iterate through results and make changes 13 14 15 16 17 18 19 20 21 val batch = AssetBatch ( client , 20 ) // (1) try { for ( result in response ) { // (2) val revised = result . trimToRequired () // (3) . certificateStatus ( CertificateStatus . VERIFIED ) // (4) . ownerUser ( \"jsmith\" ) . build () batch . add ( revised ) // (5) } Create a batch of assets to build-up the change", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "smith\" ) . build () batch . add ( revised ) // (5) } Create a batch of assets to build-up the changes across multiple assets before applying those changes in Atlan itself. The first parameter defines the Atlan tenant on which the batch will be processed The second specifies the maximum number of assets to build-up before sending them across to Atlan Additional parameters By default (using only the", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "ets to build-up before sending them across to Atlan Additional parameters By default (using only the options above) no classifications or custom metadata will be added or changed on the assets in each batch. To also include classifications and custom metadata, you need to use these additional parameters: A third parameter of true to replace all classifications on the assets in the batch, which wou", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "ters: A third parameter of true to replace all classifications on the assets in the batch, which would include removing classifications if none are provided for the assets in the batch itself (or false if you still want to ignore classifications) A fourth parameter to control how custom metadata should be handled for the assets: IGNORE any custom metadata changes in the batch, OVERWRITE to replace", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "uld be handled for the assets: IGNORE any custom metadata changes in the batch, OVERWRITE to replace all custom metadata with what's provided in the batch (including removing custom metadata that already exists on an asset), or MERGE to only add or update custom metadata based on what's in the batch (leaving other existing custom metadata unchanged) a fifth parameter to control whether failures sh", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21900}}, {"content": "(leaving other existing custom metadata unchanged) a fifth parameter to control whether failures should be captured across batches ( true ) or ignored ( false ) a sixth parameter to control whether the batch should only attempt to update assets that already exist ( true ) or also create assets if they do not yet exist ( false ) a seventh parameter to control whether details about each created and", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22200}}, {"content": "hey do not yet exist ( false ) a seventh parameter to control whether details about each created and updated asset across batches should be tracked ( true ) or ignored ( false ) \u2014 counts will always be kept an eighth parameter to control whether the matching for determining whether an asset already exists should be done in a case-insensitive way ( true ) or case-sensitively ( false ) a ninth param", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22500}}, {"content": "exists should be done in a case-insensitive way ( true ) or case-sensitively ( false ) a ninth parameter to control what kind of assets to create, if not running in updateOnly mode: partial assets (only available in lineage), or full assets a tenth parameter to control whether the matching for determining whether an asset already exists should be done strictly according to the data type specified", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22800}}, {"content": "mining whether an asset already exists should be done strictly according to the data type specified ( false ), or if tables, views and materialized views should be treated interchangeably ( true ) This is the pattern for iterating through all results (across pages) covered in the Searching for assets portion of the SDK documentation. Every asset implements the trimToRequired() method, which gives", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23100}}, {"content": "s portion of the SDK documentation. Every asset implements the trimToRequired() method, which gives you a builder containing only the bare minimum information needed to update that asset. Limit your asset to only what you intend to update When you send an update to Atlan, it will only attempt to change the information you send in your request \u2014 leaving any information not in your request as-is (un", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23400}}, {"content": "nge the information you send in your request \u2014 leaving any information not in your request as-is (unchanged) on the asset in Atlan. By using trimToRequired() you can remove all information you do not want to update, and then chain on only the details you do want to update. In this running example, you are updating the certificate to verified and setting a new owner \u2014 so you simply chain those upda", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23700}}, {"content": "ou are updating the certificate to verified and setting a new owner \u2014 so you simply chain those updates onto the trimmed builder. You can then add your (in-memory) modified asset to the batch. Auto-saves as it goes As long as the number of assets built-up is below the maximum batch size specified when creating the batch, this will simply continue to build up the batch. As soon as you hit the size", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24000}}, {"content": "en creating the batch, this will simply continue to build up the batch. As soon as you hit the size limit for the batch, though, this same method will call the save() operation to batch-update all of those assets in a single API call. Remember to flush Since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24300}}, {"content": "nother full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up, when the size of the queue did not yet reach the full batch size. Up to your own code There are no API calls to make to change the results in-memory. How you implement this will be entirely up to how you are writing your code. 3. Save them in batches \u00b6 3.0.0 1.1.0 Finally, sen", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24600}}, {"content": "be entirely up to how you are writing your code. 3. Save them in batches \u00b6 3.0.0 1.1.0 Finally, send the changes you have queued up in batches. Use the multiple assets pattern to update multiple assets at the same time. Java Python Kotlin Raw REST API Example: save the changes in batches 22 23 24 25 batch . flush (); // (1) } catch ( AtlanException e ) { // (2) } The AssetBatch 's add() method us", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24900}}, {"content": "5 batch . flush (); // (1) } catch ( AtlanException e ) { // (2) } The AssetBatch 's add() method used in the previous step will automatically save as its internal queue of assets reaches a full batch size. Remember to flush However, since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25200}}, {"content": "you must always remember to flush() the batch. This will send any remaining assets that were queued up. Both the .add() and .flush() operations of the AssetBatch could send a request over to Atlan. Either can therefore also run into trouble and raise an error through an AtlanException . It is up to you to handle such potential errors as you see fit. Example: save the changes in batches 30 31 32 ba", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25500}}, {"content": "you to handle such potential errors as you see fit. Example: save the changes in batches 30 31 32 batch . flush () # (1) except AtlanError as err : ... # (2) The Batch 's add() method used in the previous step will automatically save as its internal queue of assets reaches a full batch size. Remember to flush However, since your loop could finish before you reach another full batch, you must alway", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 25800}}, {"content": "r to flush However, since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up. Both the .add() and .flush() operations of the Batch could send a request over to Atlan. Either can therefore also run into trouble and raise an error through an AtlanError . It is up to you to handle such pote", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26100}}, {"content": "also run into trouble and raise an error through an AtlanError . It is up to you to handle such potential errors as you see fit. Example: save the changes in batches 22 23 24 25 batch . flush () // (1) } catch ( e : AtlanException ) { // (2) } The AssetBatch 's add() method used in the previous step will automatically save as its internal queue of assets reaches a full batch size. Remember to flus", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26400}}, {"content": "will automatically save as its internal queue of assets reaches a full batch size. Remember to flush However, since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up. Both the .add() and .flush() operations of the AssetBatch could send a request over to Atlan. Either can therefore also", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 26700}}, {"content": ".flush() operations of the AssetBatch could send a request over to Atlan. Either can therefore also run into trouble and raise an error through an AtlanException . It is up to you to handle such potential errors as you see fit. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \"entities\" : [ // (1) { \"typeName\" : \"View\" , // (2) \"attributes\" : { \"name\" : \"VIEW1", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27000}}, {"content": "19 20 21 22 { \"entities\" : [ // (1) { \"typeName\" : \"View\" , // (2) \"attributes\" : { \"name\" : \"VIEW1\" , // (3) \"qualifiedName\" : \"default/snowflake/1662194632/MYDB/MY_SCH/VIEW1\" , \"certificateStatus\" : \"VERIFIED\" , // (4) \"ownerUsers\" : [ \"jsmith\" ] } }, { // (5) \"typeName\" : \"MaterialisedView\" , \"attributes\" : { \"name\" : \"MVIEW2\" , \"qualifiedName\" : \"default/snowflake/1662194632/MYDB/MY_SCH/MVIEW", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27300}}, {"content": "ttributes\" : { \"name\" : \"MVIEW2\" , \"qualifiedName\" : \"default/snowflake/1662194632/MYDB/MY_SCH/MVIEW2\" , \"certificateStatus\" : \"VERIFIED\" , \"ownerUsers\" : [ \"jsmith\" ] } } ] } All details must still be included in an outer entities array. You need to specify the type for each asset you are updating. You need to specify other required attributes for each asset, such as its name and qualifiedName. A", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27600}}, {"content": "You need to specify other required attributes for each asset, such as its name and qualifiedName. Add on any other attributes or relationships you want to set on the asset, such as in the running example a verified certificate and new individual owner. Add another object to the payload to represent another asset that should be updated by the same API call. Once again specify all the required info", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 27900}}, {"content": "another asset that should be updated by the same API call. Once again specify all the required information for that kind of asset, and any of the details for attributes or relationships you want to set. Pipelining \u00b6 3.0.0 1.10.5 Alternatively, when using an SDK, you can pipeline these operations together. The pipeline will run just as efficiently as the step-by-step approach above: Pushing down t", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28200}}, {"content": "gether. The pipeline will run just as efficiently as the step-by-step approach above: Pushing down the criteria to run as a search on Atlan Lazily-fetching each page of results Batching up and bulk-saving changes Java Python Kotlin Raw REST API Example: pipelining 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 String schemaQN = \"default/snowflake/1662194632/MYDB/MY_SCH\" ; // (1)", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28500}}, {"content": "16 17 18 19 20 21 22 23 24 25 String schemaQN = \"default/snowflake/1662194632/MYDB/MY_SCH\" ; // (1) try ( ParallelBatch batch = new ParallelBatch ( client , 20 )) { // (2) client . assets . select () // (3) . where ( Asset . QUALIFIED_NAME . startsWith ( schemaQN )) // (4) . where ( Asset . TYPE_NAME . in ( List . of ( View . TYPE_NAME , MaterializedView . TYPE_NAME ))) // (5) . whereNot ( Asset", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 28800}}, {"content": "ME . in ( List . of ( View . TYPE_NAME , MaterializedView . TYPE_NAME ))) // (5) . whereNot ( Asset . CERTIFICATE_STATUS . hasAnyValue ()) // (6) . pageSize ( 100 ) // (7) . includeOnResults ( Asset . DESCRIPTION ) // (8) . includeOnResults ( Asset . CERTIFICATE_STATUS ) . includeOnResults ( Asset . OWNER_USERS ) . stream ( true ) // (9) . forEach ( result -> { // (10) try { batch . add ( result .", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29100}}, {"content": "OWNER_USERS ) . stream ( true ) // (9) . forEach ( result -> { // (10) try { batch . add ( result . trimToRequired () // (11) . certificateStatus ( CertificateStatus . VERIFIED ) // (12) . ownerUser ( \"jsmith\" ) . build ()); // (13) } catch ( AtlanException e ) { // (14) log . error ( \"Unable to update: {}\" , result . getQualifiedName ()); } }); batch . flush (); // (15) log . info ( \"Created: {}", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29400}}, {"content": "date: {}\" , result . getQualifiedName ()); } }); batch . flush (); // (15) log . info ( \"Created: {}\" , batch . getCreated (). size ()); log . info ( \"Updated: {}\" , batch . getUpdated (). size ()); } The qualifiedName of every view starts with the qualifiedName of its parent (schema), so we can limit the results to a particular schema by using the qualifiedName . Create a batch of assets to build", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 29700}}, {"content": "it the results to a particular schema by using the qualifiedName . Create a batch of assets to build-up the changes across multiple assets before applying those changes in Atlan itself. When parallel-processing (see further notes on the stream(true) ) you need to use a parallel-capable ParallelBatch : The first parameter defines the Atlan tenant on which the batch will be processed The second spec", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 30000}}, {"content": ": The first parameter defines the Atlan tenant on which the batch will be processed The second specifies the maximum number of assets to build-up before sending them across to Atlan Additional parameters By default (using only the options above) no classifications or custom metadata will be added or changed on the assets in each batch. To also include classifications and custom metadata, you need", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 30300}}, {"content": "r changed on the assets in each batch. To also include classifications and custom metadata, you need to use these additional parameters: A third parameter of true to replace all classifications on the assets in the batch, which would include removing classifications if none are provided for the assets in the batch itself (or false if you still want to ignore classifications) A fourth parameter to", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 30600}}, {"content": "ts in the batch itself (or false if you still want to ignore classifications) A fourth parameter to control how custom metadata should be handled for the assets: IGNORE any custom metadata changes in the batch, OVERWRITE to replace all custom metadata with what's provided in the batch (including removing custom metadata that already exists on an asset), or MERGE to only add or update custom metada", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 30900}}, {"content": "oving custom metadata that already exists on an asset), or MERGE to only add or update custom metadata based on what's in the batch (leaving other existing custom metadata unchanged) a fifth parameter to control whether failures should be captured across batches ( true ) or ignored ( false ) a sixth parameter to control whether the batch should only attempt to update assets that already exist ( tr", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 31200}}, {"content": "parameter to control whether the batch should only attempt to update assets that already exist ( true ) or also create assets if they do not yet exist ( false ) a seventh parameter to control whether details about each created and updated asset across batches should be tracked ( true ) or ignored ( false ) \u2014 counts will always be kept an eighth parameter to control whether the matching for determ", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 31500}}, {"content": "false ) \u2014 counts will always be kept an eighth parameter to control whether the matching for determining whether an asset already exists should be done in a case-insensitive way ( true ) or case-sensitively ( false ) a ninth parameter to control what kind of assets to create, if not running in updateOnly mode: partial assets (only available in lineage), or full assets a tenth parameter to control", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 31800}}, {"content": "teOnly mode: partial assets (only available in lineage), or full assets a tenth parameter to control whether the matching for determining whether an asset already exists should be done strictly according to the data type specified ( false ), or if tables, views and materialized views should be treated interchangeably ( true ) You can then start defining a pipeline directly against the client's ass", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 32100}}, {"content": "ed interchangeably ( true ) You can then start defining a pipeline directly against the client's assets by using the select() method. Including archived (soft-deleted) assets Searches by default will return all assets that are found \u2014 whether active or archived (soft-deleted). In most cases, you probably only want the active ones, so this is the default behavior of select() . Sending in true to th", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 32400}}, {"content": "bably only want the active ones, so this is the default behavior of select() . Sending in true to this select() method will start the pipeline to include any archived (soft-deleted) assets in the results, if you do want them. You can chain as many where() methods as you want to define all the conditions the search results must match. You can use the static constants within any given type to select", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 32700}}, {"content": "ions the search results must match. You can use the static constants within any given type to select a particular attribute (like QUALIFIED_NAME in this example), and then limit results to only those assets whose qualifiedName starts with the qualifiedName of the schema (by using the startsWith() predicate). In this example, that means only assets that are within this particular schema will be ret", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 33000}}, {"content": "edicate). In this example, that means only assets that are within this particular schema will be returned as results. Since there could be tables, views, materialized views and columns in this schema \u2014 but you only want views and materialized views \u2014 you can use the Asset.TYPE_NAME.in() method to restrict results to only views and materialized views. Since you only want to update views that do not", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 33300}}, {"content": "strict results to only views and materialized views. Since you only want to update views that do not already have a certificate, you can further limit the results using the whereNot() method. This will exclude any assets where a certificate already hasAnyValue() . (Optional) You can play around with different page sizes, to further limit API calls by retrieving more results per page. Add as many a", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 33600}}, {"content": "different page sizes, to further limit API calls by retrieving more results per page. Add as many attributes as needed. Each attribute you add here will ensure that detail is included in each search result. So in this example, every view will include its description, certificate, and individual owners. (Limit these attributes to the minimum you need about each view to do your intended work.) Once", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 33900}}, {"content": "ers. (Limit these attributes to the minimum you need about each view to do your intended work.) Once you have defined the criteria for your pipeline, call the stream() method to push-down the pipeline to Atlan. This will: Create a search that combines all the criteria you have specified. Run that search against Atlan to produce the first page of results. Page through the results by lazily fetching", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 34200}}, {"content": "arch against Atlan to produce the first page of results. Page through the results by lazily fetching each subsequent page as you iterate through them. (So if you use a limit() on the stream, for example, you can break out before retrieving all pages.) Can also run in parallel threads You can also parallel-stream the results by passing true to the stream() method. This will spawn multiple threads t", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 34500}}, {"content": "rallel-stream the results by passing true to the stream() method. This will spawn multiple threads that each independently process a page of results and combine the results in parallel. While this can be significantly faster for processing many results, keep in mind if you are collecting the results into any structure that structure must be thread-safe. (For example, you'll need to use things like", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 34800}}, {"content": "into any structure that structure must be thread-safe. (For example, you'll need to use things like ConcurrentHashMap rather than just HashMap , and to use ParallelBatch rather than AssetBatch if making changes.) For each result, you can then carry out your changes and submit them into the batch. Every asset implements the trimToRequired() method, which gives you a builder containing only the bar", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 35100}}, {"content": "very asset implements the trimToRequired() method, which gives you a builder containing only the bare minimum information needed to update that asset. Limit your asset to only what you intend to update When you send an update to Atlan, it will only attempt to change the information you send in your request \u2014 leaving any information not in your request as-is (unchanged) on the asset in Atlan. By us", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 35400}}, {"content": "request \u2014 leaving any information not in your request as-is (unchanged) on the asset in Atlan. By using trimToRequired() you can remove all information you do not want to update, and then chain on only the details you do want to update. In this running example, you are updating the certificate to verified and setting a new owner \u2014 so you simply chain those updates onto the trimmed builder. You can", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 35700}}, {"content": "rified and setting a new owner \u2014 so you simply chain those updates onto the trimmed builder. You can then add your (in-memory) modified asset to the batch. Auto-saves as it goes As long as the number of assets built-up is below the maximum batch size specified when creating the batch, this will simply continue to build up the batch. As soon as you hit the size limit for the batch, though, this sam", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 36000}}, {"content": "ly continue to build up the batch. As soon as you hit the size limit for the batch, though, this same method will call the save() operation to batch-update all of those assets in a single API call. Remember to flush Since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up, when the size", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 36300}}, {"content": "member to flush() the batch. This will send any remaining assets that were queued up, when the size of the queue did not yet reach the full batch size. Both the .add() and .flush() operations of the AssetBatch could send a request over to Atlan. Either can therefore also run into trouble and raise an error through an AtlanException . It is up to you to handle such potential errors as you see fit.", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 36600}}, {"content": "n error through an AtlanException . It is up to you to handle such potential errors as you see fit. The AssetBatch 's add() method used in the previous step will automatically save as its internal queue of assets reaches a full batch size. Remember to flush However, since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any r", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 36900}}, {"content": "re you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up. Example: pipelining 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 import logging from pyatlan.client.atlan import AtlanClient from pyatlan.client.asset import Batch from pyat", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 37200}}, {"content": "ogging from pyatlan.client.atlan import AtlanClient from pyatlan.client.asset import Batch from pyatlan.model.enums import CertificateStatus from pyatlan.model.fluent_search import CompoundQuery , FluentSearch from pyatlan.model.assets import Asset , View , MaterialisedView LOGGER = logging . getLogger ( __name__ ) client = AtlanClient () schema_qualified_name = \"default/snowflake/1662194632/MYDB/", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 37500}}, {"content": "ger ( __name__ ) client = AtlanClient () schema_qualified_name = \"default/snowflake/1662194632/MYDB/MY_SCH\" # (1) batch = Batch ( # (2) client = client , max_size = 20 , replace_atlan_tags = False , custom_metadata_handling = CustomMetadataHandling . IGNORE , capture_failures = False , update_only = False , track = False , case_insensitive = False , table_view_agnostic = False , creation_handling", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 37800}}, {"content": "False , track = False , case_insensitive = False , table_view_agnostic = False , creation_handling = AssetCreationHandling . FULL , ) find_views = ( FluentSearch () # (3) . where ( Asset . QUALIFIED_NAME . startswith ( schema_qualified_name )) # (4) . where ( CompoundQuery . asset_types ([ View , MaterialisedView ])) # (5) . where ( CompoundQuery . active_assets ()) . where_not ( Asset . CERTIFIC", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 38100}}, {"content": "aterialisedView ])) # (5) . where ( CompoundQuery . active_assets ()) . where_not ( Asset . CERTIFICATE_STATUS . has_any_value ()) # (6) . page_size ( 100 ) # (7) . include_on_results ( Asset . DESCRIPTION ) # (8) . include_on_results ( Asset . CERTIFICATE_STATUS ) . include_on_results ( Asset . OWNER_USERS ) ) . to_request () # (9) response = client . asset . search ( find_views ) # (10) try : fo", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 38400}}, {"content": "ER_USERS ) ) . to_request () # (9) response = client . asset . search ( find_views ) # (10) try : for asset in response : # (11) revised = asset . trim_to_required () # (12) revised . certificate_status = CertificateStatus . VERIFIED # (13) revised . owner_users = { \"jsmith\" } batch . add ( asset ) # (14) batch . flush () # (15) LOGGER . info ( \"Created %s \" , len ( batch . created )) LOGGER . inf", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 38700}}, {"content": "# (14) batch . flush () # (15) LOGGER . info ( \"Created %s \" , len ( batch . created )) LOGGER . info ( \"Updated %s \" , len ( batch . updated )) except AtlanError as err : LOGGER . error ( \"Unable to update: %s \" , asset . qualified_name ) The qualifiedName of every view starts with the qualifiedName of its parent (schema), so we can limit the results to a particular schema by using the qualifiedN", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 39000}}, {"content": "e of its parent (schema), so we can limit the results to a particular schema by using the qualifiedName . Create a batch of assets to accumulate changes across multiple assets before applying those changes in Atlan itself. The Batch() takes the following parameters: client : an instance of AssetClient . max_size : the maximum size of each batch to be processed (per API call). Additional optional p", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 39300}}, {"content": "nt . max_size : the maximum size of each batch to be processed (per API call). Additional optional parameters By default (using only the options above) no classifications or custom metadata will be added or changed on the assets in each batch. To also include classifications and custom metadata, you need to use these additional parameters: replace_atlan_tags ( default: False ): If True replace all", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 39600}}, {"content": "need to use these additional parameters: replace_atlan_tags ( default: False ): If True replace all classifications (tags) on the assets in the batch, which would include removing classifications (tags) if none are provided for the assets in the batch itself (or False if you still want to ignore classifications) custom_metadata_handling ( default: CustomMetadataHandling.IGNORE ): control how cust", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 39900}}, {"content": "assifications) custom_metadata_handling ( default: CustomMetadataHandling.IGNORE ): control how custom metadata should be handled for the assets: IGNORE any custom metadata changes in the batch, OVERWRITE to replace all custom metadata with what's provided in the batch (including removing custom metadata that already exists on an asset), or MERGE to only add or update custom metadata based on what", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 40200}}, {"content": "adata that already exists on an asset), or MERGE to only add or update custom metadata based on what's in the batch (leaving other existing custom metadata unchanged) capture_failures ( default: False ): control whether failures should be captured across batches ( True ) or ignored ( False ) update_only ( default: False ): control whether the batch should only attempt to update assets that already", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 40500}}, {"content": "only ( default: False ): control whether the batch should only attempt to update assets that already exist ( True ) or also create assets if they do not yet exist ( False ) track ( default: False ): control whether details about each created and updated asset across batches should be tracked ( True ) or ignored ( False ) \u2014 counts will always be kept case_insensitive ( default: False ): control whe", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 40800}}, {"content": ") or ignored ( False ) \u2014 counts will always be kept case_insensitive ( default: False ): control whether the matching for determining whether an asset already exists should be done in a case-insensitive way ( True ) or case-sensitively ( False ) creation_handling ( default: AssetCreationHandling.FULL ): control what kind of assets to create, if not running in update_only mode; PARTIAL assets (only", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 41100}}, {"content": "L ): control what kind of assets to create, if not running in update_only mode; PARTIAL assets (only available in lineage), or FULL assets table_view_agnostic ( default: False ): control whether the matching for determining whether an asset already exists should be done strictly according to the data type specified ( False ), or if tables, views and materialized views should be treated interchange", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 41400}}, {"content": "a type specified ( False ), or if tables, views and materialized views should be treated interchangeably ( True ) You can then start defining a pipeline directly using a FluentSearch() object. You can chain as many where() methods as you want to define all the conditions the search results must match. You can use the class variables within any given type to select a particular attribute (like QUAL", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 41700}}, {"content": "h. You can use the class variables within any given type to select a particular attribute (like QUALIFIED_NAME in this example), and then limit results to only those assets whose qualified_name starts with the qualified_name of the schema (by using the startswith() predicate). In this example, that means only assets that are within this particular schema will be returned as results. Since there co", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 42000}}, {"content": "means only assets that are within this particular schema will be returned as results. Since there could be tables, views, materialized views and columns in this schema \u2014 but you only want views and materialized views \u2014 you can use the CompoundQuery.asset_types() helper method to restrict results to only views and materialized views. Since you only want to update views that do not already have a ce", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 42300}}, {"content": "only views and materialized views. Since you only want to update views that do not already have a certificate, you can further limit the results using the where_not() method. This will exclude any assets where a certificate already has_any_value() . (Optional) You can play around with different page sizes, to further limit API calls by retrieving more results per page. Add as many attributes as ne", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 42600}}, {"content": "sizes, to further limit API calls by retrieving more results per page. Add as many attributes as needed. Each attribute you add here will ensure that detail is included in each search result. So in this example, every view will include its description, certificate, and individual owners. (Limit these attributes to the minimum you need about each view to do your intended work.) You can translate t", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 42900}}, {"content": "se attributes to the minimum you need about each view to do your intended work.) You can translate the object you've built up into various outputs, for example immediately calculating a count of how many results match or streaming them directly for processing. In this case, the toRequest() method will give us the resulting set of criteria back as a complete index search request. You can then execu", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 43200}}, {"content": "ll give us the resulting set of criteria back as a complete index search request. You can then execute the search based on the request.tore all of those details back into a response object. For each result, you can then carry out your changes and submit them into the batch. Every asset implements the trim_to_required() method, which gives you a builder containing only the bare minimum information", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 43500}}, {"content": "e trim_to_required() method, which gives you a builder containing only the bare minimum information needed to update that asset. Limit your asset to only what you intend to update When you send an update to Atlan, it will only attempt to change the information you send in your request \u2014 leaving any information not in your request as-is (unchanged) on the asset in Atlan. By using trim_to_required()", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 43800}}, {"content": "information not in your request as-is (unchanged) on the asset in Atlan. By using trim_to_required() you can remove all information you do not want to update, and then chain on only the details you do want to update. In this running example, you are updating the certificate to verified and setting a new owner \u2014 so you simply set those updates on the trimmed object. You can then add your (in-memory", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 44100}}, {"content": "new owner \u2014 so you simply set those updates on the trimmed object. You can then add your (in-memory) modified asset to the batch. The Batch 's add() method used in the previous step will automatically save as its internal queue of assets reaches a full batch size. Remember to flush However, since your loop could finish before you reach another full batch, you must always remember to flush() the b", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 44400}}, {"content": "our loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up. Example: pipelining 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 val schemaQN = \"default/snowflake/1662194632/MYDB/MY_SCH\" // (1) ParallelBatch ( client , 20 ). use { batch -> // (2) client . assets . select () // (3", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 44700}}, {"content": "Y_SCH\" // (1) ParallelBatch ( client , 20 ). use { batch -> // (2) client . assets . select () // (3) . where ( Asset . QUALIFIED_NAME . startsWith ( schemaQN )) // (4) . where ( Asset . TYPE_NAME . `in` ( listOf ( View . TYPE_NAME , MaterializedView . TYPE_NAME ))) // (5) . whereNot ( Asset . CERTIFICATE_STATUS . hasAnyValue ()) // (6) . pageSize ( 100 ) // (7) . includeOnResults ( Asset . DESCRI", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 45000}}, {"content": "FICATE_STATUS . hasAnyValue ()) // (6) . pageSize ( 100 ) // (7) . includeOnResults ( Asset . DESCRIPTION ) // (8) . includeOnResults ( Asset . CERTIFICATE_STATUS ) . includeOnResults ( Asset . OWNER_USERS ) . stream ( true ) // (9) . forEach ( result -> { // (10) try { batch . add ( result . trimToRequired () // (11) . certificateStatus ( CertificateStatus . VERIFIED ) // (12) . ownerUser ( \"jsmi", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 45300}}, {"content": "Required () // (11) . certificateStatus ( CertificateStatus . VERIFIED ) // (12) . ownerUser ( \"jsmith\" ) . build ()) // (13) } catch ( AtlanException e ) { // (14) log . error ( \"Unable to update: {}\" , result . qualifiedName ); } }); batch . flush () // (15) log . info ( \"Created: {}\" , batch . created . size ) log . info ( \"Updated: {}\" , batch . updated . size ) } The qualifiedName of every vi", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 45600}}, {"content": "eated . size ) log . info ( \"Updated: {}\" , batch . updated . size ) } The qualifiedName of every view starts with the qualifiedName of its parent (schema), so we can limit the results to a particular schema by using the qualifiedName . Create a batch of assets to build-up the changes across multiple assets before applying those changes in Atlan itself. When parallel-processing (see further notes", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 45900}}, {"content": "e assets before applying those changes in Atlan itself. When parallel-processing (see further notes on the stream(true) ) you need to use a parallel-capable ParallelBatch : The first parameter defines the Atlan tenant on which the batch will be processed The second specifies the maximum number of assets to build-up before sending them across to Atlan Additional parameters By default (using only th", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 46200}}, {"content": "sets to build-up before sending them across to Atlan Additional parameters By default (using only the options above) no classifications or custom metadata will be added or changed on the assets in each batch. To also include classifications and custom metadata, you need to use these additional parameters: A third parameter of true to replace all classifications on the assets in the batch, which wo", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 46500}}, {"content": "eters: A third parameter of true to replace all classifications on the assets in the batch, which would include removing classifications if none are provided for the assets in the batch itself (or false if you still want to ignore classifications) A fourth parameter to control how custom metadata should be handled for the assets: IGNORE any custom metadata changes in the batch, OVERWRITE to replac", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 46800}}, {"content": "ould be handled for the assets: IGNORE any custom metadata changes in the batch, OVERWRITE to replace all custom metadata with what's provided in the batch (including removing custom metadata that already exists on an asset), or MERGE to only add or update custom metadata based on what's in the batch (leaving other existing custom metadata unchanged) a fifth parameter to control whether failures s", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 47100}}, {"content": "h (leaving other existing custom metadata unchanged) a fifth parameter to control whether failures should be captured across batches ( true ) or ignored ( false ) a sixth parameter to control whether the batch should only attempt to update assets that already exist ( true ) or also create assets if they do not yet exist ( false ) a seventh parameter to control whether details about each created an", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 47400}}, {"content": "they do not yet exist ( false ) a seventh parameter to control whether details about each created and updated asset across batches should be tracked ( true ) or ignored ( false ) \u2014 counts will always be kept an eighth parameter to control whether the matching for determining whether an asset already exists should be done in a case-insensitive way ( true ) or case-sensitively ( false ) a ninth para", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 47700}}, {"content": "exists should be done in a case-insensitive way ( true ) or case-sensitively ( false ) a ninth parameter to control what kind of assets to create, if not running in updateOnly mode: partial assets (only available in lineage), or full assets a tenth parameter to control whether the matching for determining whether an asset already exists should be done strictly according to the data type specified", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 48000}}, {"content": "rmining whether an asset already exists should be done strictly according to the data type specified ( false ), or if tables, views and materialized views should be treated interchangeably ( true ) You can then start defining a pipeline directly against the client's assets by using the select() method. Including archived (soft-deleted) assets Searches by default will return all assets that are fou", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 48300}}, {"content": "od. Including archived (soft-deleted) assets Searches by default will return all assets that are found \u2014 whether active or archived (soft-deleted). In most cases, you probably only want the active ones, so this is the default behavior of select() . Sending in true to this select() method will start the pipeline to include any archived (soft-deleted) assets in the results, if you do want them. You", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 48600}}, {"content": "the pipeline to include any archived (soft-deleted) assets in the results, if you do want them. You can chain as many where() methods as you want to define all the conditions the search results must match. You can use the static constants within any given type to select a particular attribute (like QUALIFIED_NAME in this example), and then limit results to only those assets whose qualifiedName sta", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 48900}}, {"content": "QUALIFIED_NAME in this example), and then limit results to only those assets whose qualifiedName starts with the qualifiedName of the schema (by using the startsWith() predicate). In this example, that means only assets that are within this particular schema will be returned as results. Since there could be tables, views, materialized views and columns in this schema \u2014 but you only want views and", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 49200}}, {"content": "could be tables, views, materialized views and columns in this schema \u2014 but you only want views and materialized views \u2014 you can use the Asset.TYPE_NAME.in helper method to restrict results to only views and materialized views. Since you only want to update views that do not already have a certificate, you can further limit the results using the whereNot() method. This will exclude any assets wher", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 49500}}, {"content": "te, you can further limit the results using the whereNot() method. This will exclude any assets where a certificate already hasAnyValue() . (Optional) You can play around with different page sizes, to further limit API calls by retrieving more results per page. Add as many attributes as needed. Each attribute you add here will ensure that detail is included in each search result. So in this exampl", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 49800}}, {"content": "attribute you add here will ensure that detail is included in each search result. So in this example, every view will include its description, certificate, and individual owners. (Limit these attributes to the minimum you need about each view to do your intended work.) Once you have defined the criteria for your pipeline, call the stream() method to push-down the pipeline to Atlan. This will: Cre", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 50100}}, {"content": "teria for your pipeline, call the stream() method to push-down the pipeline to Atlan. This will: Create a search that combines all the criteria you have specified. Run that search against Atlan to produce the first page of results. Page through the results by lazily fetching each subsequent page as you iterate through them. (So if you use a limit() on the stream, for example, you can break out bef", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 50400}}, {"content": "you iterate through them. (So if you use a limit() on the stream, for example, you can break out before retrieving all pages.) Can also run in parallel threads You can also parallel-stream the results by passing true to the stream() method. This will spawn multiple threads that each independently process a page of results and combine the results in parallel. While this can be significantly faster", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 50700}}, {"content": "ocess a page of results and combine the results in parallel. While this can be significantly faster for processing many results, keep in mind if you are collecting the results into any structure that structure must be thread-safe. (For example, you'll need to use things like ConcurrentHashMap rather than just HashMap , and to use ParallelBatch rather than AssetBatch if making changes.) For each re", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 51000}}, {"content": "than just HashMap , and to use ParallelBatch rather than AssetBatch if making changes.) For each result, you can then carry out your changes and submit them into the batch. Every asset implements the trimToRequired() method, which gives you a builder containing only the bare minimum information needed to update that asset. Limit your asset to only what you intend to update When you send an update", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 51300}}, {"content": "ded to update that asset. Limit your asset to only what you intend to update When you send an update to Atlan, it will only attempt to change the information you send in your request \u2014 leaving any information not in your request as-is (unchanged) on the asset in Atlan. By using trimToRequired() you can remove all information you do not want to update, and then chain on only the details you do want", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 51600}}, {"content": "can remove all information you do not want to update, and then chain on only the details you do want to update. In this running example, you are updating the certificate to verified and setting a new owner \u2014 so you simply chain those updates onto the trimmed builder. You can then add your (in-memory) modified asset to the batch. Auto-saves as it goes As long as the number of assets built-up is bel", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 51900}}, {"content": ") modified asset to the batch. Auto-saves as it goes As long as the number of assets built-up is below the maximum batch size specified when creating the batch, this will simply continue to build up the batch. As soon as you hit the size limit for the batch, though, this same method will call the save() operation to batch-update all of those assets in a single API call. Remember to flush Since you", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 52200}}, {"content": "ve() operation to batch-update all of those assets in a single API call. Remember to flush Since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up, when the size of the queue did not yet reach the full batch size. Both the .add() and .flush() operations of the AssetBatch could send a re", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 52500}}, {"content": "reach the full batch size. Both the .add() and .flush() operations of the AssetBatch could send a request over to Atlan. Either can therefore also run into trouble and raise an error through an AtlanException . It is up to you to handle such potential errors as you see fit. The AssetBatch 's add() method used in the previous step will automatically save as its internal queue of assets reaches a fu", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 52800}}, {"content": "ethod used in the previous step will automatically save as its internal queue of assets reaches a full batch size. Remember to flush However, since your loop could finish before you reach another full batch, you must always remember to flush() the batch. This will send any remaining assets that were queued up. Requires numerous API calls To implement the same logic purely through raw API calls wil", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 53100}}, {"content": "queued up. Requires numerous API calls To implement the same logic purely through raw API calls will require making many calls: To run the search. To page through the results. To batch up a set of assets to update. To submit each batch of assets to update. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 53400}}, {"content": "dback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/bulk/end-to-end/", "title": "End-to-end bulk update - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 53700}}, {"content": "Manage DocumentDB assets \u00b6 Operations on DocumentDB assets (connections, databases, collections). In general, these should be: Created in top-down order (connection, then database, then collection) Deleted in bottom-up order (collections, then databases, then connections) 1 erDiagram Connection ||--o{ DocumentDBDatabase : contains DocumentDBDatabase ||--o{ DocumentDBCollection : contains Asset str", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "o{ DocumentDBDatabase : contains DocumentDBDatabase ||--o{ DocumentDBCollection : contains Asset structure \u00b6 Connection \u00b6 7.0.0 5.0.6 A DocumentDB connection requires a name and qualifiedName . For creation, specific settings are also required to distinguish it as a DocumentDB connection rather than another type of connection. In addition, at least one of adminRoles , adminGroups , or adminUsers m", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "another type of connection. In addition, at least one of adminRoles , adminGroups , or adminUsers must be provided. Java Python Kotlin Raw REST API Create a DocumentDB connection 1 2 3 4 5 6 7 8 9 10 String adminRoleGuid = client . getRoleCache (). getIdForName ( \"$admin\" ); // (1) Connection connection = Connection . creator ( // (2) \"documentdb-connection\" , // (3) AtlanConnectorType . DOCUMENT", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ction = Connection . creator ( // (2) \"documentdb-connection\" , // (3) AtlanConnectorType . DOCUMENTDB , // (4) List . of ( adminRoleGuid ), // (5) List . of ( \"group2\" ), // (6) List . of ( \"jsmith\" )) // (7) . build (); AssetMutationResponse response = connection . save ( client ); // (8) String connectionQualifiedName = response . getCreatedAssets (). get ( 0 ). getQualifiedName (); // (9) Retr", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "onnectionQualifiedName = response . getCreatedAssets (). get ( 0 ). getQualifiedName (); // (9) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. Provide a human-readable name for your connection, such as production or development . Set the type of connection to DocumentDB. List the wor", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "nnection, such as production or development . Set the type of connection to DocumentDB. List the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "nGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a DocumentDB connection 1 2 3 4 5 6 7 8 9 10 11 12 13 1", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "want to do some null checking first.) Create a DocumentDB connection 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import Connection , DocumentDBDatabase , DocumentDBCollection from pyatlan.model.enums import AtlanConnectorType client = AtlanClient () admin_role_guid = str ( client . role_cache . get_id_for_name ( \"$admin\" )) # (1) co", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "AtlanClient () admin_role_guid = str ( client . role_cache . get_id_for_name ( \"$admin\" )) # (1) connection = Connection . creator ( # (2) client = client , # (3) name = \"documentdb-connection\" , # (4) connector_type = AtlanConnectorType . DOCUMENTDB , # (5) admin_roles = [ admin_role_guid ], # (6) admin_groups = [ \"group2\" ], # (7) admin_users = [ \"jsmith\" ], # (8) ) response = client . asset .", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "admin_groups = [ \"group2\" ], # (7) admin_users = [ \"jsmith\" ], # (8) ) response = client . asset . save ( connection ) # (9) connection_qualified_name = response . assets_created ( asset_type = Connection )[ 0 ] . qualified_name # (10) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection.", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "the roles that can administer the connection. Build up the minimum request to create a connection. You must provide a client instance. Provide a human-readable name for your connection, such as production or development . Set the type of connection to DocumentDB. List the workspace roles that should be able to administer the connection (or None if none). All users with that workspace role (curren", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "d be able to administer the connection (or None if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of admin_roles , admin_groups , or admin_users must be provided. List the group names that can administer this connection (or None if none). All users withi", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "rovided. List the group names that can administer this connection (or None if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of admin_roles , admin_groups , or admin_users must be provided. List the user names that can administer this connection (or None if none). Note that th", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "be provided. List the user names that can administer this connection (or None if none). Note that the values here are the username(s) of the user(s). At least one of admin_roles , admin_groups , or admin_users must be provided. Actually call Atlan to create the connection. Retrieve the qualified_name for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "e for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a DocumentDB connection 1 2 3 4 5 6 7 8 9 10 val adminRoleGuid = client . roleCache . getIdForName ( \"\\ $ admin \" ) // (1) val connection = Connection . creator ( // (2) \"documentdb-connection\" , // (3) AtlanConnectorType . DOCUMENTDB , // (4) listOf ( adminRoleGuid ), // (5) listOf ( \"group2\" ), /", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "(3) AtlanConnectorType . DOCUMENTDB , // (4) listOf ( adminRoleGuid ), // (5) listOf ( \"group2\" ), // (6) listOf ( \"jsmith\" )) // (7) . build () val response = connection . save ( client ) // (8) val connectionQualifiedName = response . createdAssets [ 0 ] . qualifiedName // (9) Retrieve the GUID for the admin role, to use later for defining the roles that can administer the connection. Build up t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "r the admin role, to use later for defining the roles that can administer the connection. Build up the minimum request to create a connection. Provide a human-readable name for your connection, such as production or development . Set the type of connection to DocumentDB. List the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "t should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the group names that can administer this connection (or null if none). All users w", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "be provided. List the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List the user names that can administer this connection (or null if none). Note that t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "be provided. List the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Actually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenan", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \"entities\" : [ { \"typeName\" : \"Connection\" , // (1) \"attributes\" : { \"name\" : \"documentdb-co", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "21 22 { \"entities\" : [ { \"typeName\" : \"Connection\" , // (1) \"attributes\" : { \"name\" : \"documentdb-connection\" , // (2) \"connectorName\" : \"documentdb\" , // (3) \"qualifiedName\" : \"default/documentdb/123456789\" , // (4) \"category\" : \"database\" , // (5) \"adminRoles\" : [ // (6) \"e7ae0295-c60a-469a-bd2c-fb903943aa02\" ], \"adminGroups\" : [ // (7) \"group2\" ], \"adminUsers\" : [ // (8) \"jsmith\" ] } } ] } The", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "b903943aa02\" ], \"adminGroups\" : [ // (7) \"group2\" ], \"adminUsers\" : [ // (8) \"jsmith\" ] } } ] } The typeName must be exactly Connection . Human-readable name for your connection, such as production or development . The connectorName must be exactly documentdb . The qualifiedName should follow the pattern: default/documentdb/<epoch> , where <epoch> is the time in milliseconds at which the connectio", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ttern: default/documentdb/<epoch> , where <epoch> is the time in milliseconds at which the connection is being created. The category must be database . List any workspace roles that can administer this connection. All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "connection. Note that the values here need to be the GUID(s) of the workspace role(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any groups that can administer this connection. All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminG", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "tion. Note that the values here are the name(s) of the group(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. List any users that can administer this connection. Note that the values here are the username(s) of the user(s). At least one of adminRoles , adminGroups , or adminUsers must be provided. Access policies Atlan creates the policies that grant access to a conne", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "adminUsers must be provided. Access policies Atlan creates the policies that grant access to a connection, including the ability to retrieve the connection and to create assets within it, asynchronously. It can take several seconds (even up to approximately 30 seconds) before these are in place after creating the connection. You may therefore need to wait before you'll be able to create the assets", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "r creating the connection. You may therefore need to wait before you'll be able to create the assets below within the connection. To confirm access, retrieve the connection after it has been created. The SDKs' retry loops will automatically retry until the connection can be successfully retrieved. At that point, your API token has permission to create the other assets. Note: if you are reusing an", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "t that point, your API token has permission to create the other assets. Note: if you are reusing an existing connection rather than creating one via your API token, you must give your API token a persona that has access to that connection. Otherwise all attempts to create, read, update, or delete assets within that connection will fail due to a lack of permissions. DocumentDBDatabase \u00b6 6.0.3 5.0.6", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "sets within that connection will fail due to a lack of permissions. DocumentDBDatabase \u00b6 6.0.3 5.0.6 A DocumentDB database requires a name and a qualifiedName . For creation, you also need to specify the connectionQualifiedName of the connection for the database. Java Python Kotlin Raw REST API Create a DocumentDB database 11 12 13 14 15 16 17 DocumentDBDatabase database = DocumentDBDatabase . cre", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "te a DocumentDB database 11 12 13 14 15 16 17 DocumentDBDatabase database = DocumentDBDatabase . creator ( // (1) \"my-docdb\" , // (2) connectionQualifiedName ) // (3) . documentDBDatabaseCollectionCount ( 10 ) // (4) . build (); AssetMutationResponse response = database . save ( client ); // (5) database = response . getResult ( database ); // (6) Build up the minimum request to create a DocumentD", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "abase = response . getResult ( database ); // (6) Build up the minimum request to create a DocumentDB database. Provide a human-readable name for your database. Provide the qualifiedName of the connection for this database. Optionally provide additional metadata about the database. Actually call Atlan to create the database. Because this operation will persist the asset in Atlan, you must provide", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "an to create the database. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created database for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a DocumentDB database 17 18 19 20 21 22 23 database = DocumentDBDatabase . creator ( # (1) name = \"my-docdb\" , #", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "database 17 18 19 20 21 22 23 database = DocumentDBDatabase . creator ( # (1) name = \"my-docdb\" , # (2) connection_qualified_name = connection_qualified_name , # (3) ) database . document_dbdatabase_collection_count = 10 # (4) response = client . asset . save ( database ) # (5) database = response . assets_created ( asset_type = DocumentDBDatabase )[ 0 ] # (6) Build up the minimum request to creat", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "assets_created ( asset_type = DocumentDBDatabase )[ 0 ] # (6) Build up the minimum request to create a DocumentDB database. Provide a human-readable name for your database. Provide the qualifiedName of the connection for this database. Optionally provide additional metadata about the database. Actually call Atlan to create the database. Retrieve the created database for use in subsequent creation", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ally call Atlan to create the database. Retrieve the created database for use in subsequent creation calls. (You'd probably want to do some null checking first.) Create a DocumentDB database 11 12 13 14 15 16 17 val database = DocumentDBDatabase . creator ( // (1) \"my-docdb\" , // (2) connectionQualifiedName ) // (3) . documentDBDatabaseCollectionCount ( 10 ) // (4) . build () val response = databa", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "fiedName ) // (3) . documentDBDatabaseCollectionCount ( 10 ) // (4) . build () val response = database . save ( client ) // (5) val createdDatabase = response . getResult ( database ) // (6) Build up the minimum request to create a DocumentDB database. Provide a human-readable name for your database. Provide the qualifiedName of the connection for this database. Optionally provide additional metad", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": ". Provide the qualifiedName of the connection for this database. Optionally provide additional metadata about the database. Actually call Atlan to create the database. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Retrieve the created database for use in subsequent creation calls. (You'd probably want to do some n", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "etrieve the created database for use in subsequent creation calls. (You'd probably want to do some null checking first.) POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"entities\" : [ { \"typeName\" : \"DocumentDBDatabase\" , // (1) \"attributes\" : { \"name\" : \"my-docdb\" , // (2) \"qualifiedName\" : \"default/documentdb/123456789/my-docdb\" , // (3) \"connectionQualifiedName\" : \"default/documen", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "ame\" : \"default/documentdb/123456789/my-docdb\" , // (3) \"connectionQualifiedName\" : \"default/documentdb/123456789\" , // (4) \"connectorName\" : \"documentdb\" , // (5) \"documentDBDatabaseCollectionCount\" : 10 // (6) } } ] } The typeName must be exactly DocumentDBDatabase . Human-readable name for your database. The qualifiedName should follow the pattern: default/documentdb/<epoch>/<database_name> , w", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "atabase. The qualifiedName should follow the pattern: default/documentdb/<epoch>/<database_name> , where default/documentdb/<epoch> is the qualifiedName of the connection for this asset and <database_name> is the name of the database. The connectionQualifiedName must be the exact qualifiedName of the connection for this asset. The connectorName must be the same value as the connector type used whe", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "e connection for this asset. The connectorName must be the same value as the connector type used when creating the connection. Optionally include additional metadata about the database. DocumentDBCollection \u00b6 6.0.3 5.0.6 A DocumentDB collection requires a name and a qualifiedName . For creation, you also need to specify the databaseQualifiedName of the database that contains the collection. Java P", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "also need to specify the databaseQualifiedName of the database that contains the collection. Java Python Kotlin Raw REST API Create a DocumentDB collection 18 19 20 21 22 23 24 25 DocumentDBCollection collection = DocumentDBCollection . creator ( // (1) \"users\" , // (2) database . getQualifiedName ()) // (3) . documentDBCollectionSchemaDefinition ( \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "()) // (3) . documentDBCollectionSchemaDefinition ( \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"}}}\" ) // (4) . documentDBCollectionIsCapped ( false ) // (5) . documentDBCollectionNumIndexes ( 3 ) // (6) . build (); AssetMutationResponse response = collection . save ( client ); // (7) Build up the minimum request to create a DocumentDB collect", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "e = collection . save ( client ); // (7) Build up the minimum request to create a DocumentDB collection. Provide a human-readable name for your collection. Provide the qualifiedName of the database that contains this collection. Optionally provide the schema definition for the collection. Optionally specify whether the collection is capped or not. Optionally provide additional metadata about the c", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "specify whether the collection is capped or not. Optionally provide additional metadata about the collection. Actually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create a DocumentDB collection 24 25 26 27 28 29 30 31 collection = DocumentDBCollection . creator ( # (1) name", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "umentDB collection 24 25 26 27 28 29 30 31 collection = DocumentDBCollection . creator ( # (1) name = \"users\" , # (2) database_qualified_name = database . qualified_name , # (3) ) collection . document_dbcollection_schema_definition = \"{ \\\" type \\\" : \\\" object \\\" , \\\" properties \\\" :{ \\\" name \\\" :{ \\\" type \\\" : \\\" string \\\" }, \\\" email \\\" :{ \\\" type \\\" : \\\" string \\\" }}}\" # (4) collection . docume", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "\\\" type \\\" : \\\" string \\\" }, \\\" email \\\" :{ \\\" type \\\" : \\\" string \\\" }}}\" # (4) collection . document_dbcollection_is_capped = False # (5) collection . document_dbcollection_num_indexes = 3 # (6) response = client . asset . save ( collection ) # (7) Build up the minimum request to create a DocumentDB collection. Provide a human-readable name for your collection. Provide the qualifiedName of the d", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "DB collection. Provide a human-readable name for your collection. Provide the qualifiedName of the database that contains this collection. Optionally provide the schema definition for the collection. Optionally specify whether the collection is capped or not. Optionally provide additional metadata about the collection. Actually call Atlan to create the collection. Create a DocumentDB collection 18", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "bout the collection. Actually call Atlan to create the collection. Create a DocumentDB collection 18 19 20 21 22 23 24 25 val collection = DocumentDBCollection . creator ( # ( 1 ) \"users\" , # ( 2 ) database . qualifiedName ) # ( 3 ) . documentDBCollectionSchemaDefinition ( \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"}}}\" ) # ( 4 ) . documentDB", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "operties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"}}}\" ) # ( 4 ) . documentDBCollectionIsCapped ( false ) # ( 5 ) . documentDBCollectionNumIndexes ( 3 ) # ( 6 ) . build () val response = collection . save ( client ) # ( 7 ) Build up the minimum request to create a DocumentDB collection. Provide a human-readable name for your collection. Provide the qualifiedName of the datab", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "ollection. Provide a human-readable name for your collection. Provide the qualifiedName of the database that contains this collection. Optionally provide the schema definition for the collection. Optionally specify whether the collection is capped or not. Optionally provide additional metadata about the collection. Actually call Atlan to create the collection. Because this operation will persist t", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "the collection. Actually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 { \"entities\" : [ { \"typeName\" : \"DocumentDBCollection\" , // (1) \"attributes\" : { \"name\" : \"users\" , // (2) \"qualifiedName\" : \"default/docume", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "tDBCollection\" , // (1) \"attributes\" : { \"name\" : \"users\" , // (2) \"qualifiedName\" : \"default/documentdb/123456789/my-docdb/users\" , // (3) \"databaseQualifiedName\" : \"default/documentdb/123456789/my-docdb\" , // (4) \"connectorName\" : \"documentdb\" , // (5) \"documentDBCollectionSchemaDefinition\" : \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"}}}\"", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"}}}\" , // (6) \"documentDBCollectionIsCapped\" : false , // (7) \"documentDBCollectionNumIndexes\" : 3 // (8) } } ] } The typeName must be exactly DocumentDBCollection . Human-readable name for your collection. The qualifiedName should follow the pattern: default/documentdb/<epoch>/<database_name>/<collectio", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": ". The qualifiedName should follow the pattern: default/documentdb/<epoch>/<database_name>/<collection_name> , where default/documentdb/<epoch>/<database_name> is the qualifiedName of the database that contains this collection. The databaseQualifiedName must be the exact qualifiedName of the database that contains this collection. The connectorName must be the same value as the connector type used", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "that contains this collection. The connectorName must be the same value as the connector type used when creating the connection. Optionally provide the schema definition for the collection. Optionally specify whether the collection is capped or not. Optionally provide additional metadata about the collection. Additional collection properties \u00b6 The DocumentDBCollection asset type has a number of s", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "collection. Additional collection properties \u00b6 The DocumentDBCollection asset type has a number of specific properties that you can use to provide more detailed information: documentDBCollectionAverageObjectSize : Average size of an object in the collection documentDBCollectionExpireAfterSeconds : Seconds after which documents in a time series collection or clustered collection expire documentDBCo", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "econds after which documents in a time series collection or clustered collection expire documentDBCollectionMaxSize : Maximum size allowed in a capped collection documentDBCollectionMaximumDocumentCount : Maximum number of documents allowed in a capped collection documentDBCollectionNumOrphanDocs : Number of orphaned documents in the collection documentDBCollectionSubtype : Subtype of a DocumentDB", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "Number of orphaned documents in the collection documentDBCollectionSubtype : Subtype of a DocumentDB collection (e.g., Capped, Time Series, etc.) documentDBCollectionTimeField : Name of the field containing the date in each time series document documentDBCollectionTimeGranularity : Closest match to the time span between consecutive incoming measurements documentDBCollectionTotalIndexSize : Total s", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "the time span between consecutive incoming measurements documentDBCollectionTotalIndexSize : Total size of all indexes Available relationships \u00b6 Each DocumentDB asset is an Asset , and can therefore be related to the following other assets. erDiagram Asset }o--o{ AtlasGlossaryTerm : meanings Asset ||--o{ Link : links Asset ||--o| Readme : readme Asset }o--o{ Process : inputToProcesses Asset }o--o{", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "|--o{ Link : links Asset ||--o| Readme : readme Asset }o--o{ Process : inputToProcesses Asset }o--o{ Process : outputFromProcesses AtlasGlossaryTerm \u00b6 A glossary term provides meaning to an asset. The link terms to assets snippet provides more detail on setting this relationship. Link \u00b6 A link provides additional context to an asset, by providing a URL to additional information. Readme \u00b6 A README", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "des additional context to an asset, by providing a URL to additional information. Readme \u00b6 A README provides rich documentation for an asset. The add asset READMEs snippet provides more detail on setting this relationship. Process \u00b6 A process provides lineage information for an asset. An asset can be both an input and an output for one or more processes. The lineage snippets provide more detail on", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "e both an input and an output for one or more processes. The lineage snippets provide more detail on creating and working with lineage. Note that unlike other assets, the packaged connection delete utility in the UI will not remove DocumentDB assets associated with the connection. So the DocumentDB assets themselves must be deleted, separately from the connection. \u21a9 Was this page helpful? Thanks f", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "assets themselves must be deleted, separately from the connection. \u21a9 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/documentdb/", "title": "Manage DocumentDB assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "On this page What are the known limitations of the Domo connector? \u200b Following are the known limitations of the Domo connector: Column-level lineage is currently not supported. Admin privileges are required for the user creating the client credentials to crawl both datasets and dataset columns. Otherwise, only datasets will be crawled. All three DomoStats dataset IDs are required to run the Domo c", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/domo/troubleshooting/troubleshooting-domo-connectivity", "title": "Troubleshooting Domo connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "rwise, only datasets will be crawled. All three DomoStats dataset IDs are required to run the Domo crawler. An access token is required to generate upstream lineage for datasets , currently only supported with Google BigQuery and Snowflake as data sources.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/domo/troubleshooting/troubleshooting-domo-connectivity", "title": "Troubleshooting Domo connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "DynamoDBLocalSecondaryIndex \u00b6 Atlan DynamoDB Local Secondary Index Complete reference This is a complete reference for the DynamoDBLocalSecondaryIndex object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ith: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DynamoDBLocalSecondaryIndex inherits its attributes and relationships from these other types: classDiagram direction RL class DynamoDBLocalSecondaryIndex link DynamoDBLocalSecondaryIndex \"../dynamodblocalsecondaryindex\" class DynamoDBSecondaryIndex { <<abstract>> }", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "DBLocalSecondaryIndex \"../dynamodblocalsecondaryindex\" class DynamoDBSecondaryIndex { <<abstract>> } link DynamoDBSecondaryIndex \"../dynamodbsecondaryindex\" DynamoDBSecondaryIndex <|-- DynamoDBLocalSecondaryIndex : extends class Table link Table \"../table\" Table <|-- DynamoDBSecondaryIndex : extends class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- Table : extends class Catalog { <<abstract>>", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- Table : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class DynamoDB { <<abstract>> } link DynamoDB \"../dynam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "enceable\" Referenceable <|-- Asset : extends class DynamoDB { <<abstract>> } link DynamoDB \"../dynamodb\" DynamoDB <|-- DynamoDBSecondaryIndex : extends class NoSQL { <<abstract>> } link NoSQL \"../nosql\" NoSQL <|-- DynamoDB : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DynamoDBLocalSecondaryIndex 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "yIndex 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMet", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "tom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Tr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "t use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. noSQLSchemaDefinition \u00b6 Represents attributes for describing the key schema for the table and indexes. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "table and indexes. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ypes.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Title \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ast updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check ty", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "led in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnv", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "e account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "tRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "rom the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ssetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (tru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "n of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "et in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "at materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProx", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "setDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "et in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "urrently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeveri", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "ifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "te Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "rlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "l associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLas", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "l associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descript", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "ateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "er who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Uniq", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "s accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "me of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "age has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "r deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "rder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "me of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a dif", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "mputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "s sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "dRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "o read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "tal number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last upda", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails star", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "mation of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "l be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) calculationViewName \u00b6 Simple name of the calculation view in which thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "sed for certain asset types.) calculationViewName \u00b6 Simple name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. calculationViewQualifiedName \u00b6 Unique name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. databaseName \u00b6 Simple name of the database in which this SQL asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "exist within a calculation view. databaseName \u00b6 Simple name of the database in which this SQL asset exists, or empty if it does not exist within a database. databaseQualifiedName \u00b6 Unique name of the database in which this SQL asset exists, or empty if it does not exist within a database. isProfiled \u00b6 Whether this asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch) at whic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "\u00b6 Whether this asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch) at which this asset was last profiled, in milliseconds. queryCount \u00b6 Number of times this asset has been queried. queryCountUpdatedAt \u00b6 Time (epoch) at which the query count was last updated, in milliseconds. queryUserCount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map of unique", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": ". queryUserCount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map of unique users who have queried this asset to the number of times they have queried it. schemaName \u00b6 Simple name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. schemaQualifiedName \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it does not", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "emaQualifiedName \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. tableName \u00b6 Simple name of the table in which this SQL asset exists, or empty if it does not exist within a table. tableQualifiedName \u00b6 Unique name of the table in which this SQL asset exists, or empty if it does not exist within a table. viewName \u00b6 Simple name of the view in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "QL asset exists, or empty if it does not exist within a table. viewName \u00b6 Simple name of the view in which this SQL asset exists, or empty if it does not exist within a view. viewQualifiedName \u00b6 Unique name of the view in which this SQL asset exists, or empty if it does not exist within a view. dynamoDBPartitionKey \u00b6 Specifies the partition key of the DynamoDB Table/Index dynamoDBReadCapacityUnits", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "moDBPartitionKey \u00b6 Specifies the partition key of the DynamoDB Table/Index dynamoDBReadCapacityUnits \u00b6 The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException dynamoDBSortKey \u00b6 Specifies the sort key of the DynamoDB Table/Index dynamoDBStatus \u00b6 Status of the DynamoDB Asset dynamoDBWriteCapacityUnits \u00b6 The maximum number of writes consumed p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "\u00b6 Status of the DynamoDB Asset dynamoDBWriteCapacityUnits \u00b6 The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException alias \u00b6 Alias for this table. columnCount \u00b6 Number of columns in this table. externalLocation \u00b6 External location of this table, for example: an S3 object location. externalLocationFormat \u00b6 Format of the external location of this table, for exa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "S3 object location. externalLocationFormat \u00b6 Format of the external location of this table, for example: JSON, CSV, PARQUET, etc. externalLocationRegion \u00b6 Region of the external location of this table, for example: S3 region. icebergCatalogName \u00b6 iceberg table catalog name (can be any user defined name) icebergCatalogSource \u00b6 iceberg table catalog type (glue, polaris, snowflake) icebergCatalogTab", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "name) icebergCatalogSource \u00b6 iceberg table catalog type (glue, polaris, snowflake) icebergCatalogTableName \u00b6 catalog table name (actual table name on the catalog side). icebergCatalogTableNamespace \u00b6 catalog table namespace (actual database name on the catalog side). icebergTableBaseLocation \u00b6 iceberg table base location inside the external volume. icebergTableType \u00b6 iceberg table type (managed vs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "rg table base location inside the external volume. icebergTableType \u00b6 iceberg table type (managed vs unmanaged) isPartitioned \u00b6 Whether this table is partitioned (true) or not (false). isQueryPreview \u00b6 Whether preview queries are allowed for this table (true) or not (false). isSharded \u00b6 Whether this table is a sharded table (true) or not (false). isTemporary \u00b6 Whether this table is temporary (true", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "table is a sharded table (true) or not (false). isTemporary \u00b6 Whether this table is temporary (true) or not (false). partitionCount \u00b6 Number of partitions in this table. partitionList \u00b6 List of partitions in this table. partitionStrategy \u00b6 Partition strategy for this table. queryPreviewConfig \u00b6 Configuration for preview queries. rowCount \u00b6 Number of rows in this table. sizeBytes \u00b6 Size of this ta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "figuration for preview queries. rowCount \u00b6 Number of rows in this table. sizeBytes \u00b6 Size of this table, in bytes. tableExternalVolumeName \u00b6 external volume name for the table. tableRetentionTime \u00b6 Data retention time in days. tableType \u00b6 Type of the table. dynamoDBSecondaryIndexProjectionType \u00b6 Specifies attributes that are projected from the DynamoDB table into the index Relationships \u00b6 Inherite", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "cifies attributes that are projected from the DynamoDB table into the index Relationships \u00b6 Inherited relationships These relationships are inherited from DynamoDBLocalSecondaryIndex 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset cont", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "ion asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( Dat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "atest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonito", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21900}}, {"content": "nk ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22200}}, {"content": "d to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22500}}, {"content": "rent name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities im", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22800}}, {"content": "ute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 TBC dbtTest", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23100}}, {"content": "FromSparkJobs ( SparkJob ) \u00b6 TBC dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 TBC dbtTests ( DbtTest ) \u00b6 TBC sqlDBTSources ( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC columns ( Column ) \u00b6 Columns that exist within this table. dimensions ( Table ) \u00b6 TBC facts ( Table ) \u00b6 TBC partitions ( TablePartition ) \u00b6 Partitions that exist within this table. queries ( Query ) \u00b6 Queries that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23400}}, {"content": "ions ( TablePartition ) \u00b6 Partitions that exist within this table. queries ( Query ) \u00b6 Queries that access this table. atlanSchema ( Schema ) \u00b6 Schema in which this table exists. (1) Uses a different name in SDKs schema schema These relationships are specific to instances of DynamoDBLocalSecondaryIndex (and all of its subtypes). dynamoDBTable ( DynamoDBTable ) \u00b6 TBC Was this page helpful? Thanks f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23700}}, {"content": "dex (and all of its subtypes). dynamoDBTable ( DynamoDBTable ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodblocalsecondaryindex/", "title": "DynamoDBLocalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24000}}, {"content": "APIPath \u00b6 Instance of an API path that could contain one or more endpoints in Atlan. Complete reference This is a complete reference for the APIPath object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common mul", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "h: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. APIPath inherits its attributes and relationships from these other types: classDiagram direction RL class APIPath link APIPath \"../apipath\" class API { <<abstract>> } link API \"../api\" API <|-- APIPath : extends class Catalog { <<abstract>> } link Catalog \"../catalog", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "link API \"../api\" API <|-- APIPath : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- API : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from APIPath 's", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from APIPath 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metada", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "an_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "e asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "et was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use Thes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "sset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUser", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "oles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcement", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contain", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "he announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON obj", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAno", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "o for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedA", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who exec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "tRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (fa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "es were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLast", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "read ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was st", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "setDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": ". assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ed this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Name \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "setDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcInc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "setMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "dent sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "onitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPolic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "tatus of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "pdated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "(1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "set used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ge isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "s, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purpos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "et. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "r who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "eCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadE", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "urce_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "opularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_recor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "sset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of gr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) apiExternalDocs \u00b6 External documentation of the API. apiIsAuthOptional \u00b6 Whether au", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "in asset types.) apiExternalDocs \u00b6 External documentation of the API. apiIsAuthOptional \u00b6 Whether authentication is optional (true) or required (false). apiIsObjectReference \u00b6 If this asset refers to an APIObject apiObjectQualifiedName \u00b6 Qualified name of the APIObject that is referred to by this asset. When apiIsObjectReference is true. apiSpecName \u00b6 Simple name of the API spec, if this asset is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "set. When apiIsObjectReference is true. apiSpecName \u00b6 Simple name of the API spec, if this asset is contained in an API spec. apiSpecQualifiedName \u00b6 Unique name of the API spec, if this asset is contained in an API spec. apiSpecType \u00b6 Type of API, for example: OpenAPI, GraphQL, etc. apiSpecVersion \u00b6 Version of the API specification. These attributes are specific to instances of APIPath (and all of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "Version of the API specification. These attributes are specific to instances of APIPath (and all of its subtypes). apiPathAvailableOperations \u00b6 List of the operations available on the endpoint. apiPathAvailableResponseCodes \u00b6 Response codes available on the path across all operations. apiPathIsIngressExposed \u00b6 Whether the path is exposed as an ingress (true) or not (false). apiPathIsTemplated \u00b6 W", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "essExposed \u00b6 Whether the path is exposed as an ingress (true) or not (false). apiPathIsTemplated \u00b6 Whether the endpoint's path contains replaceable parameters (true) or not (false). apiPathRawURI \u00b6 Absolute path to an individual endpoint. apiPathSummary \u00b6 Descriptive summary intended to apply to all operations in this path. Relationships \u00b6 Inherited relationships These relationships are inherited", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "operations in this path. Relationships \u00b6 Inherited relationships These relationships are inherited from APIPath 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms tha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "\u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "aContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outpu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": ") \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a differen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "C sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Proc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "utToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Task", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of APIPath (and all of its subtypes). apiSpec ( APISpec ) \u00b6 API specification in which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "nstances of APIPath (and all of its subtypes). apiSpec ( APISpec ) \u00b6 API specification in which this path exists. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apipath/", "title": "APIPath - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "Can I connect to any source with an ODBC/JDBC driver? A number of Atlan's [supported connectors](/product/connections/references/connectors-and-capabilities) use a JDBC- or REST API-based approach for metadata extraction. If you are attempting to connect to a source with no native integration, [contact Atlan support](/support/submit-request) to share more details about your use case. Can the Hive", "metadata": {"source_url": "https://docs.atlan.com/tags/faq-connections", "title": "6 docs tagged with \"faq-connections\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "act Atlan support](/support/submit-request) to share more details about your use case. Can the Hive crawler connect to an independent Hive metastore? Learn about can the hive crawler connect to an independent hive metastore?. Data Connections and Integration Complete guide for connecting Atlan to your data sources, managing integrations, and troubleshooting connection issues. How often does Atlan", "metadata": {"source_url": "https://docs.atlan.com/tags/faq-connections", "title": "6 docs tagged with \"faq-connections\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ur data sources, managing integrations, and troubleshooting connection issues. How often does Atlan crawl Snowflake? Learn about how often does atlan crawl snowflake?. What column keys does Atlan crawl? Learn about what column keys does atlan crawl?. What's the difference between connecting to Athena and Glue? Learn about what's the difference between connecting to athena and glue?.", "metadata": {"source_url": "https://docs.atlan.com/tags/faq-connections", "title": "6 docs tagged with \"faq-connections\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "SigmaPage \u00b6 Instance of a Sigma page in Atlan. Complete reference This is a complete reference for the SigmaPage object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Sig", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. SigmaPage inherits its attributes and relationships from these other types: classDiagram direction RL class SigmaPage link SigmaPage \"../sigmapage\" class Sigma { <<abstract>> } link Sigma \"../sigma\" Sigma <|-- SigmaPage : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Sigma : extends class C", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "a <|-- SigmaPage : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Sigma : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ferenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from SigmaPage 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets sn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ". (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "e custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-strin", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "n asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that ha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "man-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "ackground tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (Th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "his is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "uncement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ntUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "malo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 Al", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Ali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunEx", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "hich the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "aterialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "tDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job tha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being que", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "adable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "f the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "btJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 U", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "n which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "\u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Car", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "sset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcI", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ssetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names att", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "etMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ia Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateSta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "se to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionN", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ertificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface).", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "pty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "zed this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "sset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "n milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "is asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular qu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "s source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "RecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordL", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "s a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTota", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "d_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "ime (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "\u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 Vie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) sigmaDataElementName \u00b6 Simple name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ned in a collection. (This is only used for certain asset types.) sigmaDataElementName \u00b6 Simple name of the data element in which this asset exists. sigmaDataElementQualifiedName \u00b6 Unique name of the data element in which this asset exists. sigmaPageName \u00b6 Simple name of the page on which this asset exists. sigmaPageQualifiedName \u00b6 Unique name of the page on which this asset exists. sigmaWorkbookN", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "exists. sigmaPageQualifiedName \u00b6 Unique name of the page on which this asset exists. sigmaWorkbookName \u00b6 Simple name of the workbook in which this asset exists. sigmaWorkbookQualifiedName \u00b6 Unique name of the workbook in which this asset exists. These attributes are specific to instances of SigmaPage (and all of its subtypes). sigmaDataElementCount \u00b6 Number of data elements on this page. Relation", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ge (and all of its subtypes). sigmaDataElementCount \u00b6 Number of data elements on this page. Relationships \u00b6 Inherited relationships These relationships are inherited from SigmaPage 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset contai", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "n asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "est version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": ") \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "nt name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities impl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "e ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of SigmaPage (and all o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "omSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of SigmaPage (and all of its subtypes). sigmaDataElements ( SigmaDataElement ) \u00b6 Data elements that exist on this page. sigmaWorkbook ( SigmaWorkbook ) \u00b6 Workbook in which this page exists. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to pr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/sigmapage/", "title": "SigmaPage - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "On this page warning \ud83e\udd13 Who can do this? You will probably need your Amazon DynamoDB administrator to run these commands - you may not have access yourself. Atlan supports the following authentication methods for fetching metadata from Amazon DynamoDB: IAM user authentication - this method uses an AWS access key, secret key, and region to fetch metadata. IAM role authentication - this method uses a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "S access key, secret key, and region to fetch metadata. IAM role authentication - this method uses an AWS role ARN and region to fetch metadata. Create IAM policy \u200b To create an IAM policy with the necessary permissions, follow the steps in the AWS Identity and Access Management User Guide . Create the policy using the following JSON: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "the policy using the following JSON: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"dynamodb:ListTables\" ] , \"Resource\" : \"*\" } , { \"Effect\" : \"Allow\" , \"Action\" : [ \"dynamodb:DescribeTable\" ] , \"Resource\" : \"arn:aws:dynamodb:<region>:<account_id>:table/*\" } ] } Replace <region> with the AWS region of your Amazon DynamoDB instance. Replace <account_id> with your", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "place <region> with the AWS region of your Amazon DynamoDB instance. Replace <account_id> with your AWS account ID. IAM permissions \u200b Atlan requires the following permissions: dynamodb:ListTables : Fetches a list of your Amazon DynamoDB tables. This permission is used during the metadata extraction process to dynamically determine a list of tables. Note that this action does not support resource-l", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "process to dynamically determine a list of tables. Note that this action does not support resource-level permissions and requires you to choose all resources, hence * for Resource . dynamodb:DescribeTable : Fetches metadata for extracted tables. This action supports resource-level permissions, so for Resource , you can either: Grant permission to all tables in the region for which you want to extr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "r Resource , you can either: Grant permission to all tables in the region for which you want to extract metadata: arn:aws:dynamodb:<region>:<account_id>:table/* Specify the table names for which you want to extract metadata: arn:aws:dynamodb:<region>:<account_id>:table/table_name_1 , arn:aws:dynamodb:<region>:<account_id>:table/table_name_2 Choose authentication mechanism \u200b Using the policy create", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "b:<region>:<account_id>:table/table_name_2 Choose authentication mechanism \u200b Using the policy created above , configure one of the following options for authentication. User-based authentication \u200b To configure IAM user-based authentication: Create an AWS IAM user by following the steps in the AWS Identity and Access Management User Guide . On the Set permissions page, attach the policy created in", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "entity and Access Management User Guide . On the Set permissions page, attach the policy created in the previous step to this user. Refer to managing access keys for IAM users to create an access key for the new user. Once the user is created, view or download the user's access key ID and secret access key . danger This will be your only opportunity to view or download the access keys. You will no", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ess key . danger This will be your only opportunity to view or download the access keys. You will not have access to them again after leaving the user creation screen. Role delegation-based authentication \u200b To configure role delegation-based authentication: Raise a support ticket to get the ARN of the Node Instance Role for your Atlan EKS cluster. Create a new role in your AWS account by following", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "he Node Instance Role for your Atlan EKS cluster. Create a new role in your AWS account by following the steps in the AWS Identity and Access Management User Guide . When prompted for policies, attach the policy created in the previous step to this role. When prompted, create a trust relationship for the role using the following trust policy. (Replace <atlan_nodeinstance_role_arn> with the ARN rec", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "r the role using the following trust policy. (Replace <atlan_nodeinstance_role_arn> with the ARN received from Atlan support.) { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Principal\" : { \"AWS\" : \"<atlan_nodeinstance_role_arn>\" } , \"Action\" : \"sts:AssumeRole\" , \"Condition\" : { } } ] } (Optional) To use an external ID for additional security, paste the external ID into the po", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "} } ] } (Optional) To use an external ID for additional security, paste the external ID into the policy: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Principal\" : { \"AWS\" : \"<atlan_nodeinstance_role_arn>\" } , \"Action\" : \"sts:AssumeRole\" , \"Condition\" : { \"StringEquals\" : { \"sts:ExternalId\" : \"<atlan_external_id>\" } } } ] } Replace <atlan_external_id> with the external ID y", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "sts:ExternalId\" : \"<atlan_external_id>\" } } } ] } Replace <atlan_external_id> with the external ID you want to use. Now, reach out to Atlan support with: The name of the role you created above. The ID of the AWS account where the role was created. danger Wait until the support team confirms the account is allowlisted to assume the role before running the crawler. Create IAM policy IAM permissions", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "unt is allowlisted to assume the role before running the crawler. Create IAM policy IAM permissions Choose authentication mechanism", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/how-tos/set-up-amazon-dynamodb", "title": "Set up Amazon DynamoDB | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "Automate data governance You can streamline your data governance requirements in Atlan with [governance workflows](/product/capabilities/governance/stewardship/how-tos/create-governance-workflows) and manage alerts, approvals, and tasks using the [inbox](/product/capabilities/governance/stewardship/how-tos/manage-tasks). Governance workflows enable you to set up robust controls on data access mana", "metadata": {"source_url": "https://docs.atlan.com/tags/monitoring", "title": "9 docs tagged with \"monitoring\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "how-tos/manage-tasks). Governance workflows enable you to set up robust controls on data access management, metadata enrichment, new entity creation, and more, with out-of-the-box workflow templates and automated execution. Cloud logging and monitoring Learn about Atlan's Cloud logging and monitoring exported in OpenTelemetry Protocol (OTLP) format for SIEM integration and security monitoring. Lin", "metadata": {"source_url": "https://docs.atlan.com/tags/monitoring", "title": "9 docs tagged with \"monitoring\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "g exported in OpenTelemetry Protocol (OTLP) format for SIEM integration and security monitoring. Link your Microsoft Teams account To get alerts for [starred assets](/product/capabilities/discovery/how-tos/star-assets) directly delivered to your Microsoft Teams account, you may need to first link your Microsoft Teams account. This is done automatically for the user that [set up the Microsoft Teams", "metadata": {"source_url": "https://docs.atlan.com/tags/monitoring", "title": "9 docs tagged with \"monitoring\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ur Microsoft Teams account. This is done automatically for the user that [set up the Microsoft Teams integration](/product/integrations/collaboration/microsoft-teams/how-tos/integrate-microsoft-teams), but not for other users. Manage tasks :::warning Who can do this? Anyone with access to Atlan - admin, member, or guest user - can use the inbox. Security monitoring Learn about security monitoring.", "metadata": {"source_url": "https://docs.atlan.com/tags/monitoring", "title": "9 docs tagged with \"monitoring\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "min, member, or guest user - can use the inbox. Security monitoring Learn about security monitoring. Supported sources Learn about supported sources. Troubleshooting Fivetran connectivity Learn about troubleshooting fivetran connectivity. Troubleshooting Redash connectivity Learn about troubleshooting redash connectivity. What's Data Quality Studio Understand Atlan's Data Quality Studio and how it", "metadata": {"source_url": "https://docs.atlan.com/tags/monitoring", "title": "9 docs tagged with \"monitoring\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ng redash connectivity. What's Data Quality Studio Understand Atlan's Data Quality Studio and how it enables business and data teams to collaborate on defining, monitoring, and enforcing data quality expectations", "metadata": {"source_url": "https://docs.atlan.com/tags/monitoring", "title": "9 docs tagged with \"monitoring\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Collaboration Integrations Integrate Atlan with collaboration tools like Microsoft Teams and Slack. Microsoft Teams Integrate Atlan with Microsoft Teams to enable collaboration and notifications. Slack Integrate Atlan with Slack to enable collaboration and notifications. What is included in the Slack integration? Learn about the features and capabilities of the Slack integration with Atlan.", "metadata": {"source_url": "https://docs.atlan.com/tags/collaboration", "title": "4 docs tagged with \"collaboration\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Relational database model \u00b6 Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand how to manage relational database assets in Atlan. For that, we would suggest starting with the manage relational assets pattern . These model elements all deal with relational database constructs. classDiagram direction RL", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ttern . These model elements all deal with relational database constructs. classDiagram direction RL class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" class Asset { <<abstract>> } link Asset \"../entities/asset\" Referenceable <|-- Asset : extends class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Asset <|-- Catalog : extends class SQL { <<abstract>>", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "stract>> } link Catalog \"../entities/catalog\" Asset <|-- Catalog : extends class SQL { <<abstract>> } link SQL \"../entities/sql\" Catalog <|-- SQL : extends class Tag { <<abstract>> } link Tag \"../entities/tag\" Catalog <|-- Tag : extends class TablePartition link TablePartition \"../entities/tablepartition\" SQL <|-- TablePartition : extends class Table link Table \"../entities/table\" SQL <|-- Table :", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ition\" SQL <|-- TablePartition : extends class Table link Table \"../entities/table\" SQL <|-- Table : extends class Query link Query \"../entities/query\" SQL <|-- Query : extends class Column link Column \"../entities/column\" SQL <|-- Column : extends class Schema link Schema \"../entities/schema\" SQL <|-- Schema : extends class SnowflakeStream link SnowflakeStream \"../entities/snowflakestream\" SQL <|", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "|-- Schema : extends class SnowflakeStream link SnowflakeStream \"../entities/snowflakestream\" SQL <|-- SnowflakeStream : extends class SnowflakePipe link SnowflakePipe \"../entities/snowflakepipe\" SQL <|-- SnowflakePipe : extends class Database link Database \"../entities/database\" SQL <|-- Database : extends class Procedure link Procedure \"../entities/procedure\" SQL <|-- Procedure : extends class V", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "extends class Procedure link Procedure \"../entities/procedure\" SQL <|-- Procedure : extends class View link View \"../entities/view\" SQL <|-- View : extends class MaterialisedView link MaterialisedView \"../entities/materialisedview\" SQL <|-- MaterialisedView : extends class SnowflakeTag link SnowflakeTag \"../entities/snowflaketag\" SQL <|-- SnowflakeTag : extends Tag <|-- SnowflakeTag : extends cla", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "keTag \"../entities/snowflaketag\" SQL <|-- SnowflakeTag : extends Tag <|-- SnowflakeTag : extends class Function link Function \"../entities/function\" SQL <|-- Function : extends Relationships \u00b6 The following illustrates how the various relational database objects inter-relate with each other: erDiagram Connection ||..o{ Database : \"\" Database ||--o{ Schema : schemas Schema ||--o{ Table : tables Sch", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "am Connection ||..o{ Database : \"\" Database ||--o{ Schema : schemas Schema ||--o{ Table : tables Schema ||--o{ View : views Schema ||--o{ MaterialisedView : materialisedViews Schema ||--o{ Procedure : procedures Schema ||--o{ SnowflakePipe : snowflakePipes Schema ||--o{ SnowflakeStream : snowflakeStreams Schema ||--o{ SnowflakeTag : snowflakeTags Table |o--o{ TablePartition : partitions Table }o--", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "reams Schema ||--o{ SnowflakeTag : snowflakeTags Table |o--o{ TablePartition : partitions Table }o--o{ Query : queries Table |o--o{ Column : columns View }o--o{ Query : queries View |o--o{ Column : columns MaterialisedView |o--o{ Column : columns TablePartition |o--o{ Column : columns Column }o--o{ Query : queries Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us i", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Query : queries Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/rdbms/", "title": "Relational databases - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "On this page Once you have configured the Cloudera Impala user permissions , you can establish a connection between Atlan and Cloudera Impala. To crawl metadata from Cloudera Impala, review the order of operations and then complete the following steps. Select the source \u200b To select Cloudera Impala as your source: In the top right of any screen in Atlan, navigate to +New and click New Workflow . Fr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s your source: In the top right of any screen in Atlan, navigate to +New and click New Workflow . From the Marketplace page, click Cloudera Impala Assets . In the right panel, click Setup Workflow . Provide your credentials \u200b To enter your Cloudera Impala credentials: For Extraction method , Direct is the default selection. For Hostname , enter the host name of your Cloudera Impala coordinator or", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "is the default selection. For Hostname , enter the host name of your Cloudera Impala coordinator or load balancer. For Authentication , select LDAP as the authentication method. For Username , enter the LDAP username that has access to Cloudera Impala. For Password , enter the password associated with the LDAP username. For SSL , keep Enabled to connect via a Secure Sockets Layer (SSL) channel or", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "th the LDAP username. For SSL , keep Enabled to connect via a Secure Sockets Layer (SSL) channel or click Disabled . Click the Test Authentication button to confirm connectivity to Cloudera Impala. Once authentication is successful, navigate to the bottom of the screen and click Next . Configure the connection \u200b To complete the Cloudera Impala connection configuration: Provide a Connection Name th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "connection \u200b To complete the Cloudera Impala connection configuration: Provide a Connection Name that represents your source environment. For example, you might use values like production , development , gold , or analytics . (Optional) To change the users who are able to manage this connection, change the users or groups listed under Connection Admins . Careful If you do not specify any user or", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ange the users or groups listed under Connection Admins . Careful If you do not specify any user or group, no one will be able to manage the connection \u2014 not even admins. Navigate to the bottom of the screen and click Next to proceed. Configure the crawler \u200b Before running the Cloudera Impala crawler, you can further configure it. On the Metadata Filters page, you can override the defaults for any", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "r, you can further configure it. On the Metadata Filters page, you can override the defaults for any of these options: To include specific assets in crawling, click Include Metadata , and select the assets you want. If you don't select any, all assets will be included by default. To exclude specific assets from crawling, click Exclude Metadata , and choose the assets you want to omit. If you don't", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assets from crawling, click Exclude Metadata , and choose the assets you want to omit. If you don't select any, no assets will be excluded. Did you know? If an asset appears in both the include and exclude filters, the exclude filter takes precedence. Run the crawler \u200b To run the Cloudera Impala crawler, after completing the steps above: To run the crawler once, immediately, at the bottom of the", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "awler, after completing the steps above: To run the crawler once, immediately, at the bottom of the screen, click the Run button. To schedule the crawler to run hourly, daily, weekly, or monthly, at the bottom of the screen, click the Schedule & Run button. Once the crawler has completed running, you will see the assets on Atlan's asset page! \ud83c\udf89 Select the source Provide your credentials Configure", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "u will see the assets on Atlan's asset page! \ud83c\udf89 Select the source Provide your credentials Configure the connection Configure the crawler Run the crawler", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/how-tos/crawl-cloudera-impala", "title": "Crawl Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "MicroStrategyVisualization \u00b6 Instance of a MicroStrategy visualization in Atlan. Complete reference This is a complete reference for the MicroStrategyVisualization object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthrough", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "nt to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. MicroStrategyVisualization inherits its attributes and relationships from these other types: classDiagram direction RL class MicroStrategyVisualization link MicroStrategyVisualization \"../microstrategyvisualization\" class MicroStrategy { <<abstract>> }", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "link MicroStrategyVisualization \"../microstrategyvisualization\" class MicroStrategy { <<abstract>> } link MicroStrategy \"../microstrategy\" MicroStrategy <|-- MicroStrategyVisualization : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- MicroStrategy : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from MicroStrategyVisualization 's supertypes (shown above): typeName \u00b6 Type of this asset. g", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "erited from MicroStrategyVisualization 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_ta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "nly used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpd", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "nnouncementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "nomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "iated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "his asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved fr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "t last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "yThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "hat materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "alized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materializ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "setDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "he last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Sched", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "he next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "b that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtS", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "bt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "DbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "t names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "Types \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "o this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyG", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ssociated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certif", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "age \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Uniqu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "imple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (tru", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "UIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTota", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "pleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "dURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "xtra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queri", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "hat accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "(1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ist of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "dTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source applicati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starre", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "ame of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "e in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) microStrategyCertifiedAt \u00b6 Time (epoch) this asset was certified in MicroStrategy, in milliseconds. microStrategyCertifiedBy \u00b6 User who certi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "his asset was certified in MicroStrategy, in milliseconds. microStrategyCertifiedBy \u00b6 User who certified this asset, in MicroStrategy. microStrategyCubeNames \u00b6 Simple names of the cubes related to this asset. microStrategyCubeQualifiedNames \u00b6 Unique names of the cubes related to this asset. microStrategyIsCertified \u00b6 Whether the asset is certified in MicroStrategy (true) or not (false). microStrat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ategyIsCertified \u00b6 Whether the asset is certified in MicroStrategy (true) or not (false). microStrategyLocation \u00b6 Location of this asset in MicroStrategy. microStrategyProjectName \u00b6 Simple name of the project in which this asset exists. microStrategyProjectQualifiedName \u00b6 Unique name of the project in which this asset exists. microStrategyReportNames \u00b6 Simple names of the reports related to this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "in which this asset exists. microStrategyReportNames \u00b6 Simple names of the reports related to this asset. microStrategyReportQualifiedNames \u00b6 Unique names of the reports related to this asset. These attributes are specific to instances of MicroStrategyVisualization (and all of its subtypes). microStrategyDossierName \u00b6 Simple name of the dossier in which this visualization exists. microStrategyDoss", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "rategyDossierName \u00b6 Simple name of the dossier in which this visualization exists. microStrategyDossierQualifiedName \u00b6 Unique name of the dossier in which this visualization exists. microStrategyVisualizationType \u00b6 Type of visualization. Relationships \u00b6 Inherited relationships These relationships are inherited from MicroStrategyVisualization 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "e inherited from MicroStrategyVisualization 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assigne", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "saryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Da", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "ble ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJob", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "lowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of MicroStrategyVisualization (and all of its subtypes). microStrategyDossier ( MicroStrategyDossier ) \u00b6 Dossier in which this visualization exists. microStrate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "roStrategyDossier ( MicroStrategyDossier ) \u00b6 Dossier in which this visualization exists. microStrategyProject ( MicroStrategyProject ) \u00b6 Project in which this visualization exists. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyvisualization/", "title": "MicroStrategyVisualization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "Column Level Lineage Data lineage shows the upstream and downstream dependencies of an asset. For a more granular view of these dependencies, you can view column-level lineage. Connectors and capabilities Learn about connectors and capabilities. Create data products You can either create a data product from the products module or lineage graph. Does Atlan support field-level lineage for BI tools?", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "uct from the products module or lineage graph. Does Atlan support field-level lineage for BI tools? Atlan supports field-level lineage across most BI sources that have the concept of fields. See [supported BI sources](/product/connections/references/supported-. Download and export lineage Understanding the flow of data from the source to its destination is a critical need for many organizations. T", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ing the flow of data from the source to its destination is a critical need for many organizations. To help you build trust in your data assets, Atlan allows you to [view](#view-impacted-assets), [download](#download-lineage), and [export](#export-impacted-assets) your impacted assets and share it with others in your organization. Download impacted assets in Google Sheets Once you've [connected Atl", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "th others in your organization. Download impacted assets in Google Sheets Once you've [connected Atlan with Google Sheets](/product/integrations/collaboration/spreadsheets/how-tos/integrate-atlan-with-google-sheets), you can download impacted assets in Google Sheets. This can help you assess the downstream impact of any changes made to an upstream asset for [impact analysis](/product/capabilities/", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "nstream impact of any changes made to an upstream asset for [impact analysis](/product/capabilities/lineage/concepts/what-is-lineage#impact-analysis). High availability and disaster recovery (HA/DR) Learn about high availability and disaster recovery (ha/dr). How can Atlan generate upstream lineage from the data warehouse layer? Learn about how can atlan generate upstream lineage from the data war", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "from the data warehouse layer? Learn about how can atlan generate upstream lineage from the data warehouse layer?. How do you enable data lineage for different data sources? Learn about how do you enable data lineage for different data sources?. How does a Snowflake connection know that a table referenced in LookML is actually the same table? Learn about how does a snowflake connection know that a", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "renced in LookML is actually the same table? Learn about how does a snowflake connection know that a table referenced in lookml is actually the same table?. How does Atlan handle lineage from Spark jobs? Learn about how does atlan handle lineage from spark jobs?. How is the Atlan lineage graph depicted using Power BI measures? Learn about how is the atlan lineage graph depicted using power bi meas", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ted using Power BI measures? Learn about how is the atlan lineage graph depicted using power bi measures?. How to obtain upstream lineage if I connect to a Tableau data asset? Learn about how to obtain upstream lineage if i connect to a tableau data asset?. Integrate Google Cloud Composer/OpenLineage To integrate Google Cloud Composer/OpenLineage with Atlan, complete the following steps. To learn", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "e To integrate Google Cloud Composer/OpenLineage with Atlan, complete the following steps. To learn more about OpenLineage, refer to [OpenLineage configuration and facets](/product/connections/references/openlineage-configuration-and-facets). Is there a way to build lineage from NetSuite to Snowflake? Learn about is there a way to build lineage from netsuite to snowflake?. Lineage [Data lineage](/", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "e? Learn about is there a way to build lineage from netsuite to snowflake?. Lineage [Data lineage](/product/capabilities/lineage/how-tos/view-lineage) captures how data moves across your data landscape. This information is useful to:. Lineage Generator (no transformations) Learn how Atlan can generate upstream lineage from the data warehouse layer, including configuration options and behavior. Mon", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "te upstream lineage from the data warehouse layer, including configuration options and behavior. Monitor data domains The _Statistics_ tab within a data domain helps you take the pulse of what's happening to your data domains in Atlan and gain actionable insights. You can view a summary of data products, track metrics for domain enrichment, view data product creation over time, monitor domain usag", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ucts, track metrics for domain enrichment, view data product creation over time, monitor domain usage, and more. OpenLineage configuration and facets Learn about openlineage configuration and facets. Preflight checks for Apache Airflow Learn about preflight checks for apache airflow. Provider package versions for OpenLineage Learn about provider package versions for openlineage. Report on glossari", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "e versions for OpenLineage Learn about provider package versions for openlineage. Report on glossaries The [glossary](/product/capabilities/governance/glossary/concepts/what-is-a-glossary) dashboard in the reporting center helps you track your glossaries, categories, and terms. You can view a high-level overview of all your glossaries or use a [variety of filters](/product/capabilities/discovery/h", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "evel overview of all your glossaries or use a [variety of filters](/product/capabilities/discovery/how-tos/use-the-filters-menu) to drill down further. Report on queries The Insights dashboard in the reporting center helps you track metrics for all your [queries](/product/capabilities/insights/how-tos/query-data) and query runs. Report on usage and cost The usage and cost dashboard in the reportin", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "os/query-data) and query runs. Report on usage and cost The usage and cost dashboard in the reporting center can help you better understand asset usage and optimize your operations accordingly. You can track storage consumption for your assets, sort asset metrics by popularity, and filter assets by context - all in one dashboard. Set up on-premises Databricks lineage extraction In some cases you w", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "context - all in one dashboard. Set up on-premises Databricks lineage extraction In some cases you will not be able to expose your Databricks instance for Atlan to extract and ingest lineage. For example, this may happen when security requirements restrict access to sensitive, mission-critical data. Tag propagation Learn about tag propagation. Tenant logs Learn about tenant logs. Troubleshooting A", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "Tag propagation Learn about tag propagation. Tenant logs Learn about tenant logs. Troubleshooting Amazon DynamoDB connectivity Learn about troubleshooting amazon dynamodb connectivity. Troubleshooting Amazon MSK connectivity Learn about troubleshooting amazon msk connectivity. Troubleshooting Amazon Redshift connectivity Learn about troubleshooting amazon redshift connectivity. Troubleshooting Ap", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "n Redshift connectivity Learn about troubleshooting amazon redshift connectivity. Troubleshooting Apache Airflow/OpenLineage connectivity Learn about troubleshooting apache airflow/openlineage connectivity. Troubleshooting Apache Spark/OpenLineage connectivity Learn about troubleshooting apache spark/openlineage connectivity. Troubleshooting Domo connectivity Learn about troubleshooting domo conne", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "k/openlineage connectivity. Troubleshooting Domo connectivity Learn about troubleshooting domo connectivity. Troubleshooting Fivetran connectivity Learn about troubleshooting fivetran connectivity. Troubleshooting IBM Cognos Analytics connectivity Learn about troubleshooting ibm cognos analytics connectivity. Troubleshooting Matillion connectivity Learn about troubleshooting matillion connectivity", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "nectivity. Troubleshooting Matillion connectivity Learn about troubleshooting matillion connectivity. Troubleshooting Microsoft Azure Cosmos DB connectivity Learn about troubleshooting microsoft azure cosmos db connectivity. Troubleshooting Microsoft Azure Data Factory connectivity Learn about troubleshooting microsoft azure data factory connectivity. Troubleshooting Microsoft Power BI connectivit", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "leshooting microsoft azure data factory connectivity. Troubleshooting Microsoft Power BI connectivity Learn about troubleshooting microsoft power bi connectivity. Troubleshooting Mode connectivity Learn about troubleshooting mode connectivity. Troubleshooting MongoDB connectivity Learn about troubleshooting mongodb connectivity. Troubleshooting on-premises Looker connectivity Learn about troublesh", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "shooting mongodb connectivity. Troubleshooting on-premises Looker connectivity Learn about troubleshooting on-premises looker connectivity. Troubleshooting Qlik Sense Cloud connectivity Learn about troubleshooting qlik sense cloud connectivity. Troubleshooting Sigma connectivity Learn about troubleshooting sigma connectivity. Troubleshooting Sisense connectivity Learn about troubleshooting sisense", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "hooting sigma connectivity. Troubleshooting Sisense connectivity Learn about troubleshooting sisense connectivity. Troubleshooting ThoughtSpot connectivity Learn about troubleshooting thoughtspot connectivity. Troubleshooting usage and popularity metrics Learn about troubleshooting usage and popularity metrics. Use Atlan AI for lineage analysis \u2795 Available to customers in Enterprise and Business-C", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "ity metrics. Use Atlan AI for lineage analysis \u2795 Available to customers in Enterprise and Business-Critical platform editions View event logs Event logs help you track and debug events received from supported connectors, providing you with greater observability in Atlan. Event logs are currently stored in Atlan for 7 days. view lineage The [lineage](/product/capabilities/lineage/concepts/what-is-l", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "red in Atlan for 7 days. view lineage The [lineage](/product/capabilities/lineage/concepts/what-is-lineage) graph in Atlan provides a granular view of the data flows and transformations for your assets. To learn how to use the lineage graph, complete the following steps. What are processes? Learn about what are processes?. What do the numbers in lineage view mean? Learn about what do the numbers i", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "out what are processes?. What do the numbers in lineage view mean? Learn about what do the numbers in lineage view mean?. What does Atlan crawl from Cloudera Impala? Learn about what does atlan crawl from cloudera impala?. What does Atlan crawl from Metabase? Atlan crawls and maps the following assets and properties from Metabase. What does Atlan crawl from Sigma? Atlan crawls and maps the followi", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "ts and properties from Metabase. What does Atlan crawl from Sigma? Atlan crawls and maps the following assets and properties from Sigma. What is business lineage? Learn about what is business lineage?. What lineage do you support? Learn about what lineage do you support?. Why is my Databricks lineage API not working? Learn about why is my databricks lineage api not working?.", "metadata": {"source_url": "https://docs.atlan.com/tags/impact-analysis", "title": "58 docs tagged with \"impact-analysis\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "quick_sight_dataset_import_mode \u00b6 TBC Complete reference This is a complete reference for the quick_sight_dataset_import_mode enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 SPICE DIRECT_QUER", "metadata": {"source_url": "https://developer.atlan.com/models/enums/quick_sight_dataset_import_mode/", "title": "quick_sight_dataset_import_mode - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "tterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 SPICE DIRECT_QUERY Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/quick_sight_dataset_import_mode/", "title": "quick_sight_dataset_import_mode - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "CosmosMongoDBAccount \u00b6 Instance of a Cosmos MongoDB account in Atlan. Complete reference This is a complete reference for the CosmosMongoDBAccount object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. CosmosMongoDBAccount inherits its attributes and relationships from these other types: classDiagram direction RL class CosmosMongoDBAccount link CosmosMongoDBAccount \"../cosmosmongodbaccount\" class CosmosMongoDB { <<abstract>> } link CosmosMongoDB \"../cosmosmongodb\" Co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "/cosmosmongodbaccount\" class CosmosMongoDB { <<abstract>> } link CosmosMongoDB \"../cosmosmongodb\" CosmosMongoDB <|-- CosmosMongoDBAccount : extends class NoSQL { <<abstract>> } link NoSQL \"../nosql\" NoSQL <|-- CosmosMongoDB : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from CosmosMongoDBAccount 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "'s supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataS", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "tadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "sset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make ch", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "sset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adm", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "'s name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "Users \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the ann", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "mentType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "tains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Sta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "tAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironme", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "btVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "obLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milli", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "tedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that mat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "setDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "(false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queue", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "LastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "tion of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "s started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ed \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "ed this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "es this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness cri", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "L of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "s asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPrioritie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "cIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Mo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "st of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "ypes associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "ames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "oliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ge used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "hich this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "f this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whet", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "s asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "rposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "his asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most rec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "source (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostLis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "me in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "eadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQuery", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "fferent name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of username", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "rceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ecords sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "e. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exist", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ls subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "f groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) noSQLSchemaDefinition \u00b6 Represents attributes for describing the key schema for the table and indexes. These attributes are specific to instances of CosmosMongoDBAccount (and all", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "the table and indexes. These attributes are specific to instances of CosmosMongoDBAccount (and all of its subtypes). cosmosMongoDBAccountConsistencyPolicy \u00b6 The consistency policy configured for the Cosmos MongoDB account. cosmosMongoDBAccountDocumentEndpoint \u00b6 The Document Endpoint URL for the Cosmos MongoDB account. cosmosMongoDBAccountEnableAutomaticFailover \u00b6 Indicates whether automatic failo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "mos MongoDB account. cosmosMongoDBAccountEnableAutomaticFailover \u00b6 Indicates whether automatic failover is enabled for the Cosmos MongoDB account. cosmosMongoDBAccountEnableMultipleWriteLocations \u00b6 Indicates whether multiple write locations are enabled for the Cosmos MongoDB account. cosmosMongoDBAccountEnablePartitionKeyMonitor \u00b6 Indicates whether partition key monitoring is enabled for the Cosmo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "countEnablePartitionKeyMonitor \u00b6 Indicates whether partition key monitoring is enabled for the Cosmos MongoDB account. cosmosMongoDBAccountInstanceId \u00b6 The unique identifier for the Cosmos MongoDB account. cosmosMongoDBAccountIsVirtualNetworkFilterEnabled \u00b6 Indicates whether the virtual network filter is enabled for the Cosmos MongoDB account. cosmosMongoDBAccountLocations \u00b6 The locations where th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "er is enabled for the Cosmos MongoDB account. cosmosMongoDBAccountLocations \u00b6 The locations where the Cosmos MongoDB account is available. cosmosMongoDBAccountMongoEndpoint \u00b6 The MongoDB connection endpoint for the Cosmos MongoDB account. cosmosMongoDBAccountPublicNetworkAccess \u00b6 The status of public network access for the Cosmos MongoDB account. cosmosMongoDBAccountReadLocations \u00b6 The read locati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "c network access for the Cosmos MongoDB account. cosmosMongoDBAccountReadLocations \u00b6 The read locations configured for the Cosmos MongoDB account. cosmosMongoDBAccountResourceGroup \u00b6 The resource group that contains the Cosmos MongoDB account. cosmosMongoDBAccountSubscriptionId \u00b6 The ID of the subscription to which the Cosmos MongoDB account belongs. cosmosMongoDBAccountType \u00b6 The type of the Cosm", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "ription to which the Cosmos MongoDB account belongs. cosmosMongoDBAccountType \u00b6 The type of the Cosmos MongoDB account, such as RU or VCORE. cosmosMongoDBAccountWriteLocations \u00b6 The write locations configured for the Cosmos MongoDB account. cosmosMongoDBDatabaseCount \u00b6 Number of databases in this Cosmos MongoDB account. Relationships \u00b6 Inherited relationships These relationships are inherited from", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "smos MongoDB account. Relationships \u00b6 Inherited relationships These relationships are inherited from CosmosMongoDBAccount 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "onField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "sset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "CIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "ct ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcess", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "p_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "dEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of CosmosMongoDBAccount (and all of its subtypes). cosmosMongoDBDatabases ( Cosmos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "ific to instances of CosmosMongoDBAccount (and all of its subtypes). cosmosMongoDBDatabases ( CosmosMongoDBDatabase ) \u00b6 Databases that exist within this account. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/cosmosmongodbaccount/", "title": "CosmosMongoDBAccount - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "On this page Before running the Amazon QuickSight crawler , you can run preflight checks to perform the necessary technical validations. The following preflight checks will be completed: Analysis view permission \u200b The ListAnalyses REST API is used to fetch the actual list of analyses for which the user has view permission. \u2705 Check successful. Analysis API is accessible. \u274c Check failed for listed a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/preflight-checks-for-amazon-quicksight", "title": "Preflight checks for Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ser has view permission. \u2705 Check successful. Analysis API is accessible. \u274c Check failed for listed analyses Folder view permission \u200b The ListFolders REST API is used to fetch the actual list of folders for which the user has view permission. \u2705 Check successful. Folder API is accessible. \u274c Check failed for listed folders Dashboard view permission \u200b The ListDashboards REST API is used to fetch the a", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/preflight-checks-for-amazon-quicksight", "title": "Preflight checks for Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ed for listed folders Dashboard view permission \u200b The ListDashboards REST API is used to fetch the actual list of dashboards for which the user has view permission. \u2705 Check successful. Dashboard API is accessible. \u274c Check failed for listed dashboards Dataset view permission \u200b The ListDataSets REST API is used to fetch the actual list of datasets for which the user has view permission. \u2705 Check succ", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/preflight-checks-for-amazon-quicksight", "title": "Preflight checks for Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "PI is used to fetch the actual list of datasets for which the user has view permission. \u2705 Check successful. Dataset API is accessible. \u274c Check failed for listed datasets Analysis view permission Folder view permission Dashboard view permission Dataset view permission", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/preflight-checks-for-amazon-quicksight", "title": "Preflight checks for Amazon QuickSight | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Crawl Salesforce Once you have configured the [Salesforce user permissions](/apps/connectors/crm/salesforce/how-tos/set-up-salesforce), you can establish a connection between Atlan and Salesforce. Does Atlan require an admin user in Salesforce? No. However, it is recommended that a Salesforce administrator establishes a [connection between Atlan and Salesforce](/apps/connectors/crm/salesforce/how-", "metadata": {"source_url": "https://docs.atlan.com/tags/salesforce", "title": "10 docs tagged with \"salesforce\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "strator establishes a [connection between Atlan and Salesforce](/apps/connectors/crm/salesforce/how-tos/set-up-salesforce). To learn more, see [here](/apps/connectors/crm/salesforce/troubleshooting/troubleshooting-salesforce-connectivity). Preflight checks for Salesforce Before [running the Salesforce crawler](/apps/connectors/crm/salesforce/how-tos/crawl-salesforce), you can run [preflight checks", "metadata": {"source_url": "https://docs.atlan.com/tags/salesforce", "title": "10 docs tagged with \"salesforce\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ce crawler](/apps/connectors/crm/salesforce/how-tos/crawl-salesforce), you can run [preflight checks](/product/connections/co. Set up client credentials flow Configure Salesforce for OAuth 2.0 client credentials authentication in Atlan. Set up JWT bearer flow Configure Salesforce for OAuth 2.0 JWT bearer authentication for Atlan. Set up Salesforce Learn about setting up Salesforce authentication f", "metadata": {"source_url": "https://docs.atlan.com/tags/salesforce", "title": "10 docs tagged with \"salesforce\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "earer authentication for Atlan. Set up Salesforce Learn about setting up Salesforce authentication for Atlan. Set up username-password flow Configure Salesforce username-password flow for Atlan integration. What does Atlan crawl from Amazon QuickSight? Atlan currently supports lineage for the Amazon QuickSight connector to the following data sources:. What does Atlan crawl from Salesforce? Atlan o", "metadata": {"source_url": "https://docs.atlan.com/tags/salesforce", "title": "10 docs tagged with \"salesforce\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "QuickSight connector to the following data sources:. What does Atlan crawl from Salesforce? Atlan only performs GET requests on these five endpoints:. Why does the description from Salesforce not show up in Atlan? Atlan supports extracting and displaying description metadata for your [Salesforce objects](/apps/connectors/crm/salesforce/references/what-does-atlan-crawl-from-salesforce).", "metadata": {"source_url": "https://docs.atlan.com/tags/salesforce", "title": "10 docs tagged with \"salesforce\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "DynamoDBGlobalSecondaryIndex \u00b6 Atlan DynamoDB Global Secondary Index Complete reference This is a complete reference for the DynamoDBGlobalSecondaryIndex object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of commo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "t with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DynamoDBGlobalSecondaryIndex inherits its attributes and relationships from these other types: classDiagram direction RL class DynamoDBGlobalSecondaryIndex link DynamoDBGlobalSecondaryIndex \"../dynamodbglobalsecondaryindex\" class DynamoDBSecondaryIndex { <<abstr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ynamoDBGlobalSecondaryIndex \"../dynamodbglobalsecondaryindex\" class DynamoDBSecondaryIndex { <<abstract>> } link DynamoDBSecondaryIndex \"../dynamodbsecondaryindex\" DynamoDBSecondaryIndex <|-- DynamoDBGlobalSecondaryIndex : extends class Table link Table \"../table\" Table <|-- DynamoDBSecondaryIndex : extends class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- Table : extends class Catalog { <<abs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "extends class SQL { <<abstract>> } link SQL \"../sql\" SQL <|-- Table : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class DynamoDB { <<abstract>> } link DynamoDB \"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "../referenceable\" Referenceable <|-- Asset : extends class DynamoDB { <<abstract>> } link DynamoDB \"../dynamodb\" DynamoDB <|-- DynamoDBSecondaryIndex : extends class NoSQL { <<abstract>> } link NoSQL \"../nosql\" NoSQL <|-- DynamoDB : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "talog <|-- NoSQL : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DynamoDBGlobalSecondaryIndex 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "lSecondaryIndex 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ap of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "tead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classificat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "(1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. noSQLSchemaDefinition \u00b6 Represents attributes for describing the key schema for the table and indexes. qualifiedName \u00b6 Unique name for this asset. This is typically a concaten", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "for the table and indexes. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connect", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "n asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ouncementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the Applica", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ser who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "aloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "hecks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ame of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milli", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "DbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "e saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread I", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "zed this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "bt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "erated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "tRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "e last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the j", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the j", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "et in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "he job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemantic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "n dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "saries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "identQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Mont", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "st of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "uses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedNa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "s asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of doma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "adable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable thr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "s hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that las", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "pdated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "icalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "edBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) U", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "tem. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "ry_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a differen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest q", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords sour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "sset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDet", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "tra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. vie", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) calculationViewName \u00b6 Simple name of the calculation view in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "is only used for certain asset types.) calculationViewName \u00b6 Simple name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. calculationViewQualifiedName \u00b6 Unique name of the calculation view in which this SQL asset exists, or empty if it does not exist within a calculation view. databaseName \u00b6 Simple name of the database in which this S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "does not exist within a calculation view. databaseName \u00b6 Simple name of the database in which this SQL asset exists, or empty if it does not exist within a database. databaseQualifiedName \u00b6 Unique name of the database in which this SQL asset exists, or empty if it does not exist within a database. isProfiled \u00b6 Whether this asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "sProfiled \u00b6 Whether this asset has been profiled (true) or not (false). lastProfiledAt \u00b6 Time (epoch) at which this asset was last profiled, in milliseconds. queryCount \u00b6 Number of times this asset has been queried. queryCountUpdatedAt \u00b6 Time (epoch) at which the query count was last updated, in milliseconds. queryUserCount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "liseconds. queryUserCount \u00b6 Number of unique users who have queried this asset. queryUserMap \u00b6 Map of unique users who have queried this asset to the number of times they have queried it. schemaName \u00b6 Simple name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. schemaQualifiedName \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "hema. schemaQualifiedName \u00b6 Unique name of the schema in which this SQL asset exists, or empty if it does not exist within a schema. tableName \u00b6 Simple name of the table in which this SQL asset exists, or empty if it does not exist within a table. tableQualifiedName \u00b6 Unique name of the table in which this SQL asset exists, or empty if it does not exist within a table. viewName \u00b6 Simple name of th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ch this SQL asset exists, or empty if it does not exist within a table. viewName \u00b6 Simple name of the view in which this SQL asset exists, or empty if it does not exist within a view. viewQualifiedName \u00b6 Unique name of the view in which this SQL asset exists, or empty if it does not exist within a view. dynamoDBPartitionKey \u00b6 Specifies the partition key of the DynamoDB Table/Index dynamoDBReadCapa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "iew. dynamoDBPartitionKey \u00b6 Specifies the partition key of the DynamoDB Table/Index dynamoDBReadCapacityUnits \u00b6 The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException dynamoDBSortKey \u00b6 Specifies the sort key of the DynamoDB Table/Index dynamoDBStatus \u00b6 Status of the DynamoDB Asset dynamoDBWriteCapacityUnits \u00b6 The maximum number of writes c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "oDBStatus \u00b6 Status of the DynamoDB Asset dynamoDBWriteCapacityUnits \u00b6 The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException alias \u00b6 Alias for this table. columnCount \u00b6 Number of columns in this table. externalLocation \u00b6 External location of this table, for example: an S3 object location. externalLocationFormat \u00b6 Format of the external location of this table", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "ample: an S3 object location. externalLocationFormat \u00b6 Format of the external location of this table, for example: JSON, CSV, PARQUET, etc. externalLocationRegion \u00b6 Region of the external location of this table, for example: S3 region. icebergCatalogName \u00b6 iceberg table catalog name (can be any user defined name) icebergCatalogSource \u00b6 iceberg table catalog type (glue, polaris, snowflake) icebergC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "defined name) icebergCatalogSource \u00b6 iceberg table catalog type (glue, polaris, snowflake) icebergCatalogTableName \u00b6 catalog table name (actual table name on the catalog side). icebergCatalogTableNamespace \u00b6 catalog table namespace (actual database name on the catalog side). icebergTableBaseLocation \u00b6 iceberg table base location inside the external volume. icebergTableType \u00b6 iceberg table type (m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "n \u00b6 iceberg table base location inside the external volume. icebergTableType \u00b6 iceberg table type (managed vs unmanaged) isPartitioned \u00b6 Whether this table is partitioned (true) or not (false). isQueryPreview \u00b6 Whether preview queries are allowed for this table (true) or not (false). isSharded \u00b6 Whether this table is a sharded table (true) or not (false). isTemporary \u00b6 Whether this table is tempor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "ther this table is a sharded table (true) or not (false). isTemporary \u00b6 Whether this table is temporary (true) or not (false). partitionCount \u00b6 Number of partitions in this table. partitionList \u00b6 List of partitions in this table. partitionStrategy \u00b6 Partition strategy for this table. queryPreviewConfig \u00b6 Configuration for preview queries. rowCount \u00b6 Number of rows in this table. sizeBytes \u00b6 Size o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20700}}, {"content": "fig \u00b6 Configuration for preview queries. rowCount \u00b6 Number of rows in this table. sizeBytes \u00b6 Size of this table, in bytes. tableExternalVolumeName \u00b6 external volume name for the table. tableRetentionTime \u00b6 Data retention time in days. tableType \u00b6 Type of the table. dynamoDBSecondaryIndexProjectionType \u00b6 Specifies attributes that are projected from the DynamoDB table into the index Relationships \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21000}}, {"content": "ype \u00b6 Specifies attributes that are projected from the DynamoDB table into the index Relationships \u00b6 Inherited relationships These relationships are inherited from DynamoDBGlobalSecondaryIndex 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21300}}, {"content": "\u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCerti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21600}}, {"content": "ract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 21900}}, {"content": "links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22200}}, {"content": "t is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22500}}, {"content": "es a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 E", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 22800}}, {"content": "odelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23100}}, {"content": "ut. outputFromSparkJobs ( SparkJob ) \u00b6 TBC dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 TBC dbtTests ( DbtTest ) \u00b6 TBC sqlDBTSources ( DbtSource ) \u00b6 TBC sqlDbtModels ( DbtModel ) \u00b6 TBC columns ( Column ) \u00b6 Columns that exist within this table. dimensions ( Table ) \u00b6 TBC facts ( Table ) \u00b6 TBC partitions ( TablePartition ) \u00b6 Partitions that exist within this table. queries ( Query ) \u00b6 Que", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23400}}, {"content": "TBC partitions ( TablePartition ) \u00b6 Partitions that exist within this table. queries ( Query ) \u00b6 Queries that access this table. atlanSchema ( Schema ) \u00b6 Schema in which this table exists. (1) Uses a different name in SDKs schema schema These relationships are specific to instances of DynamoDBGlobalSecondaryIndex (and all of its subtypes). dynamoDBTable ( DynamoDBTable ) \u00b6 TBC Was this page helpfu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 23700}}, {"content": "SecondaryIndex (and all of its subtypes). dynamoDBTable ( DynamoDBTable ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dynamodbglobalsecondaryindex/", "title": "DynamoDBGlobalSecondaryIndex - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 24000}}, {"content": "DbtTest \u00b6 Instance of a dbt test in Atlan. Complete reference This is a complete reference for the DbtTest object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DbtTest i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ngle-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DbtTest inherits its attributes and relationships from these other types: classDiagram direction RL class DbtTest link DbtTest \"../dbttest\" class Dbt { <<abstract>> } link Dbt \"../dbt\" Dbt <|-- DbtTest : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Dbt : extends class Asset {", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ds class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- Dbt : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DbtTest 's supertypes (shown above): typeName \u00b6 Type", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "properties These attributes are inherited from DbtTest 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "e \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanT", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "hed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be incon", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "s that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "sset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Q", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "Name \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo check", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "is asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in whic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the ar", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that mat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "t in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that material", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "LastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether doc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "e job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materiali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "t which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "s asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "unUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJob", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "able time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "sset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMoni", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "\u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "tatus of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certifica", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ficateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQuali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "nnectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "orType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset h", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "erface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantA", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "ent name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measur", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "stem. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "arehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "opular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "n SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "rceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a co", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) dbtAccountName \u00b6 TBC dbtAlias \u00b6 TBC dbtConnectionContext \u00b6 TBC dbtEnvironmentDbtVersion \u00b6 TBC dbtEnvironmentName \u00b6 TBC dbtJob", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "lias \u00b6 TBC dbtConnectionContext \u00b6 TBC dbtEnvironmentDbtVersion \u00b6 TBC dbtEnvironmentName \u00b6 TBC dbtJobLastRun \u00b6 TBC dbtJobName \u00b6 TBC dbtJobNextRun \u00b6 TBC dbtJobNextRunHumanized \u00b6 TBC dbtJobRuns \u00b6 List of latest DBT job runs across all environments dbtJobSchedule \u00b6 TBC dbtJobScheduleCronHumanized \u00b6 TBC dbtJobStatus \u00b6 TBC dbtMeta \u00b6 TBC dbtPackageName \u00b6 TBC dbtProjectName \u00b6 TBC dbtSemanticLayerProxyUrl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "dbtJobStatus \u00b6 TBC dbtMeta \u00b6 TBC dbtPackageName \u00b6 TBC dbtProjectName \u00b6 TBC dbtSemanticLayerProxyUrl \u00b6 TBC dbtTags \u00b6 TBC dbtUniqueId \u00b6 TBC These attributes are specific to instances of DbtTest (and all of its subtypes). dbtTestCompiledCode \u00b6 Compiled code of the test (when the test is defined using Python). dbtTestCompiledSQL \u00b6 Compiled SQL of the test. dbtTestError \u00b6 Error message in the case of s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ython). dbtTestCompiledSQL \u00b6 Compiled SQL of the test. dbtTestError \u00b6 Error message in the case of state being \"error\". dbtTestLanguage \u00b6 Language in which the test is written, for example: SQL or Python. dbtTestRawCode \u00b6 Raw code of the test (when the test is defined using Python). dbtTestRawSQL \u00b6 Raw SQL of the test. dbtTestState \u00b6 Test results. Can be one of, in order of severity, \"error\", \"fai", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "Raw SQL of the test. dbtTestState \u00b6 Test results. Can be one of, in order of severity, \"error\", \"fail\", \"warn\", \"pass\". dbtTestStatus \u00b6 Details of the results of the test. For errors, it reads \"ERROR\". Relationships \u00b6 Inherited relationships These relationships are inherited from DbtTest 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Ap", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "es: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "et. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. link", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "BC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "Product ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "lationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( Model", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "ch this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of DbtTest (and all of its subtypes). dbtModelColumns ( DbtModelColumn ) \u00b6 TBC dbtModels ( DbtModel ) \u00b6 TBC dbtSources ( DbtSource ) \u00b6 TBC sqlAssets ( SQL ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Tha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "ces ( DbtSource ) \u00b6 TBC sqlAssets ( SQL ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/dbttest/", "title": "DbtTest - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "On this page Eliminate the need for separate crawler configurations by using a single service principal to crawl metadata from all workspaces within a Databricks metastore. This guide walks you through configuring the necessary permissions to enable cross-workspace extraction. Important! Cross-workspace extraction isn't supported for REST API or JDBC extraction methods. Prerequisites \u200b Before you", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "pace extraction isn't supported for REST API or JDBC extraction methods. Prerequisites \u200b Before you begin, make sure you have: A Unity Catalog-enabled Databricks workspace Account admin access to create and manage service principals Workspace admin access to grant permissions across all target workspaces At least one active SQL warehouse in each workspace you intend to crawl Set up Databricks auth", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "paces At least one active SQL warehouse in each workspace you intend to crawl Set up Databricks authentication completed with one of the supported authentication methods System table extraction enabled for lineage and usage extraction Add service principal to all workspaces \u200b You must use a single, common service principal that has been granted access to all Databricks workspaces you intend to cra", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "common service principal that has been granted access to all Databricks workspaces you intend to crawl within the metastore. Log in to your Databricks account console as an account admin From the left menu, click Workspaces and select a workspace From the tabs along the top, click the Permissions tab In the upper right, click Add permissions In the Add permissions dialog: For User, group, or servi", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "b In the upper right, click Add permissions In the Add permissions dialog: For User, group, or service principal , select your service principal For Permission , select workspace User Click Add Repeat steps 2-5 for each workspace you intend to crawl Permissions required \u200b The service principal needs the following permissions on each workspace from which the you want Atlan to extract metadata and t", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "the following permissions on each workspace from which the you want Atlan to extract metadata and to enable cross-workspace extraction: CAN_USE on SQL warehouses in each workspace USE CATALOG on system catalog USE SCHEMA on system.access (for cross-workspace discovery) USE SCHEMA on system.information_schema SELECT on the following system tables: system.access.workspace_latest (for cross-workspac", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ion_schema SELECT on the following system tables: system.access.workspace_latest (for cross-workspace discovery) system.information_schema.catalogs system.information_schema.schemata system.information_schema.tables system.information_schema.columns system.information_schema.key_column_usage system.information_schema.table_constraints BROWSE on all catalogs you want to crawl Grant permissions \u200b Co", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "information_schema.table_constraints BROWSE on all catalogs you want to crawl Grant permissions \u200b Configure the necessary permissions for the service principal to access and extract metadata from all workspaces within the metastore. SQL workspace permissions: The service principal must have usage permissions on at least one active SQL warehouse within each workspace . The extractor uses the smalle", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "rmissions on at least one active SQL warehouse within each workspace . The extractor uses the smallest available warehouse to run its discovery queries. Via SQL Via UI Connect to your Databricks workspace using a SQL client or the SQL editor Run the following command for each workspace, replacing the placeholders: GRANT CAN_USE ON WAREHOUSE < warehouse_name > TO ` <service_principal_id> ` ; Replac", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "e placeholders: GRANT CAN_USE ON WAREHOUSE < warehouse_name > TO ` <service_principal_id> ` ; Replace <warehouse_name> with your actual warehouse name Replace <service_principal_id> with your service principal's application ID Example GRANT CAN_USE ON WAREHOUSE production - warehouse TO ` 12345678-1234-1234-1234-123456789012 ` ; Log in to your Databricks workspace as a workspace admin From the lef", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "234-1234-1234-123456789012 ` ; Log in to your Databricks workspace as a workspace admin From the left menu, click SQL Warehouses On the Compute page, for each SQL warehouse, click the 3-dot icon and then click Permissions In the Manage permissions dialog: In the Type to add multiple users or groups field, search for and select your service principal Select Can use permission Click Add to assign th", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "field, search for and select your service principal Select Can use permission Click Add to assign the permission System table permissions: Access to the system schema is essential for workspace and lineage discovery. Via SQL Via UI Connect to your Databricks workspace using a SQL client or the SQL editor Grant system catalog access: GRANT USE CATALOG ON CATALOG system TO ` <service_principal_id> `", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "ditor Grant system catalog access: GRANT USE CATALOG ON CATALOG system TO ` <service_principal_id> ` ; Grant schema-level permissions: GRANT USE SCHEMA ON SCHEMA system . access TO ` <service_principal_id> ` ; GRANT USE SCHEMA ON SCHEMA system . information_schema TO ` <service_principal_id> ` ; Grant SELECT permissions on required system tables: -- For cross-workspace discovery GRANT SELECT ON TA", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "nt SELECT permissions on required system tables: -- For cross-workspace discovery GRANT SELECT ON TABLE system . access . workspace_latest TO ` <service_principal_id> ` ; -- For metadata extraction GRANT SELECT ON TABLE system . information_schema . catalogs TO ` <service_principal_id> ` ; GRANT SELECT ON TABLE system . information_schema . schemata TO ` <service_principal_id> ` ; GRANT SELECT ON", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ECT ON TABLE system . information_schema . schemata TO ` <service_principal_id> ` ; GRANT SELECT ON TABLE system . information_schema . tables TO ` <service_principal_id> ` ; GRANT SELECT ON TABLE system . information_schema . columns TO ` <service_principal_id> ` ; GRANT SELECT ON TABLE system . information_schema . key_column_usage TO ` <service_principal_id> ` ; GRANT SELECT ON TABLE system . i", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "formation_schema . key_column_usage TO ` <service_principal_id> ` ; GRANT SELECT ON TABLE system . information_schema . table_constraints TO ` <service_principal_id> ` ; Replace <service_principal_id> with your service principal's application ID Example GRANT USE CATALOG ON CATALOG system TO ` 12345678-1234-1234-1234-123456789012 ` ; GRANT USE SCHEMA ON SCHEMA system . access TO ` 12345678-1234-12", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "678-1234-1234-1234-123456789012 ` ; GRANT USE SCHEMA ON SCHEMA system . access TO ` 12345678-1234-1234-1234-123456789012 ` ; GRANT USE SCHEMA ON SCHEMA system . information_schema TO ` 12345678-1234-1234-1234-123456789012 ` ; GRANT SELECT ON TABLE system . access . workspace_latest TO ` 12345678-1234-1234-1234-123456789012 ` ; GRANT SELECT ON TABLE system . information_schema . catalogs TO ` 12345", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "4-1234-1234-123456789012 ` ; GRANT SELECT ON TABLE system . information_schema . catalogs TO ` 12345678-1234-1234-1234-123456789012 ` ; Log in to your Databricks workspace as a workspace admin From the left menu, click Catalog In the Catalog Explorer , click on the system catalog Click the Permissions tab and then click Grant In the Grant permissions dialog: Under Principals , select your service", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "ns tab and then click Grant In the Grant permissions dialog: Under Principals , select your service principal Under Privileges , check USE CATALOG Click Grant to apply the permissions Navigate to system > access Click the Permissions tab and then click Grant In the Grant permissions dialog: Under Principals , select your service principal Under Privileges , check USE SCHEMA Click Grant Repeat for", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "incipals , select your service principal Under Privileges , check USE SCHEMA Click Grant Repeat for system > information_schema For each required system table, navigate to the table and grant SELECT permissions: system.access.workspace_latest system.information_schema.catalogs system.information_schema.schemata system.information_schema.tables system.information_schema.columns system.information_s", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "ema.schemata system.information_schema.tables system.information_schema.columns system.information_schema.key_column_usage system.information_schema.table_constraints Asset permissions: The service principal requires BROWSE permissions on all catalogs you want to crawl. BROWSE permission enables the service principal to see and read metadata for all data assets within the catalog, automatically gr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "service principal to see and read metadata for all data assets within the catalog, automatically granting access to all schemas and tables. Important! For private catalogs, grant permissions from each workspace. For public catalogs, grant from any workspace. Only visible in the system tables when the service principal has BROWSE privileges on individual catalogs. Via SQL Via UI Connect to your Da", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "he service principal has BROWSE privileges on individual catalogs. Via SQL Via UI Connect to your Databricks workspace using a SQL client or the SQL editor Grant BROWSE permissions on each catalog you want to crawl: GRANT BROWSE ON CATALOG < catalog_name > TO ` <service_principal_id> ` ; Replace <catalog_name> with your actual catalog name Replace <service_principal_id> with your service principal", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "talog_name> with your actual catalog name Replace <service_principal_id> with your service principal's application ID Example GRANT BROWSE ON CATALOG main TO ` 12345678-1234-1234-1234-123456789012 ` ; Log in to your Databricks workspace as a workspace admin From the left menu, click Catalog In the Catalog Explorer , navigate to the catalog you want to grant permissions on (for example, main ) Clic", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "atalog Explorer , navigate to the catalog you want to grant permissions on (for example, main ) Click the Permissions tab and then click Grant In the Grant permissions dialog: Under Principals , select your service principal Under Privileges , check BROWSE Click Grant to apply the permissions Repeat steps 3-5 for each catalog you want to crawl in Atlan Need help? \u200b Check Cross-workspace extraction", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "steps 3-5 for each catalog you want to crawl in Atlan Need help? \u200b Check Cross-workspace extraction setup FAQ for common questions about cross-workspace extraction Check Troubleshooting cross-workspace extraction issues for common issues Contact Atlan support for help with setup or integration Next steps \u200b Crawl Databricks - Set up and run a workflow to extract metadata from your Databricks insta", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "steps \u200b Crawl Databricks - Set up and run a workflow to extract metadata from your Databricks instance using direct, offline, or agent extraction methods Prerequisites Add service principal to all workspaces Permissions required Grant permissions Need help? Next steps", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/set-up-cross-workspace-extraction", "title": "Set up cross-workspace extraction | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "DataProductVisibility \u00b6 Visibility of a data product. Complete reference This is a complete reference for the DataProductVisibility enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 Private Pro", "metadata": {"source_url": "https://developer.atlan.com/models/enums/dataproductvisibility/", "title": "DataProductVisibility - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "es. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 Private Protected Public Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/dataproductvisibility/", "title": "DataProductVisibility - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Column Level Lineage Data lineage shows the upstream and downstream dependencies of an asset. For a more granular view of these dependencies, you can view column-level lineage. Data and metadata persistence Learn about data and metadata persistence. Download and export lineage Understanding the flow of data from the source to its destination is a critical need for many organizations. To help you b", "metadata": {"source_url": "https://docs.atlan.com/tags/upstream-dependencies", "title": "13 docs tagged with \"upstream-dependencies\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "of data from the source to its destination is a critical need for many organizations. To help you build trust in your data assets, Atlan allows you to [view](#view-impacted-assets), [download](#download-lineage), and [export](#export-impacted-assets) your impacted assets and share it with others in your organization. Download impacted assets in Google Sheets Once you've [connected Atlan with Goog", "metadata": {"source_url": "https://docs.atlan.com/tags/upstream-dependencies", "title": "13 docs tagged with \"upstream-dependencies\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "your organization. Download impacted assets in Google Sheets Once you've [connected Atlan with Google Sheets](/product/integrations/collaboration/spreadsheets/how-tos/integrate-atlan-with-google-sheets), you can download impacted assets in Google Sheets. This can help you assess the downstream impact of any changes made to an upstream asset for [impact analysis](/product/capabilities/lineage/conc", "metadata": {"source_url": "https://docs.atlan.com/tags/upstream-dependencies", "title": "13 docs tagged with \"upstream-dependencies\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ct of any changes made to an upstream asset for [impact analysis](/product/capabilities/lineage/concepts/what-is-lineage#impact-analysis). How can Atlan generate upstream lineage from the data warehouse layer? Learn about how can atlan generate upstream lineage from the data warehouse layer?. How to obtain upstream lineage if I connect to a Tableau data asset? Learn about how to obtain upstream li", "metadata": {"source_url": "https://docs.atlan.com/tags/upstream-dependencies", "title": "13 docs tagged with \"upstream-dependencies\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "obtain upstream lineage if I connect to a Tableau data asset? Learn about how to obtain upstream lineage if i connect to a tableau data asset?. Lineage Generator (no transformations) Learn how Atlan can generate upstream lineage from the data warehouse layer, including configuration options and behavior. Troubleshooting Amazon MSK connectivity Learn about troubleshooting amazon msk connectivity.", "metadata": {"source_url": "https://docs.atlan.com/tags/upstream-dependencies", "title": "13 docs tagged with \"upstream-dependencies\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "avior. Troubleshooting Amazon MSK connectivity Learn about troubleshooting amazon msk connectivity. Troubleshooting Microsoft Power BI connectivity Learn about troubleshooting microsoft power bi connectivity. Troubleshooting MongoDB connectivity Learn about troubleshooting mongodb connectivity. Troubleshooting Qlik Sense Cloud connectivity Learn about troubleshooting qlik sense cloud connectivity.", "metadata": {"source_url": "https://docs.atlan.com/tags/upstream-dependencies", "title": "13 docs tagged with \"upstream-dependencies\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "bleshooting Qlik Sense Cloud connectivity Learn about troubleshooting qlik sense cloud connectivity. Troubleshooting ThoughtSpot connectivity Learn about troubleshooting thoughtspot connectivity. What do the numbers in lineage view mean? Learn about what do the numbers in lineage view mean?.", "metadata": {"source_url": "https://docs.atlan.com/tags/upstream-dependencies", "title": "13 docs tagged with \"upstream-dependencies\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "Core model \u00b6 Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand developing with Atlan. For that, we would suggest starting with either: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. These are the core model elements in", "metadata": {"source_url": "https://developer.atlan.com/models/core/", "title": "Core - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ns \u2014 walkthroughs of common multi-step implementation patterns. These are the core model elements in Atlan from which everything else derives. classDiagram direction RL class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" class Asset { <<abstract>> } link Asset \"../entities/asset\" Referenceable <|-- Asset : extends class Connection link Connection \"../entities/connec", "metadata": {"source_url": "https://developer.atlan.com/models/core/", "title": "Core - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ities/asset\" Referenceable <|-- Asset : extends class Connection link Connection \"../entities/connection\" Asset <|-- Connection : extends class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Asset <|-- Catalog : extends class AccessControl { <<abstract>> } link AccessControl \"../accesscontrol\" Asset <|-- AccessControl : extends class Persona link Persona \"../entities/persona\" AccessCo", "metadata": {"source_url": "https://developer.atlan.com/models/core/", "title": "Core - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ontrol\" Asset <|-- AccessControl : extends class Persona link Persona \"../entities/persona\" AccessControl <|-- Persona : extends class Purpose link Purpose \"../entities/purpose\" AccessControl <|-- Purpose : extends class Tag { <<abstract>> } link Tag \"../entities/tag\" Catalog <|-- Tag : extends class AuthPolicy link AuthPolicy \"../entities/authpolicy\" Asset <|-- AuthPolicy : extends class AuthServ", "metadata": {"source_url": "https://developer.atlan.com/models/core/", "title": "Core - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "s AuthPolicy link AuthPolicy \"../entities/authpolicy\" Asset <|-- AuthPolicy : extends class AuthService link AuthService \"../entities/authservice\" Asset <|-- AuthService : extends class WorkflowRun link WorkflowRun \"../entities/workflowrun\" Asset <|-- WorkflowRun : extends class Task link Task \"../entities/task\" Asset <|-- Task : extends Was this page helpful? Thanks for your feedback! Thanks for", "metadata": {"source_url": "https://developer.atlan.com/models/core/", "title": "Core - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ntities/task\" Asset <|-- Task : extends Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/core/", "title": "Core - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "On this page Once you have set up the databricks-extractor tool , you can extract lineage from your on-premises Databricks instances by completing the following steps. Run databricks-extractor \u200b To extract lineage for a specific Databricks connection using the databricks-extractor tool: Log into the server with Docker Compose installed. Change to the directory containing the compose file. Run Dock", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/extract-on-premises-databricks-lineage", "title": "extract on-premises Databricks lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "server with Docker Compose installed. Change to the directory containing the compose file. Run Docker Compose: sudo docker-compose up <connection-name> (Replace <connection-name> with the name of the connection from the services section of the compose file.) (Optional) Review generated files \u200b The databricks-extractor tool will generate many folders with JSON files for each service . For example:", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/extract-on-premises-databricks-lineage", "title": "extract on-premises Databricks lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "databricks-extractor tool will generate many folders with JSON files for each service . For example: extracted-lineage extracted-query-history (if EXTRACT_QUERY_HISTORY is set to true) You can inspect the lineage and usage metadata and make sure it is acceptable for providing metadata to Atlan. Upload generated files to S3 \u200b To provide Atlan access to the extracted lineage and usage metadata, you", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/extract-on-premises-databricks-lineage", "title": "extract on-premises Databricks lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ad generated files to S3 \u200b To provide Atlan access to the extracted lineage and usage metadata, you will need to upload the metadata to an S3 bucket. Did you know? We recommend uploading to the same S3 bucket as Atlan uses to avoid access issues. Reach out to your Data Success Manager to get the details of your Atlan bucket. To create your own bucket, refer to the Create your own S3 bucket section", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/extract-on-premises-databricks-lineage", "title": "extract on-premises Databricks lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ails of your Atlan bucket. To create your own bucket, refer to the Create your own S3 bucket section of the dbt documentation. (The steps will be exactly the same.) To upload the metadata to S3: Ensure that all files for a particular connection have the same prefix. For example, output/databricks-lineage-example/extracted-lineage/result-0.json , output/databricks-lineage-example/extracted-query-hi", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/extract-on-premises-databricks-lineage", "title": "extract on-premises Databricks lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "neage-example/extracted-lineage/result-0.json , output/databricks-lineage-example/extracted-query-history/result-0.json , and so on. Upload the files to the S3 bucket using your preferred method. For example, to upload all files using the AWS CLI : aws s3 cp output/databricks-lineage-example s3://my-bucket/metadata/databricks-lineage-example --recursive Extract lineage in Atlan \u200b Once you have ext", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/extract-on-premises-databricks-lineage", "title": "extract on-premises Databricks lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "-bucket/metadata/databricks-lineage-example --recursive Extract lineage in Atlan \u200b Once you have extracted lineage on-premises and uploaded the results to S3, you can extract lineage in Atlan: How to extract lineage and usage from Databricks Be sure to select Offline for the Extraction method . Run databricks-extractor (Optional) Review generated files Upload generated files to S3 Extract lineage", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/extract-on-premises-databricks-lineage", "title": "extract on-premises Databricks lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "databricks-extractor (Optional) Review generated files Upload generated files to S3 Extract lineage in Atlan", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/databricks/how-tos/extract-on-premises-databricks-lineage", "title": "extract on-premises Databricks lineage | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "MCIncident \u00b6 Instance of a Monte Carlo incident in Atlan. Complete reference This is a complete reference for the MCIncident object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation p", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "mic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. MCIncident inherits its attributes and relationships from these other types: classDiagram direction RL class MCIncident link MCIncident \"../mcincident\" class MonteCarlo { <<abstract>> } link MonteCarlo \"../montecarlo\" MonteCarlo <|-- MCIncident : extends class DataQuality { <<abstract>> } l", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "MonteCarlo \"../montecarlo\" MonteCarlo <|-- MCIncident : extends class DataQuality { <<abstract>> } link DataQuality \"../dataquality\" DataQuality <|-- MonteCarlo : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- DataQuality : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "et \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from MCIncident 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom met", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "rent name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. creat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "er or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Ins", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "letion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "es Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background ta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "t \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 To", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "un via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialize", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whethe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "e last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "t. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false).", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ns were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "is asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": ". assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "\u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that mat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "alized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "f the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "hing under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "FreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "low in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "s asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncide", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ssetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was l", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "r this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorS", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "set. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "\u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to repres", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "s \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "UpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "e of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. display", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "xample as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "he UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerU", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ay of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in millisecon", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": ". sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "astReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different na", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_rea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "at accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "lar_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a differen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "RecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "yRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "ead this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "sed to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "s asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "rkspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a col", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ly used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) mcAssetQualifiedNames \u00b6 List of unique names of assets that are part of this Monte Carlo asset. mcLabels \u00b6 List of labels for this Monte Carlo asset. These attributes are specific to instances of MCIncident (and all of its subtypes). mcIncidentId", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "et. These attributes are specific to instances of MCIncident (and all of its subtypes). mcIncidentId \u00b6 Identifier of this incident, from Monte Carlo. mcIncidentPriority \u00b6 Priority of this incident inherited from monitor. mcIncidentSeverity \u00b6 Severity of this incident. mcIncidentState \u00b6 State of this incident. mcIncidentSubTypes \u00b6 Subtypes of this incident. mcIncidentType \u00b6 Type of this incident. m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "incident. mcIncidentSubTypes \u00b6 Subtypes of this incident. mcIncidentType \u00b6 Type of this incident. mcIncidentWarehouse \u00b6 Name of this incident's warehouse. Relationships \u00b6 Inherited relationships These relationships are inherited from MCIncident 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. appl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "nedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "set is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationship", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "obs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC Thes", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "\u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of MCIncident (and all of its subtypes). mcIncidentAssets ( Asset ) \u00b6 TBC mcMonitor ( MCMonitor ) \u00b6 Monitor in which this incident exists. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "ul? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/mcincident/", "title": "MCIncident - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "On this page Overview: Catalog Google BigQuery projects, datasets, tables, and views in Atlan. Gain visibility into lineage, usage, and governance for your cloud data warehouse assets. Get started \u200b Follow these steps to connect and catalog Google BigQuery assets in Atlan: Set up the connector Crawl Google BigQuery assets Guides \u200b Mine Google BigQuery : Extract query history and build lineage for", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery", "title": "Google BigQuery | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "Google BigQuery assets Guides \u200b Mine Google BigQuery : Extract query history and build lineage for your BigQuery assets. Enable SSO for Google BigQuery : Set up SSO authentication for BigQuery connections. Manage Google BigQuery tags : Configure and manage tags and policy tags in BigQuery. References \u200b What does Atlan crawl from Google BigQuery : Learn about the BigQuery assets and metadata that", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery", "title": "Google BigQuery | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "es \u200b What does Atlan crawl from Google BigQuery : Learn about the BigQuery assets and metadata that Atlan discovers and catalogs. Preflight checks for Google BigQuery : Verify prerequisites before setting up the Google BigQuery connector. Troubleshooting \u200b Troubleshooting connectivity : Resolve common Google BigQuery connection issues and errors. Get started Guides References Troubleshooting", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/google-bigquery", "title": "Google BigQuery | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Azure \u00b6 Base class for Azure assets. classDiagram direction RL class ADLS { <<abstract>> } link ADLS \"../adls\" class ObjectStore { <<abstract>> } link ObjectStore \"../entities/objectstore\" ObjectStore <|-- ADLS : extends class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Catalog <|-- ObjectStore : extends class Asset { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog", "metadata": {"source_url": "https://developer.atlan.com/models/azure/", "title": "Microsoft Azure - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ObjectStore : extends class Asset { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Referenceable <|-- Asset : extends class Azure { <<abstract>> } link Azure \"../azure\" Azure <|-- ADLS : extends class Cloud { <<abstract>> } link Cloud \"../entities/cloud\" Cloud <|-- Azure : extends Asset", "metadata": {"source_url": "https://developer.atlan.com/models/azure/", "title": "Microsoft Azure - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "xtends class Cloud { <<abstract>> } link Cloud \"../entities/cloud\" Cloud <|-- Azure : extends Asset <|-- Cloud : extends class ADLSAccount link ADLSAccount \"../entities/adlsaccount\" ADLS <|-- ADLSAccount : extends class ADLSContainer link ADLSContainer \"../entities/adlscontainer\" ADLS <|-- ADLSContainer : extends class ADLSObject link ADLSObject \"../entities/adlsobject\" ADLS <|-- ADLSObject : exte", "metadata": {"source_url": "https://developer.atlan.com/models/azure/", "title": "Microsoft Azure - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "iner : extends class ADLSObject link ADLSObject \"../entities/adlsobject\" ADLS <|-- ADLSObject : extends class Kafka { <<abstract>> } link Kafka \"../entities/kafka\" class EventStore { <<abstract>> } link EventStore \"../entities/eventstore\" EventStore <|-- Kafka : extends Catalog <|-- EventStore : extends class AzureEventHub link AzureEventHub \"../entities/azureeventhub\" class KafkaTopic link KafkaT", "metadata": {"source_url": "https://developer.atlan.com/models/azure/", "title": "Microsoft Azure - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ends class AzureEventHub link AzureEventHub \"../entities/azureeventhub\" class KafkaTopic link KafkaTopic \"../entities/kafkatopic\" Kafka <|-- KafkaTopic : extends KafkaTopic <|-- AzureEventHub : extends class KafkaConsumerGroup link KafkaConsumerGroup \"../entities/kafkaconsumergroup\" Kafka <|-- KafkaConsumerGroup : extends class AzureEventHubConsumerGroup link AzureEventHubConsumerGroup \"../entitie", "metadata": {"source_url": "https://developer.atlan.com/models/azure/", "title": "Microsoft Azure - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ConsumerGroup : extends class AzureEventHubConsumerGroup link AzureEventHubConsumerGroup \"../entities/azureeventhubconsumergroup\" KafkaConsumerGroup <|-- AzureEventHubConsumerGroup : extends Properties \u00b6 These attributes are specific to instances of Azure (and all of its subtypes). adlsAccountSecondaryLocation \u00b6 Secondary location of the ADLS account. azureLocation \u00b6 Location of this asset in Azur", "metadata": {"source_url": "https://developer.atlan.com/models/azure/", "title": "Microsoft Azure - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "aryLocation \u00b6 Secondary location of the ADLS account. azureLocation \u00b6 Location of this asset in Azure. azureResourceId \u00b6 Resource identifier of this asset in Azure. azureTags \u00b6 Tags that have been applied to this asset in Azure. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back t", "metadata": {"source_url": "https://developer.atlan.com/models/azure/", "title": "Microsoft Azure - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ck! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/azure/", "title": "Microsoft Azure - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "KafkaConsumerGroup \u00b6 Instance of a Kafka ConsumerGroup in Atlan. These group consumers of topics in Kafka. Complete reference This is a complete reference for the KafkaConsumerGroup object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "n, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. KafkaConsumerGroup inherits its attributes and relationships from these other types: classDiagram direction RL class KafkaConsumerGroup link KafkaConsumerGroup \"../kafkaconsumergroup\" class Kafka { <<abstract>> } link Kafka \"../kafka\"", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "p link KafkaConsumerGroup \"../kafkaconsumergroup\" class Kafka { <<abstract>> } link Kafka \"../kafka\" Kafka <|-- KafkaConsumerGroup : extends class EventStore { <<abstract>> } link EventStore \"../eventstore\" EventStore <|-- Kafka : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- EventStore : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "log <|-- EventStore : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from KafkaConsumerGroup 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "merGroup 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ustom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that create", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ee the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "pdated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "he asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": ".) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ied JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnom", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "es. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtE", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ronmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job tha", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "ssetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "tRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitB", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ser who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the las", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": ") or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent bei", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "etDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "n dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "nHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "terialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materializ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "terializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Fresh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "Url \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last up", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "r of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentP", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": ". assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 Li", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ies \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "cident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorSchedu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "alifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids gov", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": ". assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ve message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection throu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "hrough which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "e name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineag", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "inked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (fals", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "I (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "ized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-comp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "splay purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "ta for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComput", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "erent name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "ses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "t accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "p_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 N", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "ed this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ed_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "\u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of KafkaConsumerGroup (and all of its subtypes). kafkaConsumerGroupMemberCount \u00b6 Number of members in this consumer group. kafka", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "ll of its subtypes). kafkaConsumerGroupMemberCount \u00b6 Number of members in this consumer group. kafkaConsumerGroupTopicConsumptionProperties \u00b6 List of consumption properties for Kafka topics, for this consumer group. kafkaTopicNames \u00b6 Simple names of the topics consumed by this consumer group. kafkaTopicQualifiedNames \u00b6 Unique names of the topics consumed by this consumer group. Relationships \u00b6 Inh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "opicQualifiedNames \u00b6 Unique names of the topics consumed by this consumer group. Relationships \u00b6 Inherited relationships These relationships are inherited from KafkaConsumerGroup 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataCon", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "t version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "\u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implem", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": ") \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of KafkaConsumerGroup (an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "SparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of KafkaConsumerGroup (and all of its subtypes). kafkaTopics ( KafkaTopic ) \u00b6 Topics consumed by this consumer group. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/kafkaconsumergroup/", "title": "KafkaConsumerGroup - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "atlas_operation \u00b6 TBC Complete reference This is a complete reference for the atlas_operation enumeration in Atlan, showing all of its possible values. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Valid values \u00b6 OTHERS PURGE EXPORT IMPORT IMPORT_DELETE_REPL TYP", "metadata": {"source_url": "https://developer.atlan.com/models/enums/atlas_operation/", "title": "atlas_operation - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "multi-step implementation patterns. Valid values \u00b6 OTHERS PURGE EXPORT IMPORT IMPORT_DELETE_REPL TYPE_DEF_CREATE TYPE_DEF_UPDATE TYPE_DEF_DELETE SERVER_START SERVER_STATE_ACTIVE Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/enums/atlas_operation/", "title": "atlas_operation - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "AzureTag \u00b6 Detailed information about an Azure tag. Complete reference This is a complete reference for the AzureTag struct in Atlan, showing all of its embedded properties. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Embedded properties \u00b6 These are the attrib", "metadata": {"source_url": "https://developer.atlan.com/models/structs/azuretag/", "title": "AzureTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "alkthroughs of common multi-step implementation patterns. Embedded properties \u00b6 These are the attributes embedded within each instance of the AzureTag struct in an asset: azureTagKey \u00b6 Key of the Azure tag. azureTagValue \u00b6 Value for the Azure tag. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more", "metadata": {"source_url": "https://developer.atlan.com/models/structs/azuretag/", "title": "AzureTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "nks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/structs/azuretag/", "title": "AzureTag - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "On this page Who can do this? You will need your Sisense administrator to complete these steps - you may not have access yourself. Atlan supports the basic authentication method for fetching metadata from Sisense. This method uses a username and password to fetch metadata. Note that the Sisense connector does not support Sisense for Cloud Data Teams, formerly Periscope Data. Create new user in Sis", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/how-tos/set-up-sisense", "title": "Set up Sisense | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ector does not support Sisense for Cloud Data Teams, formerly Periscope Data. Create new user in Sisense \u200b Did you know? Atlan does not make any API requests or queries that will update the objects in your Sisense environment. You will need to create a new user in your Sisense instance and assign the Data Admin role to the new user for integrating with Atlan. While Atlan can crawl all other Sisens", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/how-tos/set-up-sisense", "title": "Set up Sisense | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "e Data Admin role to the new user for integrating with Atlan. While Atlan can crawl all other Sisense asset types with the Viewer role, the Data Admin role is required to crawl and generate lineage for data model tables . Atlan uses the Datamodels API to crawl data models and data model tables from Sisense. The Viewer role does not provide access to data models. To create a new user for crawling S", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/how-tos/set-up-sisense", "title": "Set up Sisense | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Sisense. The Viewer role does not provide access to data models. To create a new user for crawling Sisense : Log in to your Sisense instance with the Admin role. From the tabs along the top, click Admin . On the Admin page, in the System Management box, click Users . From the top right of the Users page, click + Users to add a new user. In the Add Users dialog, enter the following details: For Ema", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/how-tos/set-up-sisense", "title": "Set up Sisense | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "page, click + Users to add a new user. In the Add Users dialog, enter the following details: For Email , enter an email address for the new user - this will be the username for authenticating the connection in Atlan . (Optional) For First Name and Last Name , enter a first and last name for the new user - for example, Atlan_integration . For Role , click the role dropdown and then click Data Admin", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/how-tos/set-up-sisense", "title": "Set up Sisense | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "user - for example, Atlan_integration . For Role , click the role dropdown and then click Data Admin to assign that role to the new user. Toggle on Define Password , and for Set Password , set a password for the new user. Confirm the password in the next step. Click Save to complete new user creation. Create new user in Sisense", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sisense/how-tos/set-up-sisense", "title": "Set up Sisense | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "On this page Overview: Catalog Microsoft Azure Synapse Analytics workspaces, pools, databases, and tables in Atlan. Gain visibility into lineage, usage, and governance for your Azure data warehouse assets. Get started \u200b Follow these steps to connect and catalog Microsoft Azure Synapse Analytics assets in Atlan: Set up the connector Crawl Microsoft Azure Synapse Analytics assets Guides \u200b Mine Micro", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/microsoft-azure-synapse-analytics", "title": "Microsoft Azure Synapse Analytics | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ts in Atlan: Set up the connector Crawl Microsoft Azure Synapse Analytics assets Guides \u200b Mine Microsoft Azure Synapse Analytics : Extract query history and build lineage for your Synapse Analytics assets. Set up on-premises Microsoft Azure Synapse Analytics miner access : Configure Atlan to mine query history from on-premises Synapse Analytics environments. References \u200b What does Atlan crawl from", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/microsoft-azure-synapse-analytics", "title": "Microsoft Azure Synapse Analytics | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ery history from on-premises Synapse Analytics environments. References \u200b What does Atlan crawl from Microsoft Azure Synapse Analytics : Learn about the Synapse Analytics assets and metadata that Atlan discovers and catalogs. What lineage does Atlan extract from Microsoft Azure Synapse Analytics : Learn about supported lineage extraction for Synapse Analytics assets. Preflight checks for Microsoft", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/microsoft-azure-synapse-analytics", "title": "Microsoft Azure Synapse Analytics | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "earn about supported lineage extraction for Synapse Analytics assets. Preflight checks for Microsoft Azure Synapse Analytics : Verify prerequisites before setting up the Microsoft Azure Synapse Analytics connector. Get started Guides References", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/microsoft-azure-synapse-analytics", "title": "Microsoft Azure Synapse Analytics | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Catalog \u00b6 Base class for catalog assets. Catalog assets include any asset that can participate in lineage. Complete reference This is a complete reference for the Catalog object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walk", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. Catalog inherits its attributes and relationships from these other types: classDiagram direction RL class Catalog { <<abstract>> } link Catalog \"../catalog\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "../catalog\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from Catalog 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifica", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata F", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "teHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isInco", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "erent name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Un", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "sed, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of gr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "nt's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detai", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last up", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "nouncement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "licationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality f", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "atus of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "t \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "f the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "th \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobL", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from wh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "csGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materia", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "LastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRun", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "\u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-reada", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that mate", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpda", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "otal duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtP", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "er proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "DbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Car", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident st", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "ident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSync", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "cRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification wa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "rther detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is access", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "cessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has li", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "ct \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowCh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "itable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "t \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGrou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "e is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "Unit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "yComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "rdList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "rds source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopU", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "es a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "serList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) Relationships \u00b6 Inherited relationships These relationships are inherited from Catalog 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Appl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": ": anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": ". (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is l", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "oduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "tionshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos These relationships are specific to instances of Catalog (and all of its subtypes). inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset prov", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "o which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputF", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/catalog/", "title": "Catalog - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "Apache Airflow model \u00b6 Base class for Apache Airflow assets. Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand developing with Atlan. For that, we would suggest starting with either: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementatio", "metadata": {"source_url": "https://developer.atlan.com/models/airflow/", "title": "Airflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. classDiagram direction RL class Airflow { <<abstract>> } link Airflow \"../airflow\" class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Catalog <|-- Airflow : extends class Asset { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog : extends class Referenceable", "metadata": {"source_url": "https://developer.atlan.com/models/airflow/", "title": "Airflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "set { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Referenceable <|-- Asset : extends class AirflowDag link AirflowDag \"../entities/airflowdag\" Airflow <|-- AirflowDag : extends class AirflowTask link AirflowTask \"../entities/airflowtask\" Airflow <|-- AirflowTask : extends Properties \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/airflow/", "title": "Airflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "rflowTask link AirflowTask \"../entities/airflowtask\" Airflow <|-- AirflowTask : extends Properties \u00b6 These attributes are specific to instances of Airflow (and all of its subtypes). airflowRunEndTime \u00b6 End time of the run. airflowRunName \u00b6 Name of the run. airflowRunOpenLineageState \u00b6 State of the run in OpenLineage. airflowRunOpenLineageVersion \u00b6 Version of the run in OpenLineage. airflowRunStart", "metadata": {"source_url": "https://developer.atlan.com/models/airflow/", "title": "Airflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "un in OpenLineage. airflowRunOpenLineageVersion \u00b6 Version of the run in OpenLineage. airflowRunStartTime \u00b6 Start time of the run. airflowRunType \u00b6 Type of the run. airflowRunVersion \u00b6 Version of the run in Airflow. airflowTags \u00b6 Tags assigned to the asset in Airflow. Relationships \u00b6 The following illustrates how the various S3 objects inter-relate with each other: erDiagram Connection ||..o{ Airfl", "metadata": {"source_url": "https://developer.atlan.com/models/airflow/", "title": "Airflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "lustrates how the various S3 objects inter-relate with each other: erDiagram Connection ||..o{ AirflowDag : \"\" AirflowDag ||--o{ AirflowTask : airflowTasks Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/airflow/", "title": "Airflow - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "Anomalo model \u00b6 Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand how to manage Anomalo assets. These model elements all deal with Anomalo constructs. classDiagram direction RL class Anomalo { <<abstract>> } class DataQuality { <<abstract>> } link DataQuality \"../entities/dataquality\" DataQuality <|-", "metadata": {"source_url": "https://developer.atlan.com/models/anomalo/", "title": "Anomalo - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ct>> } class DataQuality { <<abstract>> } link DataQuality \"../entities/dataquality\" DataQuality <|-- Anomalo : extends class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Catalog <|-- DataQuality : extends class Asset { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Refere", "metadata": {"source_url": "https://developer.atlan.com/models/anomalo/", "title": "Anomalo - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": ": extends class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Referenceable <|-- Asset : extends class AnomaloCheck link AnomaloCheck \"../entities/anomalocheck\" Anomalo <|-- AnomaloCheck : extends Relationships \u00b6 The following illustrates how the various Anomalo objects inter-relate with each other: erDiagram Connection ||..o{ Asset : \"\" Asset ||--o{ AnomaloCheck :", "metadata": {"source_url": "https://developer.atlan.com/models/anomalo/", "title": "Anomalo - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "ts inter-relate with each other: erDiagram Connection ||..o{ Asset : \"\" Asset ||--o{ AnomaloCheck : anomaloCheckAsset Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/anomalo/", "title": "Anomalo - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "APIField \u00b6 Instances of APIField in Atlan. Complete reference This is a complete reference for the APIField object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. APIField", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ingle-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. APIField inherits its attributes and relationships from these other types: classDiagram direction RL class APIField link APIField \"../apifield\" class API { <<abstract>> } link API \"../api\" API <|-- APIField : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- API : extends class A", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- API : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from APIField 's supertypes (shown above): typeName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "rited properties These attributes are inherited from APIField 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "he tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and rest", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Detail", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "dateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "s \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can b", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "or this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedN", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "alifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomal", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "dCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "etDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "alized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "is asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "tDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whet", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "e last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificatio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "n of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that ma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "poch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "zed this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "obLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "an-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "atus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpd", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "bt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetM", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "onitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "rTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "tus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to ce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": ". certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connecti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "set. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Desc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "ser interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "le \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "ame of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCom", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ore for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dash", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "urce system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecord", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "nsive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "Count \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "rs who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different nam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "SlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource with", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "sset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "ds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. ten", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) apiExternalDocs \u00b6 External documentation of the API. apiIsAuthOptional \u00b6 Whether authentication is optional (true) or", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "External documentation of the API. apiIsAuthOptional \u00b6 Whether authentication is optional (true) or required (false). apiIsObjectReference \u00b6 If this asset refers to an APIObject apiObjectQualifiedName \u00b6 Qualified name of the APIObject that is referred to by this asset. When apiIsObjectReference is true. apiSpecName \u00b6 Simple name of the API spec, if this asset is contained in an API spec. apiSpecQu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "rue. apiSpecName \u00b6 Simple name of the API spec, if this asset is contained in an API spec. apiSpecQualifiedName \u00b6 Unique name of the API spec, if this asset is contained in an API spec. apiSpecType \u00b6 Type of API, for example: OpenAPI, GraphQL, etc. apiSpecVersion \u00b6 Version of the API specification. These attributes are specific to instances of APIField (and all of its subtypes). apiFieldType \u00b6 Typ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "These attributes are specific to instances of APIField (and all of its subtypes). apiFieldType \u00b6 Type of APIField. E.g. STRING, NUMBER etc. It is free text. apiFieldTypeSecondary \u00b6 Secondary Type of APIField. E.g. LIST/STRING, then LIST would be the secondary type. apiQueryParamType \u00b6 If parent relationship type is APIQuery, then this attribute denotes if this is input or output parameter. Relatio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "tionship type is APIQuery, then this attribute denotes if this is input or output parameter. Relationships \u00b6 Inherited relationships These relationships are inherited from APIField 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset contai", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "n asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "est version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": ") \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "nt name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities impl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "e ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of APIField (and all of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "omSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of APIField (and all of its subtypes). apiObject ( APIObject ) \u00b6 APIObject asset containing this APIField. apiQuery ( APIQuery ) \u00b6 APIQuery asset containing this APIField. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "anks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/apifield/", "title": "APIField - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "DataStudioAsset \u00b6 Instance of a Google Data Studio asset in Atlan. Complete reference This is a complete reference for the DataStudioAsset object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step im", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "s \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DataStudioAsset inherits its attributes and relationships from these other types: classDiagram direction RL class DataStudioAsset link DataStudioAsset \"../datastudioasset\" class DataStudio { <<abstract>> } link DataStudio \"../datastudio\" DataStudio <|-- DataStudioAsset : exten", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "DataStudio { <<abstract>> } link DataStudio \"../datastudio\" DataStudio <|-- DataStudioAsset : extends class Google { <<abstract>> } link Google \"../google\" Google <|-- DataStudio : extends class Cloud { <<abstract>> } link Cloud \"../cloud\" Cloud <|-- Google : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Cloud : extends class Referenceable { <<abstract>> } link Referenceab", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "nk Asset \"../asset\" Asset <|-- Cloud : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- DataStudio : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Ref", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ": extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends class Google { <<abstract>> } link Google \"../google\" Google <|-- DataStudioAsset : extends class Cloud { <<abstract>> } link Cloud \"../cloud\" Cloud <|-- Google : extends class Asset { <<abstract>> }", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "loud { <<abstract>> } link Cloud \"../cloud\" Cloud <|-- Google : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Cloud : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DataStudioAsset 's supertypes (shown above): typeName \u00b6 Type of this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "attributes are inherited from DataStudioAsset 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. cr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "(epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "g names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "ve been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "his is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "is is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "alified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "l associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "as of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "t in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "(true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "ecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were ge", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "e job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that mat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "t materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunS", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "he job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "n dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "RL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "ts in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": ". assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names att", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "lo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 T", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attache", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "ached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "f all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "tusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ame \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "nnector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contra", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "s asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "\u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "et. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within At", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "rceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensiv", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "unt of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords sour", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "eries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_record", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs source", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "ist \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "urceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source ap", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "lCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "dBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "ent name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "w score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) googleLabels \u00b6 List of labels that have been applied to the asset in Google. googleLocation \u00b6 Location of this asset in Google. google", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "have been applied to the asset in Google. googleLocation \u00b6 Location of this asset in Google. googleLocationType \u00b6 Type of location of this asset in Google. googleProjectId \u00b6 ID of the project in which the asset exists. googleProjectName \u00b6 Name of the project in which the asset exists. googleProjectNumber \u00b6 Number of the project in which the asset exists. googleService \u00b6 Service in Google in which", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "Number \u00b6 Number of the project in which the asset exists. googleService \u00b6 Service in Google in which the asset exists. googleTags \u00b6 List of tags that have been applied to the asset in Google. These attributes are specific to instances of DataStudioAsset (and all of its subtypes). dataStudioAssetOwner \u00b6 Owner of the asset, from Google Data Studio. dataStudioAssetTitle \u00b6 Title of the Google Data Stu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "r \u00b6 Owner of the asset, from Google Data Studio. dataStudioAssetTitle \u00b6 Title of the Google Data Studio asset. dataStudioAssetType \u00b6 Type of the Google Data Studio asset, for example: REPORT or DATA_SOURCE. isTrashedDataStudioAsset \u00b6 Whether the Google Data Studio asset has been trashed (true) or not (false). Relationships \u00b6 Inherited relationships These relationships are inherited from DataStudio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "t (false). Relationships \u00b6 Inherited relationships These relationships are inherited from DataStudioAsset 's supertypes: inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "rkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC anomaloChecks", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "es from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a di", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataP", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "\u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "ors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms u", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "elationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us wi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "ack! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/datastudioasset/", "title": "DataStudioAsset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "AtlasGlossaryTerm \u00b6 Instance of a term in Atlan. Terms define concepts in natural language that can be associated with other assets to provide meaning. Complete reference This is a complete reference for the AtlasGlossaryTerm object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, at", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. AtlasGlossaryTerm inherits its attributes and relationships from these other types: classDiagram direction RL class AtlasGlossaryTerm link AtlasGlossaryTerm \"../atlasglossaryterm\" class Asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "iagram direction RL class AtlasGlossaryTerm link AtlasGlossaryTerm \"../atlasglossaryterm\" class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- AtlasGlossaryTerm : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from AtlasGlossaryTerm 's supertypes (shown a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "\u00b6 Inherited properties These attributes are inherited from AtlasGlossaryTerm 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and v", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "formation, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. delete", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a differ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "assificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "nings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "\u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users w", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "s who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of anno", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "uncement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. appli", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "plicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing stat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "esent in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ssetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "ists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "lliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "sh in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "rom the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "r of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "his asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in m", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "rtedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable tot", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "b that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "conds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "nHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "t. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "Names \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incid", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "e Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "ciated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique M", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "s. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncR", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": ". assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide furt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "'s certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is acce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "ation of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. de", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "nt name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "y purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEdit", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "\u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryC", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ist of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecord", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "st \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecord", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source sy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "m, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "rred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) These attributes are specific to instances of AtlasGlossaryTerm (and all of its subtypes). abbreviatio", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "ese attributes are specific to instances of AtlasGlossaryTerm (and all of its subtypes). abbreviation \u00b6 TBC additionalAttributes \u00b6 TBC examples \u00b6 TBC longDescription \u00b6 TBC shortDescription \u00b6 TBC termType \u00b6 TBC usage \u00b6 TBC Relationships \u00b6 Inherited relationships These relationships are inherited from AtlasGlossaryTerm 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. ap", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "AtlasGlossaryTerm 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "ms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which thi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. read", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "fferent name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos These relationships are specific to instances of AtlasGlossaryTerm (and all of its subtypes). anchor ( AtlasGlossary ) \u00b6 TBC antonyms ( AtlasGlossaryTerm ) \u00b6 TBC assignedEntities ( Referenceable )", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "hor ( AtlasGlossary ) \u00b6 TBC antonyms ( AtlasGlossaryTerm ) \u00b6 TBC assignedEntities ( Referenceable ) \u00b6 TBC categories ( AtlasGlossaryCategory ) \u00b6 TBC classifies ( AtlasGlossaryTerm ) \u00b6 TBC isA ( AtlasGlossaryTerm ) \u00b6 TBC preferredTerms ( AtlasGlossaryTerm ) \u00b6 TBC preferredToTerms ( AtlasGlossaryTerm ) \u00b6 TBC replacedBy ( AtlasGlossaryTerm ) \u00b6 TBC replacementTerms ( AtlasGlossaryTerm ) \u00b6 TBC seeAlso", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": ") \u00b6 TBC replacedBy ( AtlasGlossaryTerm ) \u00b6 TBC replacementTerms ( AtlasGlossaryTerm ) \u00b6 TBC seeAlso ( AtlasGlossaryTerm ) \u00b6 TBC synonyms ( AtlasGlossaryTerm ) \u00b6 TBC translatedTerms ( AtlasGlossaryTerm ) \u00b6 TBC translationTerms ( AtlasGlossaryTerm ) \u00b6 TBC validValues ( AtlasGlossaryTerm ) \u00b6 TBC validValuesFor ( AtlasGlossaryTerm ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for you", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "aluesFor ( AtlasGlossaryTerm ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/atlasglossaryterm/", "title": "AtlasGlossaryTerm - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "Manage Insights assets (Collection, Folder, Query) \u00b6 In general, these should be: Created in top-down order (collection, folder, query) Deleted in bottom-up order (query, folder, collection) 1 erDiagram Collection ||--o{ Folder : contains Folder ||--o{ Query : contains Collection \u00b6 3.1.2 4.0.0 To create a Collection : Java Python Kotlin Raw REST API Create a collection 1 2 3 4 AtlanCollection coll", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "eate a Collection : Java Python Kotlin Raw REST API Create a collection 1 2 3 4 AtlanCollection collection = AtlanCollection . creator ( client , \"MyCollection\" ) . adminGroup ( \"admins\" ) . build (); // (1) AssetMutationResponse response = collection . save ( client ); // (2) Build the minimum request to create a collection. provide an instance of AtlanClient . specify a human-readable name for y", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "est to create a collection. provide an instance of AtlanClient . specify a human-readable name for your collection. (optional) specify the name of the group that can administer this collection. You can use also use adminUsers , viewerUsers , ownerUsers , etc to manage different levels of access control for the collection. Actually call Atlan to create the collection. Because this operation will pe", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "rol for the collection. Actually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create a collection 1 2 3 4 5 6 7 8 from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import Collection client = AtlanClient () collection = Collection . creator ( client = clien", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ".assets import Collection client = AtlanClient () collection = Collection . creator ( client = client , name = \"my-collection\" ) # (1) collection . admin_groups = [ \"admins\" ] # (2) response = client . asset . save ( collection ) # (3) Build the minimum request to create a collection provide an instance of AtlanClient . specify a human-readable name for your collection. (optional) Specify the name", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ance of AtlanClient . specify a human-readable name for your collection. (optional) Specify the name of the group that can administer this collection. You can use also use adminUsers , viewerUsers , ownerUsers , etc to manage different levels of access control for the collection. Actually call Atlan to create the collection. Create a collection 1 2 3 4 val collection = AtlanCollection . creator (", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "to create the collection. Create a collection 1 2 3 4 val collection = AtlanCollection . creator ( client , \"MyCollection\" ) . adminGroup ( \"admins\" ) . build () // (1) val response = collection . save ( client ) // (2) Build the minimum request to create a collection. provide an instance of AtlanClient . specify a human-readable name for your collection. (optional) specify the name of the group", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "lient . specify a human-readable name for your collection. (optional) specify the name of the group that can administer this collection. You can use also use adminUsers , viewerUsers , ownerUsers , etc to manage different levels of access control for the collection. Actually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must provide it an AtlanCli", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "collection. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 { \"entities\" : [ { \"typeName\" : \"Collection\" , \"attributes\" : { \"qualifiedName\" : \"default/collection/service-account-apikey-9468b3e4-d30d-98ba-87d2-f080841a99ef/a08e5dcb-38bd-47d2-b2ea-e439cd0", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "llection/service-account-apikey-9468b3e4-d30d-98ba-87d2-f080841a99ef/a08e5dcb-38bd-47d2-b2ea-e439cd0bbe22\" , // (1) \"name\" : \"MyCollection\" , // (2) \"adminGroups\" : [ // (3) \"admins\" ] } } ] } When creating a collection through API tokens, make sure your qualified name follows this convention: default/collection/<api-token-username-here>/<some-uuid4-string> . Specify a human-readable name for your", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "lt/collection/<api-token-username-here>/<some-uuid4-string> . Specify a human-readable name for your collection. (optional) Specify the name of the group that can administer this collection. You can use also use adminUsers , viewerUsers , ownerUsers , etc to manage different levels of access control for the collection. Folder \u00b6 3.1.2 4.0.0 To create a Folder : Java Python Kotlin Raw REST API Creat", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "for the collection. Folder \u00b6 3.1.2 4.0.0 To create a Folder : Java Python Kotlin Raw REST API Create a folder 5 6 Folder folder = Folder . creator ( \"MyFolder\" , collection ). build (); // (1) AssetMutationResponse response = folder . save ( client ); // (2) Build the minimum request to create a folder. specify a human-readable name for your folder. provide an instance of Collection , or if you w", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "lder. specify a human-readable name for your folder. provide an instance of Collection , or if you want to create a sub-folder, provide an instance of Folder . Actually call Atlan to create the folder. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create a folder 9 10 11 12 13 14 15 16 17 18 19 from pyatlan.client", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "which to connect to the tenant. Create a folder 9 10 11 12 13 14 15 16 17 18 19 from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import Folder client = AtlanClient () folder = Folder . creator ( name = \"my-folder\" , collection_qualified_name = \"default/collection/user/abcdxyz\" , ) # (1) response = client . asset . save ( folder ) # (2) Build the minimum request to create a f", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": ", ) # (1) response = client . asset . save ( folder ) # (2) Build the minimum request to create a folder. specify a human-readable name for your folder. provide the qualifiedName of the Collection , or if you want to create a sub-folder, provide the parent_folder_qualified_name . Actually call Atlan to create the folder. Create a folder 5 6 val folder = Folder . creator ( \"MyFolder\" , collection", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "n to create the folder. Create a folder 5 6 val folder = Folder . creator ( \"MyFolder\" , collection ). build () // (1) val response = folder . save ( client ) // (2) Build the minimum request to create a folder. specify a human-readable name for your folder. provide an instance of Collection , or if you want to create a sub-folder, provide an instance of Folder . Actually call Atlan to create the", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "you want to create a sub-folder, provide an instance of Folder . Actually call Atlan to create the folder. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { \"entities\" : [ { \"typeName\" : \"Folder\" , \"attributes\" : { \"qualifiedName\" : \"default", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "5 16 17 18 19 { \"entities\" : [ { \"typeName\" : \"Folder\" , \"attributes\" : { \"qualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi/MyFolder\" , // (1) \"name\" : \"MyFolder\" , // (2) \"parentQualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\" , // (3) \"collectionQualifiedNa", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "t-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\" , // (3) \"collectionQualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\" , // (4) \"parent\" : { \"typeName\" : \"Collection\" , // (5) \"uniqueAttributes\" : { \"qualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfT", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "ame\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\" } } } } ] } When creating a folder through API tokens, make sure your qualified name follows this convention: <parent-qualified-name>/<folder-name> . Specify a human-readable name for your folder. In this example, we're creating a folder inside an existing collection; therefore, we specify", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "older. In this example, we're creating a folder inside an existing collection; therefore, we specify the qualifiedName of the collection here. If you're creating a sub-folder, you should provide the qualifiedName of the parent Folder . Specify the qualifiedName of the collection. In this example, we're creating a folder inside an existing collection; therefore, we specify the qualifiedName of the", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "'re creating a folder inside an existing collection; therefore, we specify the qualifiedName of the collection here. If you're creating a sub-folder, you should provide the qualifiedName of the parent Folder . Query \u00b6 3.1.2 4.0.0 To create a Query : Java Python Kotlin Raw REST API Create a query 7 8 9 10 11 String schemaQualifiedName = \"default/snowflake/1735591234/DB/SCHEMA\" ; AtlanQuery query =", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "9 10 11 String schemaQualifiedName = \"default/snowflake/1735591234/DB/SCHEMA\" ; AtlanQuery query = AtlanQuery . creator ( \"MyQuery\" , folder ) // (1) . withRawQuery ( schemaQualifiedName , \"SELECT * FROM CUSTOMERS;\" ) // (2) . build (); AssetMutationResponse response = query . save ( client ); // (3) Build the minimum request to create a query. specify a human-readable name for your query. provid", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "3) Build the minimum request to create a query. specify a human-readable name for your query. provide an instance of Folder , or if you want to create a query inside a collectin, provide an instance of Collection . In this example, we're creating a query for an existing Snowflake schema. Actually call Atlan to create the folder. Because this operation will persist the asset in Atlan, you must prov", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "ll Atlan to create the folder. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. Create a query 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from pyatlan.client.atlan import AtlanClient from pyatlan.model.assets import Query client = AtlanClient () schema_qualified_name = \"default/snowflake/1735591234/DB/SCHEMA\" query =", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ry client = AtlanClient () schema_qualified_name = \"default/snowflake/1735591234/DB/SCHEMA\" query = Query . creator ( name = \"my-query\" , parent_folder_qualified_name = \"default/collection/user/abc/folder/user/xyz\" ) # (1) query . with_raw_query ( schema_qualified_name = schema_qualified_name , query = \"SELECT * FROM CUSTOMERS;\" ) # (2) response = client . asset . save ( query ) # (3) Build the mi", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "y = \"SELECT * FROM CUSTOMERS;\" ) # (2) response = client . asset . save ( query ) # (3) Build the minimum request to create a query. specify a human-readable name for your query. provide the qualifedName of the Folder , or if you want to create a query inside a collection, provide the collection_qualified_name . In this example, we're creating a query for an existing Snowflake schema. Actually cal", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "lified_name . In this example, we're creating a query for an existing Snowflake schema. Actually call Atlan to create the folder. Create a query 7 8 9 10 11 val schemaQualifiedName = \"default/snowflake/1735591234/DB/SCHEMA\" val query = AtlanQuery . creator ( \"MyQuery\" , folder ) // (1) . withRawQuery ( schemaQualifiedName , \"SELECT * FROM CUSTOMERS;\" ) // (2) . build () val response = query . save", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "y ( schemaQualifiedName , \"SELECT * FROM CUSTOMERS;\" ) // (2) . build () val response = query . save ( client ) // (3) Build the minimum request to create a query. specify a human-readable name for your query. provide an instance of Folder , or if you want to create a query inside a collectin, provide an instance of Collection . In this example, we're creating a query for an existing Snowflake sch", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "de an instance of Collection . In this example, we're creating a query for an existing Snowflake schema. Actually call Atlan to create the folder. Because this operation will persist the asset in Atlan, you must provide it an AtlanClient through which to connect to the tenant. POST /api/meta/entity/bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 { \"entities\" : [ { \"typ", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "bulk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 { \"entities\" : [ { \"typeName\" : \"Query\" , \"attributes\" : { \"qualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi/folder/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/V2ddMTTMJItUy1aV6biSh/MyQuery\" , // (1) \"name\" : \"MyQuery\" , // (2) \"connecti", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "48ba-87d2-f080841a59ef/V2ddMTTMJItUy1aV6biSh/MyQuery\" , // (1) \"name\" : \"MyQuery\" , // (2) \"connectionName\" : \"snowflake\" , // (3) \"connectionQualifiedName\" : \"default/snowflake/1735591234\" , // (4) \"rawQueryText\" : \"SELECT * FROM CUSTOMERS;\" , // (5) \"defaultSchemaQualifiedName\" : \"default/snowflake/1735591234/DB/SCHEMA\" , // (6) \"defaultDatabaseQualifiedName\" : \"default/snowflake/1735591234/DB\"", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "e/1735591234/DB/SCHEMA\" , // (6) \"defaultDatabaseQualifiedName\" : \"default/snowflake/1735591234/DB\" , // (7) \"variablesSchemaBase64\" : \"eyJjdXN0b212YXJpYWJsZXNEYXRlVGltZUZvcm1hdCI6IHsiZGVmYXVsdERhdGVGb3JtYXQiOiAiWVlZWS1NTS1ERCIsICJkZWZhdWx0VGltZUZvcm1hdCI6ICJISDptbSJ9LCAiY3VzdG9tVmFyaWFibGVzIjogW119\" , \"parentQualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f0808", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "\" , \"parentQualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi/folder/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/V2ddMTTMJItUy1aV6biSh\" , // (8) \"collectionQualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\" , // (9) \"isVisualQuery\" : false , // (1", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\" , // (9) \"isVisualQuery\" : false , // (10) \"parent\" : { \"typeName\" : \"Folder\" , // (11) \"uniqueAttributes\" : { \"qualifiedName\" : \"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi/folder/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/V2ddMTTMJItUy1aV6biSh\" } } } } ] } When cr", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "rvice-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/V2ddMTTMJItUy1aV6biSh\" } } } } ] } When creating a query through API tokens, ensure that your qualifiedName follows this convention: <parent-qualified-name>/<query-name> . Specify a human-readable name for your query. Since we're creating a query for a Snowflake schema. Provide the qualifiedName of the Snowflake connection. Specify the raw", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "uery for a Snowflake schema. Provide the qualifiedName of the Snowflake connection. Specify the raw SQL query. Provide the qualifiedName of the Snowflake schema. Provide the qualifiedName of the Snowflake database. In this example, we're creating a folder inside an existing collection; therefore, we specify the qualifiedName of the collection here. If you're creating a sub-folder, you should provi", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "specify the qualifiedName of the collection here. If you're creating a sub-folder, you should provide the qualifiedName of the parent folder. Specify the qualifiedName of the collection. Since this is a non-visual query, ensure it is appropriately marked as such. In this example, we're creating a query inside an existing folder; therefore, we specify the qualifiedName of the folder here. If you'r", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "uery inside an existing folder; therefore, we specify the qualifiedName of the folder here. If you're creating a query inside a collection, you should provide the qualifiedName of the collection. Although if you want to delete everything in a connection, your better avenue is the packaged connection delete utility in the UI. \u21a9 Was this page helpful? Thanks for your feedback! Thanks for your feedba", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "delete utility in the UI. \u21a9 Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/patterns/create/insight/", "title": "Manage Insights assets - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "Azure Data Factory model \u00b6 Reference documentation This is reference documentation covering the entire Atlan model. It is not the best place to start when trying to understand how to manage Azure Data Factory assets in Atlan. These model elements all deal with Azure Data Factory constructs. classDiagram direction RL class ADF { <<abstract>> } class Catalog { <<abstract>> } link Catalog \"../entitie", "metadata": {"source_url": "https://developer.atlan.com/models/adf/", "title": "Azure Data Factory - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "gram direction RL class ADF { <<abstract>> } class Catalog { <<abstract>> } link Catalog \"../entities/catalog\" Catalog <|-- ADF : extends class Asset { <<abstract>> } link Asset \"../entities/asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../entities/referenceable\" Referenceable <|-- Asset : extends class AdfActivity link AdfActivity \"../entities/adfact", "metadata": {"source_url": "https://developer.atlan.com/models/adf/", "title": "Azure Data Factory - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "renceable\" Referenceable <|-- Asset : extends class AdfActivity link AdfActivity \"../entities/adfactivity\" ADF <|-- AdfActivity : extends class AdfDataflow link AdfDataflow \"../entities/adfdataflow\" ADF <|-- AdfDataflow : extends class AdfDataset link AdfDataset \"../entities/adfdataset\" ADF <|-- AdfDataset : extends class AdfLinkedservice link AdfLinkedservice \"../entities/adflinkedservice\" ADF <|", "metadata": {"source_url": "https://developer.atlan.com/models/adf/", "title": "Azure Data Factory - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Dataset : extends class AdfLinkedservice link AdfLinkedservice \"../entities/adflinkedservice\" ADF <|-- AdfLinkedservice : extends class AdfPipeline link AdfPipeline \"../entities/adfpipeline\" ADF <|-- AdfPipeline : extends Properties \u00b6 These attributes are unique to instances of ADF (and all of its subtypes). adfAssetFolderPath \u00b6 Defines the folder path in which this ADF asset exists. adfFactoryNam", "metadata": {"source_url": "https://developer.atlan.com/models/adf/", "title": "Azure Data Factory - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ubtypes). adfAssetFolderPath \u00b6 Defines the folder path in which this ADF asset exists. adfFactoryName \u00b6 Defines the name of the factory in which this asset exists. Relationships \u00b6 The following illustrates how the various Azure Data Factory objects inter-relate with each other: erDiagram Connection ||..o{ AdfPipeline : \"\" AdfPipeline ||--o{ AdfActivity : \"adfActivities\" AdfPipeline }o--o{ AdfDataf", "metadata": {"source_url": "https://developer.atlan.com/models/adf/", "title": "Azure Data Factory - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "||..o{ AdfPipeline : \"\" AdfPipeline ||--o{ AdfActivity : \"adfActivities\" AdfPipeline }o--o{ AdfDataflow : \"adfDataflows\" AdfPipeline }o--o{ AdfDataset : \"adfDatasets\" AdfPipeline }o--o{ AdfLinkedservice : \"adfLinkedservices\" AdfDataflow ||--o{ AdfActivity : \"adfActivities\" AdfDataflow }o--o{ AdfDataset : \"adfDatasets\" AdfDataflow }o--o{ AdfLinkedservice : \"adfLinkedservices\" AdfLinkedservice }o--o", "metadata": {"source_url": "https://developer.atlan.com/models/adf/", "title": "Azure Data Factory - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "set : \"adfDatasets\" AdfDataflow }o--o{ AdfLinkedservice : \"adfLinkedservices\" AdfLinkedservice }o--o{ AdfActivity : \"adfActivities\" AdfLinkedservice ||--o{ AdfDataset : \"adfDatasets\" AdfActivity }o--o{ AdfDataset : \"adfDatasets\" Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back t", "metadata": {"source_url": "https://developer.atlan.com/models/adf/", "title": "Azure Data Factory - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ck! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/adf/", "title": "Azure Data Factory - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "SalesforceOrganization \u00b6 Instance of a Salesforce organization in Atlan. Complete reference This is a complete reference for the SalesforceOrganization object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. SalesforceOrganization inherits its attributes and relationships from these other types: classDiagram direction RL class SalesforceOrganization link SalesforceOrganization \"../salesforceorganization\" class Salesforce { <<abstract>> } link Salesforce \"../salesforce", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ization \"../salesforceorganization\" class Salesforce { <<abstract>> } link Salesforce \"../salesforce\" Salesforce <|-- SalesforceOrganization : extends class SaaS { <<abstract>> } link SaaS \"../saas\" SaaS <|-- Salesforce : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- SaaS : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "SaaS : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from SalesforceOrganization 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "t CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make chang", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "t. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "se should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminG", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcem", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "rs \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announ", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "tType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ns this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ject containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "omaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentN", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materiali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "astRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in millisec", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "At \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Bra", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "cuted the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "DbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "alse). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "tRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHuman", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "n of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "tarted running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "\u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "setDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criter", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "f the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "sset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "cidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or n", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "s associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 S", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "s \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "C assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "h this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fal", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "his asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "is asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isParti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "sset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ses, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "rce (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "ExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "rent name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "ReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_reco", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "rds sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of us", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "et, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) vi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "roups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) apiName \u00b6 Name of this asset in the Salesforce API. organizationQualifiedName \u00b6 Fully-qualified name of the organization in Salesforce. These attributes are specific to instances of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "lly-qualified name of the organization in Salesforce. These attributes are specific to instances of SalesforceOrganization (and all of its subtypes). sourceId \u00b6 Identifier of the organization in Salesforce. Relationships \u00b6 Inherited relationships These relationships are inherited from SalesforceOrganization 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "nization 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractL", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "e linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": ". files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readm", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "tDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceabl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "me in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplement", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": ") \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "om which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of SalesforceOrganization (and all of its subtypes). dashboards ( SalesforceDashboard ) \u00b6 Dashboards that exist within this organization. objects ( SalesforceObject ) \u00b6 Objects that exist within", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "oards that exist within this organization. objects ( SalesforceObject ) \u00b6 Objects that exist within this organization. reports ( SalesforceReport ) \u00b6 Reports that exist within this organization. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/salesforceorganization/", "title": "SalesforceOrganization - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "ENTITY_UPDATE event type \u00b6 ENTITY_UPDATE events are emitted whenever an asset is changed in Atlan. This includes: Changes to any of the asset's attributes (like description, owner, certificate, announcement, and so on) Changes to any of the asset's relationships (like the addition or removal of a term) One ENTITY_UPDATE event is emitted for each asset that is updated So, for example, if you remove", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "rm) One ENTITY_UPDATE event is emitted for each asset that is updated So, for example, if you remove a term from an asset Atlan will emit 2 ENTITY_UPDATE events: 1 for the asset that was changed (that the term was removed from) 1 for the term that was changed (since it is no longer attached to that asset) The details of the updated asset will be in the message.entity portion of the event payload.", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "asset) The details of the updated asset will be in the message.entity portion of the event payload. In addition, the event payload shows what specifically was changed in the message.mutatedDetails portion of the event payload. Example ENTITY_UPDATE event 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 5", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 1", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "14 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 { \"source\" : {}, \"version\" : { \"version\" : \"1.0.0\" , \"versionParts\" : [ 1 ] }, \"msgCompressionKind\" : \"NONE\" , \"msgSplitIdx\" : 1 , \"msgSplitCount\" : 1 , \"msgSourceIP\" : \"10.110.55.1", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "sgCompressionKind\" : \"NONE\" , \"msgSplitIdx\" : 1 , \"msgSplitCount\" : 1 , \"msgSourceIP\" : \"10.110.55.19\" , \"msgCreatedBy\" : \"\" , \"msgCreationTime\" : 1655265623268 , \"spooled\" : false , \"message\" : { \"type\" : \"ENTITY_NOTIFICATION_V2\" , \"entity\" : { \"typeName\" : \"Table\" , \"attributes\" : { \"popularityScore\" : 1.17549435e-38 , \"lastSyncWorkflowName\" : \"suman1-crawler\" , \"lastSyncRunAt\" : 1653533865845 ,", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "re\" : 1.17549435e-38 , \"lastSyncWorkflowName\" : \"suman1-crawler\" , \"lastSyncRunAt\" : 1653533865845 , \"certificateStatus\" : \"VERIFIED\" , \"databaseName\" : \"demo_db\" , \"connectionQualifiedName\" : \"default/postgres/1653533778\" , \"queryCount\" : 0 , \"isTemporary\" : false , \"lastSyncRun\" : \"atlan-postgres-default-postgres-1653533778-xhtgk\" , \"isPartitioned\" : false , \"schemaName\" : \"demo\" , \"adminUsers\"", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "default-postgres-1653533778-xhtgk\" , \"isPartitioned\" : false , \"schemaName\" : \"demo\" , \"adminUsers\" : [], \"partitionCount\" : 0 , \"queryUserCount\" : 0 , \"ownerGroups\" : [], \"isEditable\" : true , \"sourceUpdatedAt\" : 0 , \"certificateUpdatedBy\" : \"suman\" , \"announcementUpdatedAt\" : 0 , \"isDiscoverable\" : true , \"isQueryPreview\" : true , \"rowCount\" : 1318656 , \"schemaQualifiedName\" : \"default/postgres/", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": ": true , \"isQueryPreview\" : true , \"rowCount\" : 1318656 , \"schemaQualifiedName\" : \"default/postgres/1653533778/demo_db/demo\" , \"sourceCreatedAt\" : 0 , \"viewerUsers\" : [], \"userDescription\" : \"Short description\" , \"adminRoles\" : [], \"adminGroups\" : [], \"qualifiedName\" : \"default/postgres/1653533778/demo_db/demo/dqtest73\" , \"databaseQualifiedName\" : \"default/postgres/1653533778/demo_db\" , \"columnCou", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "emo_db/demo/dqtest73\" , \"databaseQualifiedName\" : \"default/postgres/1653533778/demo_db\" , \"columnCount\" : 7 , \"sizeBytes\" : 0 , \"name\" : \"dqtest73\" , \"certificateUpdatedAt\" : 1655265622993 , \"connectorName\" : \"postgres\" , \"viewerGroups\" : [], \"ownerUsers\" : [ \"anshul.mehta\" , \"suman\" ] }, \"guid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"displayText\" : \"dqtest73\" , \"classificationNames\" : [ \"Zz3S", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "2eb68562-3849-4861-8f4c-527a02da4e27\" , \"displayText\" : \"dqtest73\" , \"classificationNames\" : [ \"Zz3SHQcKFJGVb4ZCaqtZoX\" , \"gxTVzFBOOkNfiCOBYUHgWw\" , \"Zz3SHQcKFJGVb4ZCaqtZoX\" , \"Zz3SHQcKFJGVb4ZCaqtZoX\" , \"gxTVzFBOOkNfiCOBYUHgWw\" , \"gxTVzFBOOkNfiCOBYUHgWw\" , \"gxTVzFBOOkNfiCOBYUHgWw\" ], \"classifications\" : [ { \"typeName\" : \"Zz3SHQcKFJGVb4ZCaqtZoX\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e2", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "s\" : [ { \"typeName\" : \"Zz3SHQcKFJGVb4ZCaqtZoX\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"ACTIVE\" , \"propagate\" : true , \"removePropagationsOnEntityDelete\" : true }, { \"typeName\" : \"gxTVzFBOOkNfiCOBYUHgWw\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"ACTIVE\" , \"propagate\" : false , \"removePropagationsOnEntityDelete\" : true }, { \"typeN", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "tityStatus\" : \"ACTIVE\" , \"propagate\" : false , \"removePropagationsOnEntityDelete\" : true }, { \"typeName\" : \"Zz3SHQcKFJGVb4ZCaqtZoX\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"ACTIVE\" , \"propagate\" : true , \"removePropagationsOnEntityDelete\" : true }, { \"typeName\" : \"Zz3SHQcKFJGVb4ZCaqtZoX\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "Zz3SHQcKFJGVb4ZCaqtZoX\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"ACTIVE\" , \"propagate\" : true , \"removePropagationsOnEntityDelete\" : true }, { \"typeName\" : \"gxTVzFBOOkNfiCOBYUHgWw\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"ACTIVE\" , \"propagate\" : true , \"removePropagationsOnEntityDelete\" : true }, { \"typeName\" : \"gxTVzFBOOkNfiCOB", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": ", \"propagate\" : true , \"removePropagationsOnEntityDelete\" : true }, { \"typeName\" : \"gxTVzFBOOkNfiCOBYUHgWw\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"ACTIVE\" , \"propagate\" : true , \"removePropagationsOnEntityDelete\" : true }, { \"typeName\" : \"gxTVzFBOOkNfiCOBYUHgWw\" , \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"ACTIVE\" , \"propagate\" :", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": ", \"entityGuid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"entityStatus\" : \"ACTIVE\" , \"propagate\" : false , \"removePropagationsOnEntityDelete\" : true } ], \"isIncomplete\" : false , \"createdBy\" : \"suman\" , \"updatedBy\" : \"suman\" , \"createTime\" : 1653533980608 , \"updateTime\" : 1655265622993 }, \"operationType\" : \"ENTITY_UPDATE\" , \"eventTime\" : 1655265622993 , \"mutatedDetails\" : { \"typeName\" : \"Table\" ,", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "nType\" : \"ENTITY_UPDATE\" , \"eventTime\" : 1655265622993 , \"mutatedDetails\" : { \"typeName\" : \"Table\" , \"attributes\" : { \"certificateStatus\" : \"VERIFIED\" , \"userDescription\" : \"Short description\" , \"tenantId\" : \"default\" , \"ownerUsers\" : [ \"anshul.mehta\" , \"suman\" ] }, \"guid\" : \"2eb68562-3849-4861-8f4c-527a02da4e27\" , \"isIncomplete\" : false , \"provenanceType\" : 0 , \"updatedBy\" : \"suman\" , \"updateTime", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "-527a02da4e27\" , \"isIncomplete\" : false , \"provenanceType\" : 0 , \"updatedBy\" : \"suman\" , \"updateTime\" : 1655265622993 , \"version\" : 0 , \"relationshipAttributes\" : { \"meanings\" : [ { \"guid\" : \"012c5684-a526-4fe4-99c5-3fd65e31988e\" , \"typeName\" : \"AtlasGlossaryTerm\" }, { \"guid\" : \"bd2defdb-4d3f-48cc-9a7b-775354926245\" , \"typeName\" : \"AtlasGlossaryTerm\" }, { \"guid\" : \"cc1d0a01-6174-4d63-8f26-7aa41551", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "a7b-775354926245\" , \"typeName\" : \"AtlasGlossaryTerm\" }, { \"guid\" : \"cc1d0a01-6174-4d63-8f26-7aa41551ca89\" , \"typeName\" : \"AtlasGlossaryTerm\" } ] }, \"proxy\" : false } } } Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/events/types/entity_update/", "title": "ENTITY_UPDATE - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "DomoDataset \u00b6 Instance of a Domo Dataset in Atlan. Complete reference This is a complete reference for the DomoDataset object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation pattern", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "amples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. DomoDataset inherits its attributes and relationships from these other types: classDiagram direction RL class DomoDataset link DomoDataset \"../domodataset\" class Domo { <<abstract>> } link Domo \"../domo\" Domo <|-- DomoDataset : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Domo : exte", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "/domo\" Domo <|-- DomoDataset : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Domo : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from DomoDataset 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You sh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "eHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ingNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Ds) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "his asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "e in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQuali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "s. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo fo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "ssociated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCh", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "maloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "CoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materiali", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "unArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "(epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the l", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "he job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "(false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run o", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "bt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt sp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ed \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "he last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "n dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobL", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "un of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "ized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of uni", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "se for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident na", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "s associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo moni", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. c", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "mal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "lliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs con", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "ription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": ") of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "ast synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ho own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the sourc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "rce system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": ". (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the mo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "veQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "e. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "sset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different na", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "rs source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "UpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1)", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "dDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. vi", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "sset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) domoId \u00b6 Id of the Do", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "assets contained in a collection. (This is only used for certain asset types.) domoId \u00b6 Id of the Domo dataset. domoOwnerId \u00b6 Id of the owner of the Domo dataset. These attributes are specific to instances of DomoDataset (and all of its subtypes). domoDatasetCardCount \u00b6 Number of cards linked to the Domo dataset. domoDatasetColumnCount \u00b6 Number of columns in the Domo dataset. domoDatasetLastRun \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "Domo dataset. domoDatasetColumnCount \u00b6 Number of columns in the Domo dataset. domoDatasetLastRun \u00b6 An ISO-8601 representation of the time the DataSet was last run. domoDatasetRowCount \u00b6 Number of rows in the Domo dataset. Relationships \u00b6 Inherited relationships These relationships are inherited from DomoDataset 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. applica", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "m DomoDataset 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataCont", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "at are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this ass", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "utPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referen", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "nt name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImpl", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "cess ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "ks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of DomoDataset (and all of its subtypes). domoCards ( DomoCard ) \u00b6 TBC domoDatasetColumns ( DomoDatasetColumn ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedbac", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "( DomoDatasetColumn ) \u00b6 TBC Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/domodataset/", "title": "DomoDataset - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "MicroStrategyProject \u00b6 Instance of a MicroStrategy project in Atlan. Complete reference This is a complete reference for the MicroStrategyProject object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. MicroStrategyProject inherits its attributes and relationships from these other types: classDiagram direction RL class MicroStrategyProject link MicroStrategyProject \"../microstrategyproject\" class MicroStrategy { <<abstract>> } link MicroStrategy \"../microstrategy\" Mic", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "microstrategyproject\" class MicroStrategy { <<abstract>> } link MicroStrategy \"../microstrategy\" MicroStrategy <|-- MicroStrategyProject : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- MicroStrategy : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referencea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "nds class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from MicroStrategyProject 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. class", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metad", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "s and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "ts on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. i", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was la", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomal", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": ". applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data qual", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "ng status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": "kRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": "ion of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "tS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDb", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "och) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git fr", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "t run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "HasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that ma", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "btJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "ation \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "g, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "ble total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Ti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the so", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "c layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Mont", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incide", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "o incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLas", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "nique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetS", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "ount of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "stSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certificati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "de further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is a", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for dis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset h", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "ontract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC last", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "cRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset owne", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "eCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operati", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "ple, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "eQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "yRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cos", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "rRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceRea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different nam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "dTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "RL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "urce system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescripti", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "type of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 L", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) microStrategyCertifiedAt \u00b6 Time (epoch) this asset was certified in MicroStrategy, in milliseconds. microStrategyCertifiedBy \u00b6 User who certified this asset, in MicroStrategy. microStrategyCubeNa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "nds. microStrategyCertifiedBy \u00b6 User who certified this asset, in MicroStrategy. microStrategyCubeNames \u00b6 Simple names of the cubes related to this asset. microStrategyCubeQualifiedNames \u00b6 Unique names of the cubes related to this asset. microStrategyIsCertified \u00b6 Whether the asset is certified in MicroStrategy (true) or not (false). microStrategyLocation \u00b6 Location of this asset in MicroStrategy.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "icroStrategy (true) or not (false). microStrategyLocation \u00b6 Location of this asset in MicroStrategy. microStrategyProjectName \u00b6 Simple name of the project in which this asset exists. microStrategyProjectQualifiedName \u00b6 Unique name of the project in which this asset exists. microStrategyReportNames \u00b6 Simple names of the reports related to this asset. microStrategyReportQualifiedNames \u00b6 Unique names", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "Simple names of the reports related to this asset. microStrategyReportQualifiedNames \u00b6 Unique names of the reports related to this asset. Relationships \u00b6 Inherited relationships These relationships are inherited from MicroStrategyProject 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. application", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "un on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any s", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "s assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "oducts for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( Sc", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos use", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "fRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "parkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "sses from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of MicroStrategyProject (and all of its subtypes). microStrategyAttributes ( MicroStrategyAttribute ) \u00b6 Attributes that exist within this project. microStrategyCubes ( MicroStrategyCube ) \u00b6 Cubes that exist within this project. microStrategyDocuments ( MicroStrateg", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": "( MicroStrategyCube ) \u00b6 Cubes that exist within this project. microStrategyDocuments ( MicroStrategyDocument ) \u00b6 Documents that exist within this project. microStrategyDossiers ( MicroStrategyDossier ) \u00b6 Dossiers that exist within this project. microStrategyFacts ( MicroStrategyFact ) \u00b6 Facts that exist within this project. microStrategyMetrics ( MicroStrategyMetric ) \u00b6 Metrics that exist within", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "exist within this project. microStrategyMetrics ( MicroStrategyMetric ) \u00b6 Metrics that exist within this project. microStrategyReports ( MicroStrategyReport ) \u00b6 Reports that exist within this project. microStrategyVisualizations ( MicroStrategyVisualization ) \u00b6 Visualizations that exist within this project. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "project. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/microstrategyproject/", "title": "MicroStrategyProject - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20400}}, {"content": "AnaplanWorkspace \u00b6 Instances of an AnaplanWorkspace in Atlan. Complete reference This is a complete reference for the AnaplanWorkspace object in Atlan, showing every possible property and relationship that can exist for these objects. For an introduction, you probably want to start with: Snippets \u2014 small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implem", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "small, atomic examples of single-step use cases. Patterns \u2014 walkthroughs of common multi-step implementation patterns. AnaplanWorkspace inherits its attributes and relationships from these other types: classDiagram direction RL class AnaplanWorkspace link AnaplanWorkspace \"../anaplanworkspace\" class Anaplan { <<abstract>> } link Anaplan \"../anaplan\" Anaplan <|-- AnaplanWorkspace : extends class BI", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Anaplan { <<abstract>> } link Anaplan \"../anaplan\" Anaplan <|-- AnaplanWorkspace : extends class BI { <<abstract>> } link BI \"../bi\" BI <|-- Anaplan : extends class Catalog { <<abstract>> } link Catalog \"../catalog\" Catalog <|-- BI : extends class Asset { <<abstract>> } link Asset \"../asset\" Asset <|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "<|-- Catalog : extends class Referenceable { <<abstract>> } link Referenceable \"../referenceable\" Referenceable <|-- Asset : extends Properties \u00b6 Inherited properties These attributes are inherited from AnaplanWorkspace 's supertypes (shown above): typeName \u00b6 Type of this asset. guid \u00b6 Globally-unique identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different nam", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ue identifier for this asset. classifications \u00b6 Tags assigned to the asset. (1) Uses a different name in SDKs atlanTags atlan_tags For more information, see the tag assets snippets. businessAttributes \u00b6 Map of custom metadata attributes and values defined on the asset. (1) Uses a different name in SDKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "DKs customMetadataSets custom_metadata For more information, see the change custom metadata snippets. status \u00b6 Status of the asset. (1) Treat as read-only You should not try to set status on an asset. Instead, see the asset CRUD snippets on deleting and restoring assets. createdBy \u00b6 User or account that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "that created the asset. updatedBy \u00b6 User or account that last updated the asset. createTime \u00b6 Time (epoch) at which the asset was created, in milliseconds. updateTime \u00b6 Time (epoch) at which the asset was last updated, in milliseconds. deleteHandler \u00b6 Details on the handler used for deletion of the asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "asset. (1) Treat as read-only You should not try to set deleteHandler on an asset. Instead, see the asset CRUD snippets on deleting assets. classificationNames \u00b6 Hashed-string names of the Atlan tags that exist on the asset. (1) Uses a different name in SDKs atlanTagNames atlan_tag_names Use classifications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of term", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ications to make changes to tags. isIncomplete \u00b6 Unused. meaningNames \u00b6 Human-readable names of terms that have been linked to this asset. meanings \u00b6 Details of terms that have been linked to this asset. (1) Do not use These should not be used, as they can be inconsistent. Instead, see the link terms and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are y", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "s and assets snippets. pendingTasks \u00b6 Unique identifiers (GUIDs) for any background tasks that are yet to operate on this asset. qualifiedName \u00b6 Unique name for this asset. This is typically a concatenation of the asset's name onto its parent's qualifiedName. This must be unique across all assets of the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2700}}, {"content": "the same type. adminGroups \u00b6 List of groups who administer this asset. (This is only used for certain asset types.) adminRoles \u00b6 List of roles who administer this asset. (This is only used for Connection assets.) adminUsers \u00b6 List of users who administer this asset. (This is only used for certain asset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. an", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3000}}, {"content": "sset types.) announcementMessage \u00b6 Detailed message to include in the announcement on this asset. announcementTitle \u00b6 Brief title for the announcement on this asset. Required when announcementType is specified. announcementType \u00b6 Type of announcement on this asset. announcementUpdatedAt \u00b6 Time (epoch) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3300}}, {"content": "h) at which the announcement was last updated, in milliseconds. announcementUpdatedBy \u00b6 Name of the user who last updated the announcement. applicationFieldQualifiedName \u00b6 Qualified name of the ApplicationField that contains this asset. applicationQualifiedName \u00b6 Qualified name of the Application that contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAno", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3600}}, {"content": "at contains this asset. assetAnomaloAppliedCheckTypes \u00b6 All associated Anomalo check types. assetAnomaloCheckCount \u00b6 Total number of checks present in Anomalo for this asset. assetAnomaloCheckStatuses \u00b6 Stringified JSON object containing status of all Anomalo checks associated to this asset. assetAnomaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 3900}}, {"content": "omaloDQStatus \u00b6 Status of data quality from Anomalo. assetAnomaloFailedCheckCount \u00b6 Total number of checks failed in Anomalo for this asset. assetAnomaloFailedCheckTypes \u00b6 All associated Anomalo failed check types. assetAnomaloLastCheckRunAt \u00b6 Time (epoch) at which the last check was run via Anomalo. assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4200}}, {"content": ". assetAnomaloSourceUrl \u00b6 URL of the source in Anomalo. assetCoverImage \u00b6 TBC assetDbtAccountName \u00b6 Name of the account in which this asset exists in dbt. assetDbtAlias \u00b6 Alias of this asset in dbt. assetDbtEnvironmentDbtVersion \u00b6 Version of the environment in which this asset is materialized in dbt. assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. asse", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4500}}, {"content": ". assetDbtEnvironmentName \u00b6 Name of the environment in which this asset is materialized in dbt. assetDbtJobLastRun \u00b6 Time (epoch) at which the job that materialized this asset in dbt last ran, in milliseconds. assetDbtJobLastRunArtifactS3Path \u00b6 Path in S3 to the artifacts saved from the last run of the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts we", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 4800}}, {"content": "the job that materialized this asset in dbt. assetDbtJobLastRunArtifactsSaved \u00b6 Whether artifacts were saved from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunCreatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that material", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5100}}, {"content": "t created, in milliseconds. assetDbtJobLastRunDequedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was dequeued, in milliseconds. assetDbtJobLastRunExecutedByThreadId \u00b6 Thread ID of the user who executed the last run of the job that materialized this asset in dbt. assetDbtJobLastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5400}}, {"content": "LastRunGitBranch \u00b6 Branch in git from which the last run of the job that materialized this asset in dbt ran. assetDbtJobLastRunGitSha \u00b6 SHA hash in git for the last run of the job that materialized this asset in dbt. assetDbtJobLastRunHasDocsGenerated \u00b6 Whether docs were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGe", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 5700}}, {"content": "of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunHasSourcesGenerated \u00b6 Whether sources were generated from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunNotificationsSent \u00b6 Whether notifications were sent from the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLa", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6000}}, {"content": "rom the last run of the job that materialized this asset in dbt (true) or not (false). assetDbtJobLastRunOwnerThreadId \u00b6 Thread ID of the owner of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunQueuedDuration \u00b6 Total duration the job that materialized this asset in dbt spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6300}}, {"content": "t spent being queued. assetDbtJobLastRunQueuedDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt spend being queued. assetDbtJobLastRunRunDuration \u00b6 Run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialize", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6600}}, {"content": "astRunRunDurationHumanized \u00b6 Human-readable run duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunStartedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was started running, in milliseconds. assetDbtJobLastRunStatusMessage \u00b6 Status message of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 6900}}, {"content": "age of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDuration \u00b6 Total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunTotalDurationHumanized \u00b6 Human-readable total duration of the last run of the job that materialized this asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7200}}, {"content": "his asset in dbt. assetDbtJobLastRunUpdatedAt \u00b6 Time (epoch) at which the job that materialized this asset in dbt was last updated, in milliseconds. assetDbtJobLastRunUrl \u00b6 URL of the last run of the job that materialized this asset in dbt. assetDbtJobName \u00b6 Name of the job that materialized this asset in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this as", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7500}}, {"content": "set in dbt. assetDbtJobNextRun \u00b6 Time (epoch) when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobNextRunHumanized \u00b6 Human-readable time when the next run of the job that materializes this asset in dbt is scheduled. assetDbtJobSchedule \u00b6 Schedule of the job that materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 7800}}, {"content": "materialized this asset in dbt. assetDbtJobScheduleCronHumanized \u00b6 Human-readable cron schedule of the job that materialized this asset in dbt. assetDbtJobStatus \u00b6 Status of the job that materialized this asset in dbt. assetDbtMeta \u00b6 Metadata for this asset in dbt, specifically everything under the 'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8100}}, {"content": "'meta' key in the dbt object. assetDbtPackageName \u00b6 Name of the package in which this asset exists in dbt. assetDbtProjectName \u00b6 Name of the project in which this asset exists in dbt. assetDbtSemanticLayerProxyUrl \u00b6 URL of the semantic layer proxy for this asset in dbt. assetDbtSourceFreshnessCriteria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8400}}, {"content": "ria \u00b6 Freshness criteria for the source of this asset in dbt. assetDbtTags \u00b6 List of tags attached to this asset in dbt. assetDbtTestStatus \u00b6 All associated dbt test statuses. assetDbtUniqueId \u00b6 Unique identifier of this asset in dbt. assetDbtWorkflowLastUpdated \u00b6 Name of the DBT workflow in Atlan that last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 8700}}, {"content": "hat last updated the asset. assetIcon \u00b6 Name of the icon to use for this asset. (Only applies to glossaries, currently.) assetMcAlertQualifiedNames \u00b6 List of unique Monte Carlo alert names attached to this asset. assetMcIncidentNames \u00b6 List of Monte Carlo incident names attached to this asset. assetMcIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIn", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9000}}, {"content": "McIncidentPriorities \u00b6 List of Monte Carlo incident priorities associated with this asset. assetMcIncidentQualifiedNames \u00b6 List of unique Monte Carlo incident names attached to this asset. assetMcIncidentSeverities \u00b6 List of Monte Carlo incident severities associated with this asset. assetMcIncidentStates \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 L", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9300}}, {"content": "States \u00b6 List of Monte Carlo incident states associated with this asset. assetMcIncidentSubTypes \u00b6 List of Monte Carlo incident sub-types associated with this asset. assetMcIncidentTypes \u00b6 List of Monte Carlo incident types associated with this asset. assetMcIsMonitored \u00b6 Tracks whether this asset is monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced fro", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9600}}, {"content": "s monitored by MC or not assetMcLastSyncRunAt \u00b6 Time (epoch) at which this asset was last synced from Monte Carlo. assetMcMonitorNames \u00b6 List of Monte Carlo monitor names attached to this asset. assetMcMonitorQualifiedNames \u00b6 List of unique Monte Carlo monitor names attached to this asset. assetMcMonitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Stat", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 9900}}, {"content": "nitorScheduleTypes \u00b6 Schedules of all associated Monte Carlo monitors. assetMcMonitorStatuses \u00b6 Statuses of all associated Monte Carlo monitors. assetMcMonitorTypes \u00b6 Types of all associated Monte Carlo monitors. assetPoliciesCount \u00b6 Count of policies inside the asset assetPolicyGUIDs \u00b6 Array of policy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckSta", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10200}}, {"content": "icy ids governing this asset assetSodaCheckCount \u00b6 Number of checks done via Soda. assetSodaCheckStatuses \u00b6 All associated Soda check statuses. assetSodaDQStatus \u00b6 Status of data quality from Soda. assetSodaLastScanAt \u00b6 TBC assetSodaLastSyncRunAt \u00b6 TBC assetSodaSourceURL \u00b6 TBC assetTags \u00b6 List of tags attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10500}}, {"content": "gs attached to this asset. assetThemeHex \u00b6 Color (in hexadecimal RGB) to use to represent this asset. certificateStatus \u00b6 Status of this asset's certification. certificateStatusMessage \u00b6 Human-readable descriptive message used to provide further detail to certificateStatus. certificateUpdatedAt \u00b6 Time (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 10800}}, {"content": "me (epoch) at which the certification was last updated, in milliseconds. certificateUpdatedBy \u00b6 Name of the user who last updated the certification of this asset. connectionName \u00b6 Simple name of the connection through which this asset is accessible. connectionQualifiedName \u00b6 Unique name of the connection through which this asset is accessible. connectorName \u00b6 Type of the connector through which th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11100}}, {"content": "ction through which this asset is accessible. connectorName \u00b6 Type of the connector through which this asset is accessible. (1) Uses a different name in SDKs connectorType connector_type dbtQualifiedName \u00b6 Unique name of this asset in dbt. description \u00b6 Description of this asset, for example as crawled from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-r", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11400}}, {"content": "led from a source. Fallback for display purposes, if userDescription is empty. displayName \u00b6 Human-readable name of this asset used for display purposes (in user interface). domainGUIDs \u00b6 Array of domain guids linked to this asset hasContract \u00b6 Whether this asset has contract (true) or not (false). __hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SD", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 11700}}, {"content": "__hasLineage \u00b6 Whether this asset has lineage (true) or not (false). (1) Uses a different name in SDKs hasLineage has_lineage isAIGenerated \u00b6 TBC isDiscoverable \u00b6 Whether this asset is discoverable through the UI (true) or not (false). isEditable \u00b6 Whether this asset can be edited in the UI (true) or not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12000}}, {"content": "r not (false). isPartial \u00b6 TBC lastRowChangedAt \u00b6 Time (epoch) of the last operation that inserted, updated, or deleted rows, in milliseconds. lastSyncRun \u00b6 Name of the last run of the crawler that last synchronized this asset. lastSyncRunAt \u00b6 Time (epoch) at which this asset was last crawled, in milliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicograp", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12300}}, {"content": "lliseconds. lastSyncWorkflowName \u00b6 Name of the crawler that last synchronized this asset. lexicographicalSortOrder \u00b6 Custom order for sorting purpose, managed by client name \u00b6 Name of this asset. Fallback for display purposes, if displayName is empty. nonCompliantAssetPolicyGUIDs \u00b6 Array of policy ids non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12600}}, {"content": "ds non-compliant to this asset ownerGroups \u00b6 List of groups who own this asset. ownerUsers \u00b6 List of users who own this asset. popularityScore \u00b6 Popularity score for this asset. sampleDataUrl \u00b6 URL for sample data for this asset. sourceCostUnit \u00b6 The unit of measure for sourceTotalCost. sourceCreatedAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCrea", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 12900}}, {"content": "dAt \u00b6 Time (epoch) at which this asset was created in the source system, in milliseconds. sourceCreatedBy \u00b6 Name of the user who created this asset, in the source system. sourceEmbedURL \u00b6 URL to create an embed for a resource (for example, an image of a dashboard) within Atlan. sourceLastReadAt \u00b6 Timestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source sy", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13200}}, {"content": "mestamp of most recent read operation. sourceOwners \u00b6 List of owners of this asset, in the source system. sourceQueryComputeCostRecordList \u00b6 List of most expensive warehouses with extra insights. (1) Uses a different name in SDKs sourceQueryComputeCostRecords source_query_compute_cost_records sourceQueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sou", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13500}}, {"content": "QueryComputeCostList \u00b6 List of most expensive warehouse names. (1) Uses a different name in SDKs sourceQueryComputeCosts source_query_compute_costs sourceReadCount \u00b6 Total count of all read operations at source. sourceReadExpensiveQueryRecordList \u00b6 List of the most expensive queries that accessed this asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_qu", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 13800}}, {"content": "is asset. (1) Uses a different name in SDKs sourceReadExpensiveQueryRecords source_read_expensive_query_records sourceReadPopularQueryRecordList \u00b6 List of the most popular queries that accessed this asset. (1) Uses a different name in SDKs sourceReadPopularQueryRecords source_read_popular_query_records sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 Lis", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14100}}, {"content": "rds sourceReadQueryCost \u00b6 Total cost of read queries at source. sourceReadRecentUserRecordList \u00b6 List of usernames with extra insights for the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUserRecords source_read_recent_user_records sourceReadRecentUserList \u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14400}}, {"content": "\u00b6 List of usernames of the most recent users who read this asset. (1) Uses a different name in SDKs sourceReadRecentUsers source_read_recent_users sourceReadSlowQueryRecordList \u00b6 List of the slowest queries that accessed this asset. (1) Uses a different name in SDKs sourceReadSlowQueryRecords source_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 14700}}, {"content": "e_read_slow_query_records sourceReadTopUserRecordList \u00b6 List of usernames with extra insights for the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUserRecords source_read_top_user_records sourceReadTopUserList \u00b6 List of usernames of the users who read this asset the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUser", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15000}}, {"content": "the most. (1) Uses a different name in SDKs sourceReadTopUsers source_read_top_users sourceReadUserCount \u00b6 Total number of unique users that read data from asset. sourceTotalCost \u00b6 Total cost of all operations at source. sourceURL \u00b6 URL to the resource within the source application, used to create a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15300}}, {"content": "a button to view this asset in the source application. sourceUpdatedAt \u00b6 Time (epoch) at which this asset was last updated in the source system, in milliseconds. sourceUpdatedBy \u00b6 Name of the user who last updated this asset, in the source system. starredBy \u00b6 Users who have starred this asset. starredCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with e", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15600}}, {"content": "edCount \u00b6 Number of users who have starred this asset. starredDetailsList \u00b6 List of usernames with extra information of the users who have starred an asset. (1) Uses a different name in SDKs starredDetails starred_details subType \u00b6 Subtype of this asset. tenantId \u00b6 Name of the Atlan workspace in which this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 15900}}, {"content": "ch this asset exists. userDescription \u00b6 Description of this asset, as provided by a user. If present, this will be used for the description in user interface. viewScore \u00b6 View score for this asset. viewerGroups \u00b6 List of groups who can view assets contained in a collection. (This is only used for certain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16200}}, {"content": "rtain asset types.) viewerUsers \u00b6 List of users who can view assets contained in a collection. (This is only used for certain asset types.) anaplanModelName \u00b6 Simple name of the AnaplanModel asset that contains this asset(AnaplanModule and everthing under it's hierarchy). anaplanModelQualifiedName \u00b6 Unique name of the AnaplanModel asset that contains this asset(AnaplanModule and everthing under it", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16500}}, {"content": "Unique name of the AnaplanModel asset that contains this asset(AnaplanModule and everthing under it's hierarchy). anaplanModuleName \u00b6 Simple name of the AnaplanModule asset that contains this asset(AnaplanLineItem, AnaplanList, AnaplanView and everthing under their hierarchy). anaplanModuleQualifiedName \u00b6 Unique name of the AnaplanModule asset that contains this asset(AnaplanLineItem, AnaplanList", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 16800}}, {"content": "dName \u00b6 Unique name of the AnaplanModule asset that contains this asset(AnaplanLineItem, AnaplanList, AnaplanView and everthing under their hierarchy). anaplanSourceId \u00b6 Id/Guid of the Anaplan asset in the source system. anaplanWorkspaceName \u00b6 Simple name of the AnaplanWorkspace asset that contains this asset(AnaplanModel and everthing under it's hierarchy). anaplanWorkspaceQualifiedName \u00b6 Unique", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17100}}, {"content": "this asset(AnaplanModel and everthing under it's hierarchy). anaplanWorkspaceQualifiedName \u00b6 Unique name of the AnaplanWorkspace asset that contains this asset(AnaplanModel and everthing under it's hierarchy). These attributes are specific to instances of AnaplanWorkspace (and all of its subtypes). anaplanWorkspaceAllowanceSize \u00b6 Alloted Size quota for the AnaplanWorkspace from the source system,", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17400}}, {"content": "anaplanWorkspaceAllowanceSize \u00b6 Alloted Size quota for the AnaplanWorkspace from the source system, estimated in MB. anaplanWorkspaceCurrentSize \u00b6 Current Size of the AnaplanWorkspace from the source system, estimated in MB. Relationships \u00b6 Inherited relationships These relationships are inherited from AnaplanWorkspace 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset.", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 17700}}, {"content": "rom AnaplanWorkspace 's supertypes: anomaloChecks ( AnomaloCheck ) \u00b6 Checks that run on this asset. application ( Application ) \u00b6 Application asset containing this Asset. applicationField ( ApplicationField ) \u00b6 ApplicationField asset containing this Asset. meanings ( AtlasGlossaryTerm ) \u00b6 Glossary terms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms d", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18000}}, {"content": "erms that are linked to this asset. (1) Uses a different name in SDKs assignedTerms assigned_terms dataContractLatest ( DataContract ) \u00b6 Latest version of the data contract (in any status) for this asset. dataContractLatestCertified ( DataContract ) \u00b6 Latest certified version of the data contract for this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which t", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18300}}, {"content": "r this asset. files ( File ) \u00b6 TBC inputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an input port. links ( Link ) \u00b6 Links that are attached to this asset. mcIncidents ( MCIncident ) \u00b6 TBC mcMonitors ( MCMonitor ) \u00b6 Monitors that observe this asset. metrics ( Metric ) \u00b6 TBC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. re", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18600}}, {"content": "BC outputPortDataProducts ( DataProduct ) \u00b6 Data products for which this asset is an output port. readme ( Readme ) \u00b6 README that is linked to this asset. schemaRegistrySubjects ( SchemaRegistrySubject ) \u00b6 TBC sodaChecks ( SodaCheck ) \u00b6 TBC userDefRelationshipFrom ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo (", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 18900}}, {"content": "different name in SDKs userDefRelationshipFroms user_def_relationship_froms userDefRelationshipTo ( Referenceable ) \u00b6 TBC (1) Uses a different name in SDKs userDefRelationshipTos user_def_relationship_tos inputToAirflowTasks ( AirflowTask ) \u00b6 Tasks to which this asset provides input. inputToProcesses ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC mo", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19200}}, {"content": "s ( Process ) \u00b6 Processes to which this asset provides input. inputToSparkJobs ( SparkJob ) \u00b6 TBC modelImplementedAttributes ( ModelAttribute ) \u00b6 Attributes implemented by this asset. modelImplementedEntities ( ModelEntity ) \u00b6 Entities implemented by this asset. outputFromAirflowTasks ( AirflowTask ) \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which th", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19500}}, {"content": ") \u00b6 Tasks from which this asset is output. outputFromProcesses ( Process ) \u00b6 Processes from which this asset is produced as output. outputFromSparkJobs ( SparkJob ) \u00b6 TBC These relationships are specific to instances of AnaplanWorkspace (and all of its subtypes). anaplanModels ( AnaplanModel ) \u00b6 AnaplanModel assets contained within this AnaplanWorkspace. Was this page helpful? Thanks for your feed", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 19800}}, {"content": "planModel assets contained within this AnaplanWorkspace. Was this page helpful? Thanks for your feedback! Thanks for your feedback! Help us improve this page by using our feedback form to provide us with more information. Back to top", "metadata": {"source_url": "https://developer.atlan.com/models/entities/anaplanworkspace/", "title": "AnaplanWorkspace - Developer", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 20100}}, {"content": "Cross-workspace extraction Frequently asked questions about Databricks cross-workspace extraction setup and configuration. Cross-workspace extraction issues Troubleshoot common issues in Databricks cross-workspace extraction with error, cause, and solution guidance.", "metadata": {"source_url": "https://docs.atlan.com/tags/service-principal", "title": "2 docs tagged with \"service-principal\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Cross-workspace extraction Frequently asked questions about Databricks cross-workspace extraction setup and configuration. Cross-workspace extraction issues Troubleshoot common issues in Databricks cross-workspace extraction with error, cause, and solution guidance.", "metadata": {"source_url": "https://docs.atlan.com/tags/cross-workspace", "title": "2 docs tagged with \"cross-workspace\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "On this page Atlan crawls and maps the following assets and properties from Metabase. danger Currently Atlan only represents the assets marked with \ud83d\udd00 in lineage. Collections \u200b Atlan maps collections from Metabase to its MetabaseCollection asset type. Source property Atlan property name name slug metabaseSlug color metabaseColor namespace metabaseNamespace personal_owner_id metabaseIsPersonalCollec", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/references/what-does-atlan-crawl-from-metabase", "title": "What does Atlan crawl from Metabase? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "abaseSlug color metabaseColor namespace metabaseNamespace personal_owner_id metabaseIsPersonalCollection Dashboards \ud83d\udd00 \u200b Atlan maps dashboards from Metabase to its MetabaseDashboard asset type. Source property Atlan property name name collection metabaseCollectionName created_at sourceCreatedAt updated_at sourceUpdatedAt last-edit-info sourceUpdatedBy ordered_cards metabaseQuestionCount collection", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/references/what-does-atlan-crawl-from-metabase", "title": "What does Atlan crawl from Metabase? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ed_at sourceUpdatedAt last-edit-info sourceUpdatedBy ordered_cards metabaseQuestionCount collection ( Official ) certificateStatus (VERIFIED) Questions \ud83d\udd00 \u200b Atlan maps questions from Metabase to its MetabaseQuestion asset type. Source property Atlan property name name collection metabaseCollectionName created_at sourceCreatedAt updated_at sourceUpdatedAt last-edit-info sourceUpdatedBy ordered_cards", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/references/what-does-atlan-crawl-from-metabase", "title": "What does Atlan crawl from Metabase? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "e created_at sourceCreatedAt updated_at sourceUpdatedAt last-edit-info sourceUpdatedBy ordered_cards metabaseDashboardCount query_type metabaseQueryType query metabaseQuery collection ( Official ) certificateStatus (VERIFIED) invalid non-native queries certificateStatus (DEPRECATED) Collections Dashboards \ud83d\udd00 Questions \ud83d\udd00", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/references/what-does-atlan-crawl-from-metabase", "title": "What does Atlan crawl from Metabase? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "On this page Atlan currently supports lineage for the Amazon QuickSight connector to the following data sources: Amazon Athena Amazon Redshift Microsoft SQL Server MySQL PostgreSQL Salesforce Snowflake Atlan crawls and maps the following assets and properties from Amazon QuickSight. Analyses \u200b Atlan maps analyses from Amazon QuickSight to its QuickSightAnalysis asset type. Source property Atlan pr", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "maps analyses from Amazon QuickSight to its QuickSightAnalysis asset type. Source property Atlan property name name createdAt sourceCreatedAt updatedAt sourceUpdatedAt status quickSightAnalysisStatus calculatedFields quickSightAnalysisCalculatedFields parameterDeclarations quickSightAnalysisParameterDeclarations filterGroups quickSightAnalysisFilterGroups Dashboards \u200b Atlan maps dashboards from A", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "erDeclarations filterGroups quickSightAnalysisFilterGroups Dashboards \u200b Atlan maps dashboards from Amazon QuickSight to its QuickSightDashboard asset type. Source property Atlan property name name createdAt sourceCreatedAt updatedAt sourceUpdatedAt publishedVersionNumber quickSightDashboardPublishedVersionNumber lastPublishedTime quickSightDashboardLastPublishedTime analysisName quickSightAnalysis", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "VersionNumber lastPublishedTime quickSightDashboardLastPublishedTime analysisName quickSightAnalysisQualifiedName Datasets \u200b Atlan maps datasets from Amazon QuickSight to its QuickSightDataset asset type. Source property Atlan property name name createdAt sourceCreatedAt updatedAt sourceUpdatedAt ImportMode quickSightDatasetImportMode outputColumnCount quickSightDatasetColumnCount Folders \u200b Atlan", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "portMode quickSightDatasetImportMode outputColumnCount quickSightDatasetColumnCount Folders \u200b Atlan maps folders from Amazon QuickSight to its QuickSightFolder asset type. Source property Atlan property name name createdAt sourceCreatedAt updatedAt sourceUpdatedAt FolderType quickSightFolderType SharingModel quickSightFolderSharingModel folderHierarchy quickSightFolderHierarchy Dataset fields \u200b At", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ringModel quickSightFolderSharingModel folderHierarchy quickSightFolderHierarchy Dataset fields \u200b Atlan maps dataset fields from Amazon QuickSight to its QuickSightDatasetField asset type. Source property Atlan property name name createdAt sourceCreatedAt updatedAt sourceUpdatedAt type quickSightDatasetFieldType datasetQualifiedName quickSightDatasetQualifiedName Analysis visuals \u200b Atlan maps anal", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "asetFieldType datasetQualifiedName quickSightDatasetQualifiedName Analysis visuals \u200b Atlan maps analysis visuals from Amazon QuickSight to its QuickSightAnalysisVisual asset type. Source property Atlan property name name createdAt sourceCreatedAt updatedAt sourceUpdatedAt Id quickSightId analysisQualifiedName quickSightAnalysisQualifiedName sheetId quickSightSheetId sheetName quickSightSheetName D", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "lifiedName quickSightAnalysisQualifiedName sheetId quickSightSheetId sheetName quickSightSheetName Dashboard visuals \u200b Atlan maps dashboard visuals from Amazon QuickSight to its QuickSightDashboardVisual asset type. Source property Atlan property name name createdAt sourceCreatedAt updatedAt sourceUpdatedAt Id quickSightId dashboardQualifiedName quickSightDashboardQualifiedName sheetId quickSightS", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "pdatedAt Id quickSightId dashboardQualifiedName quickSightDashboardQualifiedName sheetId quickSightSheetId sheetName quickSightSheetName Analyses Dashboards Datasets Folders Dataset fields Analysis visuals Dashboard visuals", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/amazon-quicksight/references/what-does-atlan-crawl-from-amazon-quicksight", "title": "What does Atlan crawl from Amazon QuickSight? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "On this page Atlan crawls and maps the following assets and properties from Redash. Once you've crawled Redash , you can use connector-specific filters for quick asset discovery. The following filters are currently supported for these assets: Queries - Schedule, Is Published, and Redash tags filters Visualizations - Type filter Dashboards - Redash tags filter danger Currently, Atlan only represent", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/redash/references/what-does-atlan-crawl-from-redash", "title": "What does Atlan crawl from Redash? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "Visualizations - Type filter Dashboards - Redash tags filter danger Currently, Atlan only represents the assets marked with \ud83d\udd00 in lineage. Queries \ud83d\udd00 \u200b Atlan maps queries from Redash to its RedashQuery asset type. Source property Atlan property name name created_at sourceCreatedAt updated_at sourceUpdatedAt query query Dashboards \ud83d\udd00 \u200b Atlan maps dashboards from Redash to its RedashDashboard asset ty", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/redash/references/what-does-atlan-crawl-from-redash", "title": "What does Atlan crawl from Redash? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "datedAt query query Dashboards \ud83d\udd00 \u200b Atlan maps dashboards from Redash to its RedashDashboard asset type. Source property Atlan property widgets widget_count Visualizations \ud83d\udd00 \u200b Atlan maps visualization elements from Redash to its RedashVisualization asset type. Source property Atlan property name name type type Queries \ud83d\udd00 Dashboards \ud83d\udd00 Visualizations \ud83d\udd00", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/redash/references/what-does-atlan-crawl-from-redash", "title": "What does Atlan crawl from Redash? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "On this page Before running the Qlik Sense Cloud crawler , you can run preflight checks to perform the necessary technical validations. The following preflight checks will be completed: Spaces \u200b \u2705 Check successful \u274c Source returned error - for example, 401 authorization required Apps \u200b \u2705 Check successful \u274c Source returned error - for example, 401 authorization required Items \u200b This check tests for", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/references/preflight-checks-for-qlik-sense-cloud", "title": "Preflight checks for Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ssful \u274c Source returned error - for example, 401 authorization required Items \u200b This check tests for access to datasets and other Qlik objects. \u2705 Check successful \u274c Source returned error - for example, 401 authorization required Connections \u200b \u2705 Check successful \u274c Source returned error - for example, 401 authorization required Spaces Apps Items Connections", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/qlik-sense-cloud/references/preflight-checks-for-qlik-sense-cloud", "title": "Preflight checks for Qlik Sense Cloud | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "On this page How do I disable cloning Looker projects from git? \u200b The looker-extractor tool clones your Looker git project to parse field-level lineage. By default, the extractor needs the looker_git_private_key and looker_git_private_key_passphrase secrets. To disable this behavior, you need to set the USE_FIELD_LEVEL_LINEAGE parameter to \"false\" . For example: services: # Example Looker connecti", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "the USE_FIELD_LEVEL_LINEAGE parameter to \"false\" . For example: services: # Example Looker connection looker-example: <<: *extract environment: <<: *looker-defaults INCLUDE_PROJECTS: \"project-1,project-2\" USE_FIELD_LEVEL_LINEAGE: \"false\" volumes: - ./output/looker-example:/output/process secrets: - looker_config secrets: looker_config: file: ./looker.ini Note that we refer to only the looker-conf", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "looker_config secrets: looker_config: file: ./looker.ini Note that we refer to only the looker-config secret in this looker-example service. This is possible because the USE_FIELD_LEVEL_LINEAGE environment variable is set to \"false\" . How do I use different credentials for different connections? \u200b You may define as many Looker connections under the services section as you want. As mentioned befor", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "You may define as many Looker connections under the services section as you want. As mentioned before, by default each connection requires the following secrets: looker_config looker_git_private_key looker_git_private_key_passphrase You may want to define many connections with different credentials. For example, you may want to extract field-level lineage for some projects and not for others. To d", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "For example, you may want to extract field-level lineage for some projects and not for others. To do this, you need to define and refer to those secrets separately for each connection. For example: services: # The first-connection uses secrets with default names, # so no need to specify its own `secrets` section first-connection: <<: *extract environment: <<: *looker-defaults INCLUDE_PROJECTS: \"p", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "crets` section first-connection: <<: *extract environment: <<: *looker-defaults INCLUDE_PROJECTS: \"project-1\" USE_FIELD_LEVEL_LINEAGE: \"true\" volumes: - ./output/first-connection:/output/process # The second-connection uses alternative secrets, # so it defines its own `secrets` section to refer to them second-connection: <<: *extract environment: <<: *looker-defaults INCLUDE_PROJECTS: \"project-2\"", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "hem second-connection: <<: *extract environment: <<: *looker-defaults INCLUDE_PROJECTS: \"project-2\" USE_FIELD_LEVEL_LINEAGE: \"true\" volumes: - ./output/first-connection:/output/process secrets: - target: looker_config source: alternative_config - target: looker_git_private_key source: alternative_private_key - target: looker_git_private_key_passphrase source: alternative_key_passphrase secrets: #", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "ivate_key - target: looker_git_private_key_passphrase source: alternative_key_passphrase secrets: # Credentials for the first-connection (default names) looker_config: file: ./looker.ini looker_git_private_key: file: ./id_rsa looker_git_private_key_passphrase: file: ./passphrase.txt # Credentials for the second-connection alternative_config: file: ./path/to/alternative/looker.ini alternative_priva", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "r the second-connection alternative_config: file: ./path/to/alternative/looker.ini alternative_private_key: file: ./path/to/alternative/id_rsa alternative_key_passphrase: file: ./path/to/alternative/passphrase.txt In the second-connection secrets list, note that: the target attribute gives the default name of the secret the extractor expects the source attribute gives the alternative secret name", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/looker/troubleshooting/troubleshooting-on-premises-looker-connectivity", "title": "Troubleshooting on-premises Looker connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Cross-workspace extraction Frequently asked questions about Databricks cross-workspace extraction setup and configuration. Cross-workspace extraction issues Troubleshoot common issues in Databricks cross-workspace extraction with error, cause, and solution guidance.", "metadata": {"source_url": "https://docs.atlan.com/tags/metastore", "title": "2 docs tagged with \"metastore\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Atlan AI Integrate and leverage Atlan AI capabilities for enhanced data documentation, and lineage analysis. Atlan MCP Overview Learn what the Atlan MCP server is, what it enables, and how to connect using Remote or Local setup.", "metadata": {"source_url": "https://docs.atlan.com/tags/ai", "title": "2 docs tagged with \"AI\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Automatically assign roles based on group names Learn how to automatically assign roles and sub-roles to users in Atlan based on their group memberships using the group-role sync app. User Role Sync Complete configuration reference for the User Role Sync app properties and settings.", "metadata": {"source_url": "https://docs.atlan.com/tags/roles", "title": "2 docs tagged with \"roles\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "In Microsoft Power BI: Data source - a data source is any source that fuels a dataset. You can connect to different types of data sources, such as databases, files, Microsoft Fabric, and more, to fetch data directly into Microsoft Power BI for creating reports and dashboards. For a full list, refer to Microsoft Power BI documentation . Dataflows - data flows help you encode the process of extracti", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microsoft-power-bi/faq/power-bi-dataflow-datasource", "title": "What is the difference between a Power BI data source and dataflow? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "to Microsoft Power BI documentation . Dataflows - data flows help you encode the process of extracting and transforming data from a data source to produce a dataset. These have a refresh frequency that keeps the dataset in sync with the data source. To learn more, refer to Microsoft Power BI documentation .", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/microsoft-power-bi/faq/power-bi-dataflow-datasource", "title": "What is the difference between a Power BI data source and dataflow? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "On this page Atlan crawls and maps the following assets and properties from Amazon DynamoDB. Atlan also currently supports lineage between Amazon DynamoDB as a source to supported data warehouses as destinations, as enriched by Fivetran. Tables \u200b Atlan maps tables from Amazon DynamoDB to its DynamoDBTable asset type. Source property Atlan property Where in Atlan TableName name asset profile and ov", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "BTable asset type. Source property Atlan property Where in Atlan TableName name asset profile and overview sidebar ItemCount rowCount asset preview and profile, overview sidebar TableSizeBytes sizeBytes asset filter and overview sidebar AttributeDefinitions noSQLSchemaDefinition asset profile HASH key in KeySchema dynamoDBPartitionKey asset profile and overview sidebar RANGE key in KeySchema dynam", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ey in KeySchema dynamoDBPartitionKey asset profile and overview sidebar RANGE key in KeySchema dynamoDBSortKey asset profile and overview sidebar TableStatus dynamoDBStatus asset profile and overview sidebar CreationDateTime sourceCreatedAt asset profile and overview sidebar ProvisionedThroughput.ReadCapacityUnits dynamoDBReadCapacityUnits asset profile and overview sidebar ProvisionedThroughput.W", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "adCapacityUnits dynamoDBReadCapacityUnits asset profile and overview sidebar ProvisionedThroughput.WriteCapacityUnits dynamoDBWriteCapacityUnits asset profile and overview sidebar Global secondary indexes \u200b Atlan maps global secondary indexes (GSI) from Amazon Dynamo DB to its DynamoDBGlobalSecondaryIndex asset type. Source property Atlan property Where in Atlan ItemName name asset profile and ove", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "yIndex asset type. Source property Atlan property Where in Atlan ItemName name asset profile and overview sidebar IndexCount rowCount asset preview and profile, overview sidebar IndexSizeBytes sizeBytes asset filter and overview sidebar IndexStatus dynamoDBStatus asset profile and overview sidebar HASH key in KeySchema dynamoDBPartitionKey asset profile and overview sidebar RANGE key in KeySchema", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ASH key in KeySchema dynamoDBPartitionKey asset profile and overview sidebar RANGE key in KeySchema dynamoDBSortKey asset profile and overview sidebar Projection.ProjectionType dynamoDBSecondaryIndexProjectionType asset profile and overview sidebar ProvisionedThroughput.ReadCapacityUnits dynamoDBReadCapacityUnits asset profile and overview sidebar ProvisionedThroughput.WriteCapacityUnits dynamoDBW", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "dCapacityUnits asset profile and overview sidebar ProvisionedThroughput.WriteCapacityUnits dynamoDBWriteCapacityUnits asset profile and overview sidebar Local secondary indexes \u200b Atlan maps local secondary indexes (LSI) from Amazon Dynamo DB to its DynamoDBLocalSecondaryIndex asset type. Source property Atlan property Where in Atlan IndexName name asset profile and overview sidebar ItemCount rowCo", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "erty Atlan property Where in Atlan IndexName name asset profile and overview sidebar ItemCount rowCount asset preview and profile, overview sidebar IndexSizeBytes sizeBytes asset filter and overview sidebar HASH key in KeySchema dynamoDBPartitionKey asset profile and overview sidebar RANGE key in KeySchema dynamoDBSortKey asset profile and overview sidebar Projection.ProjectionType dynamoDBSeconda", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "ySchema dynamoDBSortKey asset profile and overview sidebar Projection.ProjectionType dynamoDBSecondaryIndexProjectionType asset profile and overview sidebar Tables Global secondary indexes Local secondary indexes", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/amazon-dynamodb/references/what-does-atlan-crawl-from-amazon-dynamodb", "title": "What does Atlan crawl from Amazon DynamoDB? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2400}}, {"content": "Build custom app Create a local file extraction application from scratch using the patterns and tools you learned Run your first sample app Download and run the Hello World sample application to see an Atlan app in action", "metadata": {"source_url": "https://docs.atlan.com/tags/temporal", "title": "2 docs tagged with \"temporal\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Basic Platform Usage Essential information about using Atlan's core features, from browser requirements to data querying and asset management. Getting Started and Onboarding Everything you need to know when starting with Atlan - from trials and demos to deployment options and implementation requirements.", "metadata": {"source_url": "https://docs.atlan.com/tags/faq-platform", "title": "2 docs tagged with \"faq-platform\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Administration and Configuration Complete guide to administering and configuring your Atlan workspace, from basic settings to advanced customization. User Management and Access Control Complete guide to managing users, configuring access controls, and understanding permissions in Atlan.", "metadata": {"source_url": "https://docs.atlan.com/tags/faq-administration", "title": "2 docs tagged with \"faq-administration\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Enable auto re-attachment of rules Learn how to enable automatic re-attachment of data quality rules to Snowflake tables and views. What's auto re-attachment Understand automatic re-attachment of data quality rules to assets that are dropped and recreated.", "metadata": {"source_url": "https://docs.atlan.com/tags/auto-re-attachment", "title": "2 docs tagged with \"auto-re-attachment\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Preflight Checks for Cloudera Impala Learn about preflight checks for cloudera impala. Troubleshooting Apache Spark/OpenLineage connectivity Learn about troubleshooting apache spark/openlineage connectivity. What does Atlan crawl from Cloudera Impala? Learn about what does atlan crawl from cloudera impala?. What does Atlan crawl from Confluent Schema Registry? Atlan crawls and maps the following a", "metadata": {"source_url": "https://docs.atlan.com/tags/schema-monitoring", "title": "5 docs tagged with \"schema-monitoring\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "impala?. What does Atlan crawl from Confluent Schema Registry? Atlan crawls and maps the following assets and properties from Confluent Schema Registry. What does Atlan crawl from SAP HANA? Atlan crawls and maps the following assets and properties from SAP HANA.", "metadata": {"source_url": "https://docs.atlan.com/tags/schema-monitoring", "title": "5 docs tagged with \"schema-monitoring\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Architecture Architecture overview and core components of Secure Agent 2.0 Customer environment security Customer environment security best practices for deploying and operating Secure Agent 2.0 Deployment and security Frequently asked questions about Secure Agent 2.0 deployment and security Deployment options Understand how Secure Agent 2.0 deploys across different container environments. Develop", "metadata": {"source_url": "https://docs.atlan.com/tags/deployment", "title": "5 docs tagged with \"deployment\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "ent options Understand how Secure Agent 2.0 deploys across different container environments. Development and Deployment Questions about developing, deploying, and managing apps through the Atlan App Marketplace.", "metadata": {"source_url": "https://docs.atlan.com/tags/deployment", "title": "5 docs tagged with \"deployment\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "On this page Configure your Snowflake warehouses following these best practices to achieve optimal performance and reliability for Atlan data workflows. These recommendations establish predictable resource allocation and maximize workflow efficiency. Configure warehouse allocation \u200b Use a dedicated warehouse for Atlan workflows : Assign a dedicated warehouse exclusively for Atlan operations. This", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/best-practices/snowflake-warehouse-configuration", "title": "Snowflake warehouse configuration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "warehouse for Atlan workflows : Assign a dedicated warehouse exclusively for Atlan operations. This approach separates warehouse performance from other workloads, enables precise cost tracking for Atlan operations, and provides consistent workflow performance. One warehouse per connection : Provision one Snowflake warehouse for each Atlan connection to maintain scoped capacity and predictable reso", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/best-practices/snowflake-warehouse-configuration", "title": "Snowflake warehouse configuration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "n one Snowflake warehouse for each Atlan connection to maintain scoped capacity and predictable resource allocation. Configure statement timeout \u200b Set appropriate timeout values : If your account enforces timeouts, configure both STATEMENT_TIMEOUT_IN_SECONDS and STATEMENT_QUEUED_TIMEOUT_IN_SECONDS to at least 6 hours (21,600 seconds) for the Atlan user to accommodate comprehensive data cataloging", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/best-practices/snowflake-warehouse-configuration", "title": "Snowflake warehouse configuration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "o at least 6 hours (21,600 seconds) for the Atlan user to accommodate comprehensive data cataloging workflows. Default values work well : By default, both parameters are set to 0 (no limit), which is optimal for Atlan operations. Only adjust if your organization requires specific timeout enforcement. Apply at user level : Configure timeouts at the user level for consistent behavior across all Atla", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/best-practices/snowflake-warehouse-configuration", "title": "Snowflake warehouse configuration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": ". Apply at user level : Configure timeouts at the user level for consistent behavior across all Atlan sessions rather than at warehouse or session level. Configure warehouse allocation Configure statement timeout", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/snowflake/best-practices/snowflake-warehouse-configuration", "title": "Snowflake warehouse configuration | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "Automatically assign roles based on group names Learn how to automatically assign roles and sub-roles to users in Atlan based on their group memberships using the group-role sync app. User Role Sync Complete configuration reference for the User Role Sync app properties and settings.", "metadata": {"source_url": "https://docs.atlan.com/tags/user-groups", "title": "2 docs tagged with \"user groups\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "On this page What are the known limitations of the Amazon Redshift connector? \u200b If you run the miner for an Amazon Redshift connection with Serverless deployment type, lineage will be missing for queries with comments included. This is a limitation of AWS - queries with comments do not include line breaks when fetched from query history. Why do I get an error when querying an external schema in Am", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/troubleshooting/troubleshooting-amazon-redshift-connectivity", "title": "Troubleshooting Amazon Redshift connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "breaks when fetched from query history. Why do I get an error when querying an external schema in Amazon Redshift? \u200b Atlan currently does not support search paths for external schemas and tables in Amazon Redshift. If you would like to query an external schema in Amazon Redshift from Atlan, you will need to write the query in Insights with the fully qualified name and keep the editor context empty", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/troubleshooting/troubleshooting-amazon-redshift-connectivity", "title": "Troubleshooting Amazon Redshift connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "need to write the query in Insights with the fully qualified name and keep the editor context empty - for example, select * db.schema.table and as shown here: Does Atlan support connecting to Amazon Redshift via SSL? \u200b Yes, Atlan supports connecting to Amazon Redshift over the Secure Sockets Layer (SSL) protocol. If your Amazon Redshift cluster is configured to require an SSL connection, with the", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/troubleshooting/troubleshooting-amazon-redshift-connectivity", "title": "Troubleshooting Amazon Redshift connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "(SSL) protocol. If your Amazon Redshift cluster is configured to require an SSL connection, with the require_SSL parameter set to true , Atlan will be able to connect to your cluster.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/data-warehouses/amazon-redshift/troubleshooting/troubleshooting-amazon-redshift-connectivity", "title": "Troubleshooting Amazon Redshift connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Crawl S3 assets Configure and run the S3 crawler to catalog your Amazon S3 buckets and objects in Atlan. Set up Amazon S3 Create AWS IAM permissions and credentials for Atlan to access and catalog your S3 buckets and objects. Set up Inventory reports Create Inventory report for Amazon S3 in case of inventory based ingestion through the crawler. What does Atlan crawl from Amazon S3 Complete referen", "metadata": {"source_url": "https://docs.atlan.com/tags/amazon-s-3", "title": "4 docs tagged with \"amazon-s3\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "inventory based ingestion through the crawler. What does Atlan crawl from Amazon S3 Complete reference for the S3 assets and properties that Atlan crawls and maps during S3 cataloging.", "metadata": {"source_url": "https://docs.atlan.com/tags/amazon-s-3", "title": "4 docs tagged with \"amazon-s3\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "Before running the Cloudera Impala you can run preflight checks to perform the necessary technical validations. The following preflight checks will be completed: Assets Schema Permission \u2705 Check successful \u274c Check failed. Failed to connect to the Impala cluster.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/database/cloudera-impala/references/preflight-checks-for-cloudera-impala", "title": "Preflight Checks for Cloudera Impala | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Add impact analysis in GitHub Learn about add impact analysis in github. Add impact analysis in GitLab Learn about add impact analysis in gitlab. Atlan AI security Atlan uses [Azure OpenAI Service](https://azure.microsoft.com/en-in/products/cognitive-services/openai-service) to power Atlan AI. Specifically, Atlan uses GPT-4o, a large, pretrained AI model. Data Models Data models provide a framewor", "metadata": {"source_url": "https://docs.atlan.com/tags/model", "title": "13 docs tagged with \"model\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "fically, Atlan uses GPT-4o, a large, pretrained AI model. Data Models Data models provide a framework to describe how data is structured, organized, and related within a system. It acts as a blueprint for organizations to design their business applications and processes. Data models can be of different types: relational, hierarchical, entity relationship, and network. Migrate from dbt to Atlan act", "metadata": {"source_url": "https://docs.atlan.com/tags/model", "title": "13 docs tagged with \"model\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "ent types: relational, hierarchical, entity relationship, and network. Migrate from dbt to Atlan action The dbt-action is a custom action designed to perform impact analysis on changes to your dbt models in a [GitHub](/apps/connectors/etl-tools/dbt/how-tos/. Set up dbt Cloud :::warning Who can do this? You will probably need your dbt Cloud administrator to complete these steps - you may not have a", "metadata": {"source_url": "https://docs.atlan.com/tags/model", "title": "13 docs tagged with \"model\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "is? You will probably need your dbt Cloud administrator to complete these steps - you may not have access yourself. Set up Local MCP Server The Atlan Model Context Protocol (MCP) server enables seamless interaction between external tools and Atlan services. It defines the data structures and conventions used to prepare and transmit context for model execution, making it easier to integrate Atlan i", "metadata": {"source_url": "https://docs.atlan.com/tags/model", "title": "13 docs tagged with \"model\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "ions used to prepare and transmit context for model execution, making it easier to integrate Atlan into your existing workflows. Troubleshooting data models What are the known limitations of data models in Atlan? view data models Once you have [ingested your ER model assets in Atlan](/product/capabilities/data-models/concepts/what-are-data-models), you can:. What does Atlan crawl from Looker? Atla", "metadata": {"source_url": "https://docs.atlan.com/tags/model", "title": "13 docs tagged with \"model\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "lities/data-models/concepts/what-are-data-models), you can:. What does Atlan crawl from Looker? Atlan crawls and maps the following assets and properties from Looker. What does Atlan crawl from Sisense? Atlan crawls and maps the following assets and properties from Sisense. What is the difference between a Power BI data source and dataflow? Learn about what is the difference between a power bi dat", "metadata": {"source_url": "https://docs.atlan.com/tags/model", "title": "13 docs tagged with \"model\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "tween a Power BI data source and dataflow? Learn about what is the difference between a power bi data source and dataflow?. Why is the SQL query visible only in Snowflake process and not in dbt process nodes? Atlan displays SQL queries for dbt process nodes between SQL tables and also on dbt models. However, Atlan does not display dbt process nodes between two dbt assets - for example, between two", "metadata": {"source_url": "https://docs.atlan.com/tags/model", "title": "13 docs tagged with \"model\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1800}}, {"content": "However, Atlan does not display dbt process nodes between two dbt assets - for example, between two models. This is because Atlan does not use any SQL query to generate this type of lineage.", "metadata": {"source_url": "https://docs.atlan.com/tags/model", "title": "13 docs tagged with \"model\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 2100}}, {"content": "Rules and dimensions Reference for available data quality rules and classification dimensions in Snowflake data quality. What's Data Quality Studio Understand Atlan's Data Quality Studio and how it enables business and data teams to collaborate on defining, monitoring, and enforcing data quality expectations", "metadata": {"source_url": "https://docs.atlan.com/tags/rules", "title": "2 docs tagged with \"rules\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "Preflight Checks for Cloudera Impala Learn about preflight checks for cloudera impala. Troubleshooting Apache Spark/OpenLineage connectivity Learn about troubleshooting apache spark/openlineage connectivity. What does Atlan crawl from Cloudera Impala? Learn about what does atlan crawl from cloudera impala?. What does Atlan crawl from Confluent Schema Registry? Atlan crawls and maps the following a", "metadata": {"source_url": "https://docs.atlan.com/tags/schema-drift", "title": "5 docs tagged with \"schema-drift\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "impala?. What does Atlan crawl from Confluent Schema Registry? Atlan crawls and maps the following assets and properties from Confluent Schema Registry. What does Atlan crawl from SAP HANA? Atlan crawls and maps the following assets and properties from SAP HANA.", "metadata": {"source_url": "https://docs.atlan.com/tags/schema-drift", "title": "5 docs tagged with \"schema-drift\" | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "On this page Atlan crawls and maps the following assets and properties from Sigma. danger Currently, Atlan only represents the assets marked with \ud83d\udd00 in lineage. For your Sigma workbooks , Atlan also provides asset previews to help with quick discovery and give you the context you need. Workbooks \ud83d\udd00 \u200b Atlan maps workbooks from Sigma to its SigmaWorkbook asset type. Source property Atlan property Wher", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/references/what-does-atlan-crawl-from-sigma", "title": "What does Atlan crawl from Sigma? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "Atlan maps workbooks from Sigma to its SigmaWorkbook asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar createdAt sourceCreatedAt asset profile and properties sidebar updatedAt sourceUpdatedAt asset profile and properties sidebar url sourceURL overview sidebar Pages \ud83d\udd00 \u200b Atlan maps pages from Sigma to its SigmaPage asset type. Source property Atla", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/references/what-does-atlan-crawl-from-sigma", "title": "What does Atlan crawl from Sigma? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "view sidebar Pages \ud83d\udd00 \u200b Atlan maps pages from Sigma to its SigmaPage asset type. Source property Atlan property Where in Atlan title name asset profile and overview sidebar Data elements \ud83d\udd00 \u200b Atlan maps table, pivot table, and visualization elements from Sigma to its SigmaDataElement asset type. Source property Atlan property Where in Atlan displayName name asset profile and overview sidebar type ty", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/references/what-does-atlan-crawl-from-sigma", "title": "What does Atlan crawl from Sigma? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "e property Atlan property Where in Atlan displayName name asset profile and overview sidebar type type overview sidebar Data element fields \ud83d\udd00 \u200b Atlan maps table, pivot table, and visualization element fields from Sigma to its SigmaDataElementField asset type. Source property Atlan property Where in Atlan displayName name asset profile and overview sidebar Datasets \u200b Atlan maps datasets from Sigma", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/references/what-does-atlan-crawl-from-sigma", "title": "What does Atlan crawl from Sigma? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 900}}, {"content": "Atlan displayName name asset profile and overview sidebar Datasets \u200b Atlan maps datasets from Sigma to its SigmaDataset asset type. Source property Atlan property Where in Atlan name name asset profile and overview sidebar createdAt sourceCreatedAt asset profile and properties sidebar updatedAt sourceUpdatedAt asset profile and properties sidebar url sourceURL overview sidebar Workbooks \ud83d\udd00 Pages \ud83d\udd00", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/references/what-does-atlan-crawl-from-sigma", "title": "What does Atlan crawl from Sigma? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1200}}, {"content": "ceUpdatedAt asset profile and properties sidebar url sourceURL overview sidebar Workbooks \ud83d\udd00 Pages \ud83d\udd00 Data elements \ud83d\udd00 Data element fields \ud83d\udd00 Datasets", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/sigma/references/what-does-atlan-crawl-from-sigma", "title": "What does Atlan crawl from Sigma? | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 1500}}, {"content": "On this page What are the known limitations of the ThoughtSpot connector? \u200b Atlan currently does not support the following: Column-level lineage between ThoughSpot tables and views. Upstream lineage to source assets for ThoughtSpot views", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/thoughtspot/troubleshooting/troubleshooting-thoughtspot-connectivity", "title": "Troubleshooting ThoughtSpot connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "On this page Before running the Metabase crawler , you can run preflight checks to perform the necessary technical validations. The following preflight checks will be completed: Collection count \u200b \u2705 Collection count check passed. Total collections: <collection count> \u274c Total collections: 0 or source returned error Dashboard count \u200b \u2705 Dashboard count check passed. Total dashboards: <dashboard count", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/references/preflight-checks-for-metabase", "title": "Preflight checks for Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 0}}, {"content": "returned error Dashboard count \u200b \u2705 Dashboard count check passed. Total dashboards: <dashboard count> \u274c Total dashboards: 0 or source returned error Question count \u200b \u2705 Question count check passed. Total questions: <question count> \u274c Total questions: 0 or source returned error Native query editing permission \u200b \u2705 Check successful \u274c Check failed. Missing native query editing permission on the followi", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/references/preflight-checks-for-metabase", "title": "Preflight checks for Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 300}}, {"content": "rmission \u200b \u2705 Check successful \u274c Check failed. Missing native query editing permission on the following databases: <database list> Collection count Dashboard count Question count Native query editing permission", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/metabase/references/preflight-checks-for-metabase", "title": "Preflight checks for Metabase | Atlan Documentation", "section_index": 0, "chunk_type": "overlapping", "chunk_start": 600}}, {"content": "Discovery Find, understand, and use data assets across your organization with powerful search, filtering, and browsing features. Discovery FAQs Frequently asked questions about Atlan's Discovery capabilities.", "metadata": {"source_url": "https://docs.atlan.com/tags/search", "title": "2 docs tagged with \"search\" | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}, {"content": "On this page Does Atlan crawl unpublished dashboards? \u200b Atlan does not support crawling unpublished dashboards. Unlike unpublished queries, unpublished dashboards are only visible to the users who created them in Redash. Why don't I see Redash alerts? \u200b Atlan currently does not support Redash alerts as assets.", "metadata": {"source_url": "https://docs.atlan.com/apps/connectors/business-intelligence/redash/troubleshooting/troubleshooting-redash-connectivity", "title": "Troubleshooting Redash connectivity | Atlan Documentation", "section_index": 0, "chunk_type": "complete_section"}}]